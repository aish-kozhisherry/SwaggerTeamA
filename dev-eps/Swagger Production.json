{
	"swagger": "2.0",
	"info": {
		"version": "v1",
		"title": "Dash API V1"
	},
	"host": "qa.api.realogy.com",
	"basePath": "/dashapiv1",
	"schemes": [
		"https"
	],
	"paths": {
		"/buyersellertransactions": {
			"get": {
				"tags": [
					"BuyerSellerTransactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CSDELTA').toggle();\" />\r\n  <div id=\"CSDELTA\">\r\n    <br />\r\n          This method is used to search for the Buyer/Seller who participated in a transaction for the brand.\r\n          <div class=\"businessRule\"><br /><b><u>Business Rules:</u></b><ol><li>Company GUID is mandatory</li></ol></div></div>\r\n</remarks>",
				"operationId": "BuyerSellerTransactions_Search",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "companyGuid",
						"in": "query",
						"description": "This parameter represents the Company GUID. This is a required parameter and the value should be the Company GUID of the Company for which the Buyer/Seller Search need to be performed.\r\nThis should be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "officeGuid",
						"in": "query",
						"description": "This parameter represents the Office GUID. This is a collection and the value should be the Office GUID of the Office for which the Buyer/Seller Search need to be performed.\r\nThis should be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"format": "uuid"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "transactionType",
						"in": "query",
						"description": "This parameter represents the type of the transaction for which the Buyer/Seller should be searched for. The allowed values are Residential Sale, Commercial Sale",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "isListSide",
						"in": "query",
						"description": "This parameter indicates whether a buyer/seller needs to be searched for i.e. if the value is set to true, the search will be performed to pick the Seller and if the value is set to false, the search will be performed to pick the Buyer. If the value is not passed, then the operation will search for all the types.",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "isPerson",
						"in": "query",
						"description": "This parameter indicates whether the operation should search for Persons or Business Entities. If the value is not passed, both Person and Business Entities will be searched",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "myBuyerSellerOnly",
						"in": "query",
						"description": "This parameter indicates whether the operation should search for Buyer/Seller who were part of my transactions. If the value is not passed, all buyer and seller for my brokerage transaction will be returned",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "stateProvince",
						"in": "query",
						"description": "This parameter represents the state province of the property for which the Buyer/Seller should be be searched for",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "This parameter represents the city of the property for which the Buyer/Seller should be be searched for",
						"required": false,
						"type": "string"
					},
					{
						"name": "postalCode",
						"in": "query",
						"description": "This parameter represents the Postal Code of the property for which the Buyer/Seller should be be searched for",
						"required": false,
						"type": "string"
					},
					{
						"name": "maxCloseDate",
						"in": "query",
						"description": "This parameter represents the maximum close date of the transaction for which the Buyer/Seller should be be searched for.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "minCloseDate",
						"in": "query",
						"description": "This parameter represents the minimum close date of the transaction for which the Buyer/Seller should be be searched for.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "maxClosingPrice",
						"in": "query",
						"description": "This parameter represents the maximum closing price of the transaction for which the Buyer/Seller should be be searched for",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "minClosingPrice",
						"in": "query",
						"description": "This parameter represents the minimum closing price of the transaction for which the Buyer/Seller should be be searched for",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "This parameter represents the attribute name based on which the result should be sorted. The allowed values are ClosedDate, ClosingPrice",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortOrder",
						"in": "query",
						"description": "This parameter represents the order in which the results should be sorted. The allowed values are  Asc, Desc",
						"required": false,
						"type": "string"
					},
					{
						"name": "top",
						"in": "query",
						"description": "This parameter represents number of records in the queried collection to be included in the result\r\nDefault Value: 100\r\nMax Value: 1000",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "skip",
						"in": "query",
						"description": "This parameter represents number of records in the queried collection that are to be skipped and not included in the result\r\nDefault Value: 0\r\nMax Value: 100000",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "agentGuid",
						"in": "query",
						"description": "This parameter represents the Agent GUID and value should be the Agent GUID for which the Buyer/Seller Search need to be performed.\r\nThis should be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": false,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "hasActiveAgent",
						"in": "query",
						"description": "This parameter indicates whether the operation should search for active or in-active associated agents to transactions. If the value is not passed, search includes both active and in-active associated agents to transactions",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/BuyerSellerTransactionSearchResponse"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/GeneralError"
						}
					},
					"500": {
						"description": "InternalServerError",
						"schema": {
							"$ref": "#/definitions/GeneralError"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/buyersellertransactions/{guid}": {
			"get": {
				"tags": [
					"BuyerSellerTransactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GETCU').toggle();\" />\r\n  <div id=\"GETCU\">\r\n    <br />\r\n          This method is to get the details of the Buyer/Seller for a transaction by passing the identifier for the Buyer/Seller for a transaction\r\n          <div class=\"businessRule\"><br /><b><u>Business Rules:</u></b><ol><li>BuyerSeller Transaction Guid is mandatory</li></ol></div></div>\r\n</remarks>",
				"operationId": "BuyerSellerTransactions_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "guid",
						"in": "path",
						"description": "Unique identifier of the Buyer/Seller for the transaction. This should be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/BuyerSellerTransaction"
						}
					},
					"400": {
						"description": "BadRequest",
						"schema": {
							"$ref": "#/definitions/GeneralError"
						}
					},
					"404": {
						"description": "NotFound",
						"schema": {
							"$ref": "#/definitions/GeneralError"
						}
					},
					"500": {
						"description": "InternalServerError",
						"schema": {
							"$ref": "#/definitions/GeneralError"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/codevalues": {
			"get": {
				"tags": [
					"CodeValues"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GCBC').toggle();\" />\r\n  <div id=\"GCBC\">\r\n    <ul>\r\n      <li>This method will be used to retrieve the code values for a category by supplying the category name</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CodeValues_Search",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "brand",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": true,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "categoryName",
						"in": "query",
						"description": "This parameter represents the Category Name for which the code values need to be retrieved",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CodeValue"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/codevalues/features": {
			"get": {
				"tags": [
					"CodeValues"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GF').toggle();\" />\r\n  <div id=\"GF\">\r\n    <ul>\r\n      <li>This method will be used to retrieve the features for a feature category (can be Listing or Property)</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CodeValues_SearchFeatures",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "brand",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": true,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "featureCategory",
						"in": "query",
						"description": "This parameter represents the Feature Category for which the features need to be retrieved. Feature Category can be Listing or Property",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Feature"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/codevalues/propertystyles": {
			"get": {
				"tags": [
					"CodeValues"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GPS').toggle();\" />\r\n  <div id=\"GPS\">\r\n    <ul>\r\n      <li>This method will be used to retrieve the Property Styles for a supplied Property Subtype</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CodeValues_SearchPropertyStyles",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "brand",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": true,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "propertySubtype",
						"in": "query",
						"description": "This parameter represents the Property Sub Type for which the styles need to be retrieved",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CodeValue"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/consumer/listings/commercialleases/{listingGuid}": {
			"get": {
				"tags": [
					"CommercialLeaseListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CLGETC').toggle();\" />\r\n  <div id=\"CLGETC\">\r\n    <ul>\r\n      <li>This method is to get the Commercial Lease Listing details by passing ListingGUID</li>\r\n      <li>This method will be called after a delta call to get details on the updated listings or after adding a new listing.</li>\r\n      <li>This action will return only Available listings.</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If a Commercial Lease Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CommercialLeaseListings_GetConsumer",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "listingGuid",
						"in": "path",
						"description": "This parameter represents the Listing GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CommercialLeaseListingConsumer"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/consumer/listings/commercialsales/{listingGuid}": {
			"get": {
				"tags": [
					"CommercialSaleListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CSLGETC').toggle();\" />\r\n  <div id=\"CSLGETC\">\r\n    <ul>\r\n      <li>This method is to get the Commercial Sale Listing details by passing ListingGUID</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Listing</li>\r\n      <li>This action will return only active/pending listings</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If a Commercial Sale Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CommercialSaleListings_GetConsumer",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "listingGuid",
						"in": "path",
						"description": "This parameter represents the Listing GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CommercialSaleListingConsumer"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/commercialsales/{id}": {
			"get": {
				"tags": [
					"CommercialSaleListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CSLGET').toggle();\" />\r\n  <div id=\"CSLGET\">\r\n    <ul>\r\n      <li>This method is to get the Commercial Sale Listing details by passing Listing GUID or ProviderIdentifier</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Listing</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If a Commercial Sale Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CommercialSaleListings_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Listing. It can be either Listing GUID or Listing ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Listing GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CommercialSaleListing"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			},
			"put": {
				"tags": [
					"CommercialSaleListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CSLPUT').toggle();\" />\r\n  <div id=\"CSLPUT\">\r\n    <ul>\r\n      <li>This method will be used to update an existing Commercial Sale listing by using Listing GUID or ProviderIdentifier</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>Parameter - id (Listing GUID or ProviderIdentifier)</li>\r\n        <li>Property</li>\r\n        <ul>\r\n          <li>Location (Address of the property)</li>\r\n          <li>TypeCode or TypeDescription (type of the property)</li>\r\n          <li>PropertyName(only if brand is SIR)</li>\r\n        </ul>\r\n        <li>Listing</li>\r\n        <ul>\r\n          <li>Office</li>\r\n          <li>PrimaryMLS(only for domestic master franchises)</li>\r\n          <li>PrimaryAgent or Team</li>\r\n        </ul>\r\n        <li>ListPrice</li>\r\n        <li>Currency (Code or Name)</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory fields must be supplied while adding/updating a Listing</li>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id must be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If a Commercial Sale Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n        <li>If YearRenovated is supplied, it must not be in the future and must not be before YearBuilt</li>\r\n        <li>Listing Office supplied must exist with an open/executed status</li>\r\n        <li>Agent supplied for the listing must exist</li>\r\n        <li>Team supplied for the listing must exist</li>\r\n        <li>Listing Remarks of type - Property Description in English is mandatory</li>\r\n        <li>Listing Remarks must only be with 1 Language/Remark Type combination </li>\r\n        <li>OpenHouse StartOn Date/Time must not be after the EndOn Date/Time</li>\r\n        <li>OpenHouse StartOn Date/Time and EndOn Date/Time is mandatory</li>\r\n        <li>OpenHouse Remarks must not have multiple records for the same language</li>\r\n        <li>Listing website(URL) cannot be duplicated for the same language and type</li>\r\n        <li>There must not be multiple Media Captions with the same language for each media item</li>\r\n        <li>Property type should not be Residential</li>\r\n        <li>If ExpiresOn date is supplied then it should be greater than ListedDate</li>\r\n        <li>If ClosedOn date is supplied then it should be greater than ListedDate and must not be in the future</li>\r\n        <li>ContractOn should be greater than ListedDate</li>\r\n        <li>Listing features must not have multiple records with same feature</li>\r\n        <li>LastSoldOn must not be in the future</li>\r\n        <li>Listing once closed cannot be revoked</li>\r\n        <li>ListPriceInUSD is a read-only field and is always auto-calculated based on ListPrice</li>\r\n        <li>The valid Listing Statuses that can be supplied are:</li>\r\n        <ul>\r\n          <li>Pre-Listing</li>\r\n          <li>Active</li>\r\n          <li>Expired</li>\r\n          <li>Withdrawn</li>\r\n          <li>Pending (only for Transaction NOT Enabled offices)</li>\r\n          <li>Closed (only for Transaction NOT Enabled offices)</li>\r\n        </ul>\r\n        <li>\r\n                While adding a listing, either the Status or equivalent dates or combination of Status and Dates can be supplied. <br />\r\n                If only Status is supplied, the dates will be defaulted/protected (if exists in our system). Dates defaulted (defaulted to current date) for each status is:\r\n                <ul><li>Pre-Listing</li><ul><li>ListedDated</li></ul><li>Active</li><ul><li>ListedDate</li></ul><li>Expired</li><ul><li>ListedDate</li><li>ExpiresOn</li></ul><li>Withdrawn</li><ul><li>ListedDate</li><li>WithdrawnOn</li></ul><li>Pending</li><ul><li>ListedDate</li><li>ContractOn</li><li>EstimatedClosedOn (will be current date + 90 days)</li></ul><li>Closed</li><ul><li>ListedDate</li><li>ContractOn</li><li>EstimatedClosedOn (will be current date + 90 days)</li><li>ClosedDate</li></ul></ul></li>\r\n        <li>If only dates are supplied, then the status will be derived based on the dates.</li>\r\n        <ul>\r\n          <li>ListedDate</li>\r\n          <ul>\r\n            <li>Active (If listed date is in the past)</li>\r\n            <li>Pre-Listing (If listed date is in the future)</li>\r\n          </ul>\r\n          <li>ExpiresOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Active (If ExpiresOn is in the future)</li>\r\n            <li>Expired (If ExpiresOn is in the past)</li>\r\n          </ul>\r\n          <li>WithdrawnOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Withdrawn</li>\r\n          </ul>\r\n          <li>ContractOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Pending</li>\r\n          </ul>\r\n          <li>ClosedOn (along with ListedDate, ContractOn)</li>\r\n          <ul>\r\n            <li>Closed</li>\r\n          </ul>\r\n        </ul>\r\n        <li>If both status and dates are supplied, then the status and dates will be validated as below.</li>\r\n        <ul>\r\n          <li>Pre-Listing - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in future)</li>\r\n          </ul>\r\n          <li>Active - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n          </ul>\r\n          <li>Expired - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ExpiresOn (in Past)</li>\r\n          </ul>\r\n          <li>Withdrawn - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>WithdrawnOn (in Past)</li>\r\n          </ul>\r\n          <li>Pending - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ContractOn</li>\r\n          </ul>\r\n          <li>Closed - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ContractOn</li>\r\n            <li>ClosedDate</li>\r\n          </ul>\r\n        </ul>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CommercialSaleListings_Put",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Listing. It can be either Listing GUID or Listing ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Listing GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "listing",
						"in": "body",
						"description": "This parameter represents the Commercial Sale Listing Details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CommercialSaleListing"
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/commercialsales": {
			"post": {
				"tags": [
					"CommercialSaleListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CSLPOST').toggle();\" />\r\n  <div id=\"CSLPOST\">\r\n    <br />\r\n    <ul>\r\n      <li>This method will be used to add a new Commercial Sale listing to the system.</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>Property</li>\r\n        <ul>\r\n          <li>Location (Address of the property)</li>\r\n          <li>TypeCode or TypeDescription (type of the property)</li>\r\n          <li>PropertyName(only if brand is SIR)</li>\r\n        </ul>\r\n        <li>Listing</li>\r\n        <ul>\r\n          <li>Office (Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n          <li>ProviderIdentifier</li>\r\n          <li>PrimaryMLS(only for domestic master franchises)</li>\r\n          <li>PrimaryAgent or Team</li>\r\n        </ul>\r\n        <li>ListPrice</li>\r\n        <li>Currency (Code or Name)</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be supplied while adding/updating a Listing</li>\r\n        <li>If YearRenovated is supplied, it must not be in the future and must not be before YearBuilt</li>\r\n        <li>Listing Office supplied must exist with an open/executed status</li>\r\n        <li>Agent supplied for the listing must exist</li>\r\n        <li>Team supplied for the listing must exist</li>\r\n        <li>Listing Remarks of type - Property Description in English is mandatory</li>\r\n        <li>Listing Remarks must only be with 1 Language/Remark Type combination </li>\r\n        <li>OpenHouse StartOn Date/Time must not be after the EndOn Date/Time</li>\r\n        <li>OpenHouse StartOn Date/Time and EndOn Date/Time is mandatory</li>\r\n        <li>OpenHouse Remarks must not have multiple records for the same language</li>\r\n        <li>Listing website(URL) cannot be duplicated for the same language and type</li>\r\n        <li>There must not be multiple Media Captions with the same language for each media item</li>\r\n        <li>Property type should not be Residential</li>\r\n        <li>If ExpiresOn date is supplied then it should be greater than ListedDate</li>\r\n        <li>If ClosedOn date is supplied then it should be greater than ListedDate and must not be in the future</li>\r\n        <li>ContractOn should be greater than ListedDate</li>\r\n        <li>Listing features must not have multiple records with same feature</li>\r\n        <li>LastSoldOn must not be in the future</li>\r\n        <li>ListPriceInUSD is a read-only field and is always auto-calculated based on ListPrice</li>\r\n        <li>The valid Listing Statuses that can be supplied are:</li>\r\n        <ul>\r\n          <li>Pre-Listing</li>\r\n          <li>Active</li>\r\n          <li>Pending (only for Transaction NOT Enabled offices)</li>\r\n          <li>Closed (only for Transaction NOT Enabled offices)</li>\r\n        </ul>\r\n        <li>\r\n                While adding a listing, either the Status or equivalent dates or combination of Status and Dates can be supplied. <br />\r\n                If only Status is supplied, the dates will be defaulted. Dates defaulted (defaulted to current date) for each status is:\r\n                <ul><li>Pre-Listing</li><ul><li>ListedDate (will be current date + (X) days)</li></ul><li>Active</li><ul><li>ListedDate</li></ul><li>Pending</li><ul><li>ListedDate</li><li>ContractOn</li><li>EstimatedClosedOn (will be current date + 90 days)</li></ul><li>Closed</li><ul><li>ListedDate</li><li>ContractOn</li><li>EstimatedClosedOn (will be current date + 90 days)</li><li>ClosedDate</li></ul></ul></li>\r\n        <li>If only dates are supplied, then the status will be derived based on the dates.</li>\r\n        <ul>\r\n          <li>ListedDate</li>\r\n          <ul>\r\n            <li>Active (If listed date is in the past)</li>\r\n            <li>Pre-Listing (If listed date is in the future)</li>\r\n          </ul>\r\n          <li>ExpiresOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Active (If ExpiresOn is in the future)</li>\r\n            <li>Expired (If ExpiresOn is in the past)</li>\r\n          </ul>\r\n          <li>ContractOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Pending</li>\r\n          </ul>\r\n          <li>ClosedOn (along with ListedDate, ContractOn)</li>\r\n          <ul>\r\n            <li>Closed</li>\r\n          </ul>\r\n        </ul>\r\n        <li>If both status and dates are supplied, then the status and dates will be validated as below.</li>\r\n        <ul>\r\n          <li>Pre-Listing - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in future)</li>\r\n          </ul>\r\n          <li>Active - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n          </ul>\r\n          <li>Pending - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ContractOn</li>\r\n          </ul>\r\n          <li>Closed - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ContractOn</li>\r\n            <li>ClosedDate</li>\r\n          </ul>\r\n        </ul>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CommercialSaleListings_Post",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "listing",
						"in": "body",
						"description": "This parameter represents the Commercial Sale Listing Details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CommercialSaleListing"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companies/{id}": {
			"get": {
				"tags": [
					"Companies"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CGET').toggle();\" />\r\n  <div id=\"CGET\">\r\n    <ul>\r\n      <li>This method is to get the Company details by passing Company GUID or RFG Company ID.</li>\r\n      <li>This will be primarily called as a result of a delta call.</li>\r\n      <li>The method will return only Active Companies</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If the idType supplied is 'rfgid', then the supplied id should be a numeric identifier</li>\r\n        <li>If Company GUID/RFG Company ID does not exist in our system, API will return “HTTP 404 - Not Found” status code.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Companies_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the company. It can be either Company GUID or RFG Company ID",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. This can be either \"id\" or \"rfgid\"\r\nThe value should be set to \"id\" if Company GUID is provided as the identifier. \r\nIf the identifier provided is RFG Company ID, the idType should be \"rfgid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Company"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companies/delta": {
			"get": {
				"tags": [
					"Companies"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CDELTA').toggle();\" />\r\n  <div id=\"CDELTA\">\r\n    <ul>\r\n      <li>This method will be used to get the list of Companies which got updated over the specified period of time. This method will return list of Company GUIDs (if available) which are created or modified between fromDate and toDate.</li>\r\n      <li>The results can be filtered by brand or list of RFG Company IDs</li>\r\n      <li>The Date-Time format supported is standard date-time format (yyyy-MM-ddThh:mm:ss[.fffffff]). Example: 2015-02-13T06:40:48.937</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>FromDate is mandatory</li>\r\n        <li>If toDate is not supplied, system will take current system date</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Companies_Delta",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"description": "This parameter represents the Date from which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "This parameter represents the Date to which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "brandCode",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": false,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "companyIds",
						"in": "query",
						"description": "This parameter represents the List of RFG Company IDs to be used for filtering the delta search results",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "isLastUpdatedBy",
						"in": "query",
						"description": "If isLastUpdatedBy is true then Companies are displayed which are not updated by current user. If isLastUpdatedBy is false then all the Companies are displayed",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityDelta"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/consumer/companystaff/{companyStaffGuid}": {
			"get": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SGETC').toggle();\" />\r\n  <div id=\"SGETC\">\r\n    <ul>\r\n      <li>This method is to get the Staff details by passing CompanyStaffGUID</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Staff</li>\r\n      <li>This action will return only active staffs</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If Staff GUID does not exists in our system, API will return “HTTP 404 - Not Found” status code.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_GetConsumer",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "companyStaffGuid",
						"in": "path",
						"description": "This parameter represents the Company Staff GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CompanyStaffConsumer"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companystaff/{id}": {
			"get": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SGET').toggle();\" />\r\n  <div id=\"SGET\">\r\n    <ul>\r\n      <li>This method is to get the Staff details by passing CompanyStaff GUID or ProviderIdentifier</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Staff</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If Staff GUID or ProviderIdentifier does not exists in our system, API will return “HTTP 404 - Not Found” status code.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the company staff. It can be either Company Staff GUID or Company Staff ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Company Staff GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CompanyStaff"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companystaff": {
			"post": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#AddCS').toggle();\" />\r\n  <div id=\"AddCS\">\r\n    <br />\r\n    <ul>\r\n      <li>This method will be used to add a new staff (person) to the system.</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>FirstName</li>\r\n        <li>LastName</li>\r\n        <li>PrimaryEmailAddress</li>\r\n        <li>Company (Company GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID)</li>\r\n        <li>PrimaryOffice Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n        <li>ProviderIdentifier</li>\r\n        <li>Roles</li>\r\n        <li>IsActive</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be supplied while adding/updating a staff</li>\r\n        <li>The ProviderIdentifier provided must not be already associated with another Staff</li>\r\n        <li>A Staff must be associated with an Active Company</li>\r\n        <li>\r\n                For Staff Roles,\r\n                <ul><li>Active Since Date must not be future date</li><li>DeActivation Date must not be less that the ActiveSince Date</li></ul></li>\r\n        <li>A person must have at least one role while adding a new person</li>\r\n        <li>A person can be associated with same or different sales roles for offices (one per office) at the same time.</li>\r\n        <li>A person can have one or more than one non-sales roles across offices (or in an office) or at company level at the same time, as long as the role type is not duplicated in an office and is not deactivated.</li>\r\n        <li>Active Staff Roles can be added to only Open/Executed Offices</li>\r\n        <li>For US &amp; Canada Master Franchisors, Owner and Responsible Broker roles cannot be assigned to any staffs as these roles are considered as contractual information</li>\r\n        <li>If there are any producing roles for the Staff, the PrimaryOffice must be the Office in which the staff has a producing role</li>\r\n        <li>If there are no producing roles for the Staff, the PrimaryOffice can be any of the Office in which the staff has any active role</li>\r\n        <li>If a person is associated with an active guest role, no other role can be selected for that person </li>\r\n        <li>A Person can either have ‘Guest Non-Sales’ or ‘Guest Sales’ role, but not both roles at any point in time</li>\r\n        <li>When adding person with a Guest Role, system defaults the de-active date = (current Date) + (X) no of days, based on the configuration for each brand. The de-active date added by the system is not editable or cannot be deleted</li>\r\n        <li>If FamiliarName is not provided for the person, then the value will be set to FirstName by default</li>\r\n        <li>If DisplayName is not provided for the person, then the value will be set to FirstName + LastName + NameSuffix by default</li>\r\n        <li>If StartedInBrand is supplied, the value must not be in future</li>\r\n        <li>If StartedInRealEstateOn is supplied, the value must not be in future</li>\r\n        <li>If DateOfBirth is supplied, the value must not be in future</li>\r\n        <li>If Additional Person Names are supplied, then there must only be one record per language</li>\r\n        <li>There must not be multiple Media Captions with the same language for each media item</li>\r\n        <li>Additional EmailAddresses are allowed only one per email type</li>\r\n        <li>For the same Website type, there must not be multiple web URLs provided with the same content language</li>\r\n        <li>Person Profile must not have multiple records of the same type and language</li>\r\n        <li>The Designations -  \"Fine Homes and Estates Specialist\" (FHE) or \"Commercial Specialist\" (COM) designation or C21 Global Real Estate Network (GREN) will be ignored if provided</li>\r\n        <li>In the list of Designations, the same Designations must not be supplied more than once</li>\r\n        <li>License issuedOn date must not be future date</li>\r\n        <li>License expires On date must not be before issued on date</li>\r\n        <li>In the list of Spoken Languages, the same language must not be supplied more than once</li>\r\n        <li>In the list of Designations, the same Designations must not be supplied more than once</li>\r\n        <li>In the list of Area of Specializations, the same Area of Specialization must not be supplied more than once</li>\r\n        <li>If Staff DeactivationDate is supplied, the value must not be less than staff active since date</li>\r\n        <li>Designations Deactivation date must be less than Active date</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_Post",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "companyStaff",
						"in": "body",
						"description": "This parameter represents the Company Staff details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CompanyStaff"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companyStaff/{id}": {
			"put": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#UpdCS').toggle();\" />\r\n  <div id=\"UpdCS\" class=\"businessRule\">\r\n    <br />\r\n    <ul>\r\n      <li>This method will be used to update an existing staff by using Staff GUID or ProviderIdentifier</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>Parameter - id (CompanyStaff GUID or ProviderIdentifier)</li>\r\n        <li>FirstName</li>\r\n        <li>LastName</li>\r\n        <li>PrimaryEmailAddress</li>\r\n        <li>Company (Company GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID)</li>\r\n        <li>PrimaryOffice Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n        <li>Roles</li>\r\n        <li>IsActive</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be supplied while adding/updating a staff</li>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id must be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>The Staff GUID or ProviderIdentifier provided must exist in the system</li>\r\n        <li>Deactivated Persons cannot be updated unless the update is to re-activate the person</li>\r\n        <li>The Staff must be associated with an Active Company</li>\r\n        <li>\r\n                For Staff Roles,\r\n                <ul><li>Active Since Date must not be future date</li><li>DeActivation Date must not be less that the ActiveSince Date</li></ul></li>\r\n        <li>A person must have at least one role while adding a new person</li>\r\n        <li>A person can be associated with same or different sales roles for offices (one per office) at the same time.</li>\r\n        <li>A person can have one or more than one non-sales roles across offices (or in an office) or at company level at the same time as long as roles type is not duplicated in an office and is not deactivated.</li>\r\n        <li>Active Staff Roles can be added to only Open/Executed Offices</li>\r\n        <li>For US &amp; Canada Master Franchisors, Owner and Responsible Broker roles cannot be assigned to any staffs as these roles are considered as contractual information</li>\r\n        <li>For US &amp; Canada MasterFranchisors, Contractual information cannot be updated for Owner and Responsible broker. Contractual information includes - Role Title, Active Since Date, Deactivation Date, First Name, Last Name, Display Name, Familiar Name</li>\r\n        <li>If there are any producing roles for the Staff, the PrimaryOffice must be the Office in which the staff has a producing role</li>\r\n        <li>If there are no producing roles for the Staff, the PrimaryOffice can be any of the Office in which the staff has any active role</li>\r\n        <li>If a person is associated with an active guest role, no other role can be selected for that person</li>\r\n        <li>A Person can either have ‘Guest Non-Sales’ or ‘Guest Sales’ role but not both roles at any point in time</li>\r\n        <li>When adding person with a Guest Role, system defaults the de-active date = (current Date) + (X) no of days, based on the configuration for each brand. The de-active date added by the system is not editable or cannot be deleted</li>\r\n        <li>If FamiliarName is not provided for the person, then the value will be set to FirstName by default</li>\r\n        <li>If DisplayName is not provided for the person, then the value will be set to FirstName + LastName + NameSuffix by default</li>\r\n        <li>If StartedInBrand is supplied, the value must not be in future</li>\r\n        <li>If StartedInRealEstateOn is supplied, the value must not be in future</li>\r\n        <li>If DateOfBirth is supplied, the value must not be in future</li>\r\n        <li>If Additional Person Names are supplied, then there must only be one record per language</li>\r\n        <li>There must not be multiple Media Captions with the same language for each media item</li>\r\n        <li>Additional EmailAddresses are allowed only one per email type</li>\r\n        <li>For the same Website type, there must not be multiple web URLs provided with the same content language</li>\r\n        <li>Person Profile must not have multiple records of the same type and language</li>\r\n        <li>The Designations -  \"Fine Homes and Estates Specialist\" (FHE) or \"Commercial Specialist\" (COM) designation or C21 Global Real Estate Network (GREN) will be ignored if provided</li>\r\n        <li>In the list of Designations, the same Designations must not be supplied more than once</li>\r\n        <li>License issuedOn date must not be future date</li>\r\n        <li>License expires On date must not be before issued on date</li>\r\n        <li>In the list of Spoken Languages, the same language must not be supplied more than once</li>\r\n        <li>In the list of Designations, the same Designations must not be supplied more than once</li>\r\n        <li>In the list of Area of Specializations, the same Area of Specialization must not be supplied more than once</li>\r\n        <li>If Staff DeactivationDate is supplied, the value must not be less than staff active since date</li>\r\n        <li>Designations Deactivation date must be less than Active date</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_Put",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the company staff. It can be either Company Staff GUID or Company Staff ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Company Staff GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "companyStaff",
						"in": "body",
						"description": "This parameter represents the Company Staff details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CompanyStaff"
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companyStaff/{id}/media": {
			"patch": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SPUTP').toggle();\" />\r\n  <div id=\"SPUTP\">\r\n    <ul>\r\n      <li>This method will be used to append a media item or a collection of media items to a Company staff using the Company staff GUID or ProviderIdentifier</li>\r\n      <li>All media items for the listing will be replaced with the supplied media items</li>\r\n      <li>This method will replace only those media items which were supplied by the provider</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be provided</li>\r\n        <li>The parameters - idType, media and isReplace are mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>There should not be multiple Media Captions with the same language for each media item</li>\r\n        <li>If a  Company staff does not exists in our system for the  Company staff GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_PatchMedia",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the company staff. It can be either company staff GUID or company staff ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if company staff GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "media",
						"in": "body",
						"description": "This parameter represents the Collection of Media",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityMedia"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companystaff/delta": {
			"get": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SDELTA').toggle();\" />\r\n  <div id=\"SDELTA\">\r\n    <ul>\r\n      <li>This method will be used to get the list of Company Staff that were updated (created or modified) over the specified period of time (fromDate and toDate).</li>\r\n      <li>The results can be filtered by brand or list of RFG Company IDs</li>\r\n      <li>The DateTime format supported is standard date-time format (yyyy-MM-ddThh:mm:ss[.fffffff]). Example: 2015-02-13T06:40:48.937</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>FromDate is mandatory</li>\r\n        <li>If toDate is not supplied, system will take today's date</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_Delta",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"description": "This parameter represents the Date from which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "This parameter represents the Date to which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "brandCode",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": false,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "companyIds",
						"in": "query",
						"description": "This parameter represents the List of RFG Company IDs to be used for filtering the delta search results",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "isLastUpdatedBy",
						"in": "query",
						"description": "If isLastUpdatedBy is true then CompanyStaff are displayed which are not updated by current user. If isLastUpdatedBy is false then all the CompanyStaff are displayed",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityDelta"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companystaff/agents": {
			"get": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SS').toggle();\" />\r\n  <div id=\"SS\">\r\n    <ul>\r\n      <li>This method will be used to search all the company agents</li>\r\n      <li>The search is primarily brand and office GUID based search (with firstName, lastName, location and company GUID as additional filters)</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The Search will be an agent search and will return only agents</li>\r\n        <li>The Search will be an AND based search</li>\r\n        <li>For Parameters - FirstName and LastName, the method performs a ‘Starts With’ search</li>\r\n        <li>The Office GUID, if provided, must be an Open/Executed Office. Results will not be returned if the Office GUID does not belong to an Open/Executed Office</li>\r\n        <li>The Company GUID, if provided, must be an Active Company. Results will not be returned if the Company GUID is a De-Active Company</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_SearchAgent",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "brand",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": true,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "firstName",
						"in": "query",
						"description": "This parameter represents the First Name of the Company staff",
						"required": false,
						"type": "string"
					},
					{
						"name": "lastName",
						"in": "query",
						"description": "This parameter represents the Last Name of the Company staff",
						"required": false,
						"type": "string"
					},
					{
						"name": "country",
						"in": "query",
						"description": "This parameter represents the Country Name/Code of the Company staff's location",
						"required": false,
						"type": "string"
					},
					{
						"name": "stateProvince",
						"in": "query",
						"description": "This parameter represents the State Province Code/Name of the Company staff's location",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "This parameter represents the City Name of the Company staff's location",
						"required": false,
						"type": "string"
					},
					{
						"name": "officeGuid",
						"in": "query",
						"description": "This parameter represents the Office GUID of the Company staff and Office GUID is mandatory field. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": false,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "companyGuid",
						"in": "query",
						"description": "This parameter represents the Company GUID of the Company staff. This will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": false,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyStaffSearchResult"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companystaff/{companyStaffGuid}/designation": {
			"patch": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SPUTD').toggle();\" />\r\n  <div id=\"SPUTD\">\r\n    <ul>\r\n      <li>This method adds/updates designation or qualification of an agent</li>\r\n      <li>An agent can be awarded with 'Fine Homes and Estates Specialist' (FHE) or 'Commercial Specialist' (COM) or 'C21 Global Real Estate Network' (GREN) or 'Property Specialist' designations</li>\r\n      <li>The ActiveSince Date and the Deactivation Date provided will overwrite the existing data (if present)</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>companyStaffGuid</li>\r\n        <li>designation</li>\r\n      </ul>\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory Fields must be supplied</li>\r\n        <li>The CompanyStaffGUID supplied must exist in the system</li>\r\n        <li>The ActiveSince Date for the designation must not be in the future</li>\r\n        <li>The DeactivatedOn Date for the designation must not be before the ActiveSince date</li>\r\n        <li>The only accepted designations are: 'Fine Homes and Estates Specialist' ('39'), 'Commercial Specialist' ('33'), 'C21 Global Real Estate Network' ('115') and 'Property Specialist' ('988'). Any other designations will be rejected</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_PatchDesignation",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "companyStaffGuid",
						"in": "path",
						"description": "This parameter represents the Company Staff GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "designation",
						"in": "body",
						"description": "This parameter represents the Designation of the person",
						"required": true,
						"schema": {
							"$ref": "#/definitions/EntityDesignation"
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companystaff/{id}/profiles": {
			"patch": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SPUTP').toggle();\" />\r\n  <div id=\"SPUTP\">\r\n    <ul>\r\n      <li>This method adds/updates profile information for a staff by providing the CompanyStaff GUID or ProviderIdentifier</li>\r\n      <li>This method will add/update (overwrite if the profile already exists) profile information for a staff based on ProfileCategory and Language provided in the request</li>\r\n      <li>This method will update profile only if the profile was supplied by the provider. Otherwise it will be added as a new profile</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>The parameter - profiles is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>All Mandatory Fields must be supplied</li>\r\n        <li>The CompanyStaffGUID (if idType is 'id') or the Company Staff ProviderIdentifier (if idType is \"providerid\") supplied must exist in the system and should be the guid corresponding to an active Staff</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_PatchProfiles",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the company staff. It can be either Company Staff GUID or Company Staff ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Company Staff GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "profiles",
						"in": "body",
						"description": "This parameter represents the Collection of Profiles",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityProfile"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companystaff/byoffice": {
			"get": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SBO').toggle();\" />\r\n  <div id=\"SBO\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of all active Staff for the specified Office GUID</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>Only Open or Executed Office’s active staff will be returned</li>\r\n        <li>If office GUID does not exists in our system, API will return “HTTP 404 - Not Found” status code.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_SearchByOffice",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "officeGuid",
						"in": "query",
						"description": "This parameter represents the Office GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyStaffBasicInfo"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/companystaff/bycompany": {
			"get": {
				"tags": [
					"CompanyStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SBC').toggle();\" />\r\n  <div id=\"SBC\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of all active Staff for the specified Company GUID</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>Only active company’s active staff will be returned</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CompanyStaff_SearchByCompany",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "companyGuid",
						"in": "query",
						"description": "This parameter represents the Company GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CompanyStaffBasicInfo"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/corporatestaff/delta": {
			"get": {
				"tags": [
					"CorporateStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#CSDELTA').toggle();\" />\r\n  <div id=\"CSDELTA\">\r\n    <ul>\r\n      <li>This method will be used to get the list of Corporate Staff that were updated (created or modified) over the specified period of time (fromDate and toDate).</li>\r\n      <li>The results can be filtered by brand</li>\r\n      <li>The DateTime format supported is standard date-time format (yyyy-MM-ddThh:mm:ss[.fffffff]). Example: 2015-02-13T06:40:48.937</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>FromDate is mandatory</li>\r\n        <li>If toDate is not supplied, system will take today's date</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CorporateStaff_Delta",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"description": "This parameter represents the Date from which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "This parameter represents the Date to which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "brandCode",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": false,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "isLastUpdatedBy",
						"in": "query",
						"description": "If isLastUpdatedBy is true then CorporateStaff are displayed which are not updated by current user. If isLastUpdatedBy is false then all the CorporateStaff are displayed",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityDelta"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/corporatestaff/{corporateStaffGuid}": {
			"get": {
				"tags": [
					"CorporateStaff"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GETCU').toggle();\" />\r\n  <div id=\"GETCU\">\r\n    <ul>\r\n      <li>This method is to get the Corporate staff details by passing CorporateStaff GUID</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If Corporate staff GUID supplied does not exists in our system, API will return “HTTP 404 - Not Found” status code.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "CorporateStaff_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "corporateStaffGuid",
						"in": "path",
						"description": "This parameter represents the CorporateStaff GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CorporateStaff"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/bycompany": {
			"get": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GLBC').toggle();\" />\r\n  <div id=\"GLBC\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of all Active/Pending listings for CommercialSale &amp; ResidentialSale and Available listings for Commercial Lease &amp; Residential Rental for the specified Company GUID</li>\r\n      <li>This method will be primarily used to sync all the listings for a company</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>Only Active company’s listings will be returned</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_SearchByCompany",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "companyGuid",
						"in": "query",
						"description": "This parameter represents the Company GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ListingSummary"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/byoffice": {
			"get": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GLBO').toggle();\" />\r\n  <div id=\"GLBO\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of all Active/Pending listings for CommercialSale &amp; ResidentialSale and Available listings for Commercial Lease &amp; Residential Rental for the specified Office GUID</li>\r\n      <li>This method will be primarily used to sync all the listings for an office</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>Only Open or Executed Office’s listings will be returned</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_SearchByOffice",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "officeGuid",
						"in": "query",
						"description": "This parameter represents the Office GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ListingSummary"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/byteam": {
			"get": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GLBT').toggle();\" />\r\n  <div id=\"GLBT\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of on-marketed listings for CommercialSale, ResidentialSale, Commercial Lease &amp; Residential Rental for the specified Team GUID</li>\r\n      <li>This method will be primarily used to sync all the listings for team</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>Active team and team members listings will be returned</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_SearchByTeam",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "teamGuid",
						"in": "query",
						"description": "This parameter represents the Team GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ListingSummary"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/byagent": {
			"get": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GLBA').toggle();\" />\r\n  <div id=\"GLBA\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of Active/Pending listings for CommercialSale &amp; ResidentialSale and Available listings for Commercial Lease &amp; Residential Rental for the specified Agent GUID or ProviderIdentifier</li>\r\n      <li>This will be primarily used to sync all the listings for an Agent</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>Only Active Company Staff GUID or ProviderIdentifier’s listings will be returned of active Agents</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_SearchByAgent",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "This parameter represents the identifier of the Agent. It can be either Agent GUID or Agent ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Agent GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ListingSummary"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/delta": {
			"get": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#RSDELTA').toggle();\" />\r\n  <div id=\"RSDELTA\">\r\n    <ul>\r\n      <li>This method will return list of listing GUIDs (if available) that are created or modified between specified fromDate and toDate.</li>\r\n      <li>The results can be filtered by brand or list of RFG Company IDs or Listing Type Code (The list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingType)</li>\r\n      <li>The Date-Time format supported is standard date-time format (yyyy-MM-ddThh:mm:ss[.fffffff]). Example: 2015-02-13T06:40:48.937</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>FromDate is mandatory</li>\r\n        <li>If toDate is not supplied, system will take today's date</li>\r\n        <li>The fromDate must not be in Future</li>\r\n        <li>The toDate must not be before fromDate</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_Delta",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"description": "This parameter represents the Date from which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "This parameter represents the Date to which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "brandCode",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": false,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "companyIds",
						"in": "query",
						"description": "This parameter represents the List of RFG Company IDs to be used for filtering the delta search results",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "listingType",
						"in": "query",
						"description": "This parameter represents the Listing Type code that should be used for filtering the delta search results (eg: Residential Sale, Commercial Sale, Residential Rental, Commercial Lease)",
						"required": false,
						"type": "string"
					},
					{
						"name": "isLastUpdatedBy",
						"in": "query",
						"description": "If isLastUpdatedBy is true then Listings are displayed which are not updated by current user. If isLastUpdatedBy is false then all the listings are displayed",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ListingDelta"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/{id}/media": {
			"patch": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#ALM').toggle();\" />\r\n  <div id=\"ALM\">\r\n    <ul>\r\n      <li>This method will be used to append a media item or a collection of media items to a listing using the Listing GUID or ProviderIdentifier</li>\r\n      <li>If isReplace flag is set to false,</li>\r\n      <ul>\r\n        <li>A new media will be added to the listing if the provided media identifier does not exist</li>\r\n        <li>If the media already exists, the metadata information (like Caption, Description etc.) will be updated and the actual URL or the resized URLs will not be updated</li>\r\n      </ul>\r\n      <li>If isReplace flag is set to true,</li>\r\n      <ul>\r\n        <li>All media items for the listing will be replaced with the supplied media items</li>\r\n        <li>This method will replace only those media items which were supplied by the provider</li>\r\n      </ul>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be provided</li>\r\n        <li>The parameters - idType, media and isReplace are mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>There should not be multiple Media Captions with the same language for each media item</li>\r\n        <li>If a Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_PatchMedia",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Listing. It can be either Listing GUID or Listing ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Listing GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "isReplace",
						"in": "query",
						"description": "This parameter represents whether the media provided needs to replace all the existing media or not",
						"required": true,
						"type": "boolean"
					},
					{
						"name": "media",
						"in": "body",
						"description": "This parameter represents the Collection of Media",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityMedia"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/{id}/media/{mediaProviderIdentifier}": {
			"delete": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#DM').toggle();\" />\r\n  <div id=\"DM\">\r\n    <ul>\r\n      <li>This method will be used to delete an existing media for a listing by providing the Listing GUID/ProviderIdentifier and Media ProviderIdentifier</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType and mediaProviderIdentifier is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If Listing does not exists in our system for the Listing GUID/ProviderIdentifier supplied, the method will return “HTTP 404 - Not Found” error</li>\r\n        <li>If Media does not exists in our system for the supplied Media ProviderIdentifier, API will return “HTTP 404 - Not Found” status code.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_DeleteMedia",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Listing. It can be either Listing GUID or Listing ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Listing GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "mediaProviderIdentifier",
						"in": "path",
						"description": "This parameter represents the ProviderIdentifier for the media to be deleted",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/{id}/listingisoffmarket": {
			"patch": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#PLI').toggle();\" />\r\n  <div id=\"ALM\">\r\n    <ul>\r\n      <li>This method will be used to make IsOffTheMarket flag set to 1 for a Listing by using the Listing GUID or ListingID or ProviderIdentifier</li>\r\n      <li>If the Listing status is \"AC/AV\" then Listing/Transaction status will be set to \"UN\"</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be provided</li>\r\n        <li>The parameters - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If Listing does not exists in our system for the Listing GUID/ListingID/ProviderIdentifier supplied, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_PatchListingIsOffMarket",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Listing. It can be either Listing GUID or ListingID or Listing ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Listing GUID is provided as the identifier.\r\nIf the identifier provided is ListingID, the idType should be \"listingid\"\r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/{id}/listinglandingpageurl": {
			"patch": {
				"tags": [
					"Listings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#PLL').toggle();\" />\r\n  <div id=\"ALM\">\r\n    <ul>\r\n      <li>This method will be used to update LandingPageURL for a Listing and ListingWebsites by using the Listing GUID or ListingID or ProviderIdentifier</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be provided</li>\r\n        <li>The parameters - idType and landingPageUrl are mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If Listing does not exists in our system for the Listing GUID/ListingID/ProviderIdentifier supplied, the method will return “HTTP 404 - Not Found” error</li>\r\n        <li>If the provided LandingPageURL in not valid, the method will return \"Invalid URI: The format of the URI could not be determined\" error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Listings_PatchListingLandingPageURL",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Listing. It can be either Listing GUID or ListingID or Listing ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Listing GUID is provided as the identifier.\r\nIf the identifier provided is ListingID, the idType should be \"listingid\"\r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "landingPageUrl",
						"in": "query",
						"description": "This parameter is used to update LandingPageURL for Listing and ListingWebsites",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/offices/{officeGuid}": {
			"get": {
				"tags": [
					"Offices"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#OGET').toggle();\" />\r\n  <div id=\"OGET\">\r\n    <ul>\r\n      <li>This method will provide all the Office details for the specified Office GUID.</li>\r\n      <li>This method will be used as a result of an office delta call.</li>\r\n      <li>Open or Executed Office information will be returned</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If Office GUID does not exist in our system, API will return “HTTP 404 - Not Found” status code.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Offices_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "officeGuid",
						"in": "path",
						"description": "This parameter represents the Office GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Office"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/offices/delta": {
			"get": {
				"tags": [
					"Offices"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#ODELTA').toggle();\" />\r\n  <div id=\"ODELTA\">\r\n    <ul>\r\n      <li>This method will be used to get the list of Offices which got updated over the specified period of time. </li>\r\n      <li>The results can be filtered by brand or list of RFG Company IDs</li>\r\n      <li>The Date-Time format supported is standard date-time format (yyyy-MM-ddThh:mm:ss[.fffffff]). Example: 2015-02-13T06:40:48.937</li>\r\n      <li>This Method will return list of Office GUIDs (if available) that are created or modified between fromDate and toDate</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>FromDate is mandatory</li>\r\n        <li>If toDate is not supplied, system will take today's date</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Offices_Delta",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"description": "This parameter represents the Date from which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "This parameter represents the Date to which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "brandCode",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": false,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "companyIds",
						"in": "query",
						"description": "This parameter represents the List of RFG Company IDs to be used for filtering the delta search results",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "isLastUpdatedBy",
						"in": "query",
						"description": "If isLastUpdatedBy is true then Offices are displayed which are not updated by current user. If isLastUpdatedBy is false then all the Offices are displayed",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityDelta"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/offices/{officeGuid}/designation": {
			"patch": {
				"tags": [
					"Offices"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#OPUTD').toggle();\" />\r\n  <div id=\"OPUTD\">\r\n    <ul>\r\n      <li>This method adds/updates designation or qualification of an office</li>\r\n      <li>An office can be awarded with 'Fine Homes &amp; Estates' ('13') or 'Commercial Investment Network' ('8') or C21 Global Real Estate Network ('71') designations</li>\r\n      <li>If an office has CIN or FHE or GREN designation and the designation status is 'Active' a charge will be generated for the processing office and the charge information will be sent to Oracle</li>\r\n      <li>The ActiveSince Date and the Deactivation Date provided will overwrite the existing data (if present)</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ol>\r\n        <li>DesignationCode OR DesignationDescription</li>\r\n        <li>ActiveSince</li>\r\n      </ol>\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory Fields must be supplied</li>\r\n        <li>The OfficeGUID supplied must exist in the system</li>\r\n        <li>The ActiveSince Date for the designation must not be in the future</li>\r\n        <li>The DeactivatedOn Date for the designation must not be before the ActiveSince date</li>\r\n        <li>The only accepted designations are: 'Fine Homes &amp; Estates' ('13'), 'Commercial Investment Network' ('8') and C21 Global Real Estate Network ('71'). Any other designations will be rejected</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Offices_PatchDesignation",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "officeGuid",
						"in": "path",
						"description": "This parameter represents the Office GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "designation",
						"in": "body",
						"description": "This parameter represents the Designation of the office",
						"required": true,
						"schema": {
							"$ref": "#/definitions/EntityDesignation"
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/offices/{officeGuid}/profiles": {
			"patch": {
				"tags": [
					"Offices"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#OPUTP').toggle();\" />\r\n  <div id=\"OPUTP\">\r\n    <ul>\r\n      <li>This method adds/updates profile information for an office by providing the Office GUID</li>\r\n      <li>This method will add/update (overwrite if the profile already exists) profile information for an office based on ProfileCategory and Language provided in the request</li>\r\n      <li>This method will update profile only if the profile was originally supplied by the provider. Otherwise it will be added as a new profile</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ol>\r\n        <li>ProfileCategoryCode OR ProfileCategoryDescription</li>\r\n        <li>LanguageCode OR LanguageName</li>\r\n        <li>ProfileText OR HtmlProfileText</li>\r\n      </ol>\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory Fields must be supplied</li>\r\n        <li>The Office GUID supplied must exist in the system belonging to an Open/Executed Office</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Offices_PatchProfiles",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "officeGuid",
						"in": "path",
						"description": "This parameter represents the Office GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "profiles",
						"in": "body",
						"description": "This parameter represents the Collection of Office Profiles",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityProfile"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/offices": {
			"get": {
				"tags": [
					"Offices"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GTBC').toggle();\" />\r\n  <div id=\"GTBC\">\r\n    <ul>\r\n      <li>This method will be used to search all the offices by specifying one or more search criteria.</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ol>\r\n        <li>Brand</li>\r\n        <li>Country</li>\r\n        <li>StateProvince or City</li>\r\n      </ol>\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be supplied</li>\r\n        <li>Only Offices that are in open or executed status and belonging to active companies will be returned</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Offices_Search",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "brand",
						"in": "query",
						"description": "This parameter represents the brand.",
						"required": true,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "country",
						"in": "query",
						"description": "This parameter represents the Country Name/Code of the office's location",
						"required": true,
						"type": "string"
					},
					{
						"name": "stateProvince",
						"in": "query",
						"description": "This parameter represents the State province code/name of the office's location",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "This parameter represents the city name of the office's location",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/OfficeSearchResult"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/offices/{id}/media": {
			"patch": {
				"tags": [
					"Offices"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#SPUTP').toggle();\" />\r\n  <div id=\"SPUTP\">\r\n    <ul>\r\n      <li>This method will be used to append a media item or a collection of media items to a Office using the office GUID or ProviderIdentifier</li>\r\n      <li>All media items for the office will be replaced with the supplied media items</li>\r\n      <li>This method will replace only those media items which were supplied by the provider</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be provided</li>\r\n        <li>The parameters - idType, media and isReplace are mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>There should not be multiple Media Captions with the same language for each media item</li>\r\n        <li>If a office does not exists in our system for the office GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Offices_PatchOfficeMedia",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the office. It can be either office GUID or office ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if office GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "media",
						"in": "body",
						"description": "This parameter represents the Collection of Media",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityMedia"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/offices/{id}/officelogomedia": {
			"patch": {
				"tags": [
					"Offices"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#POLM').toggle();\" />\r\n  <div id=\"POLM\">\r\n    <ul>\r\n      <li>This method will be used to append a media item or a collection of media(only Office logo's) items to a Office using the office GUID or ProviderIdentifier</li>\r\n      <li>This method will be used to add/update media for the supplied provider</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be provided</li>\r\n        <li>The parameters - idType and media are mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>There should not be multiple Media Captions with the same language for each media item</li>\r\n        <li>If a office does not exists in our system for the office GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n        <li>If User Provides media category is not logo type then the method will return \"Invalid MediaCategory\"</li>\r\n        <li>If User is trying to updated media for other provider then the method will return \"User cannot update media for other Providers\"</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Offices_PatchLogo",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the office. It can be either office GUID or office ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if office GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "media",
						"in": "body",
						"description": "This parameter represents the Collection of Media",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityMedia"
							}
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/transactions/otherincomes/{id}": {
			"get": {
				"tags": [
					"OtherIncomeTransactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#OIGET').toggle();\" />\r\n  <div id=\"OIGET\">\r\n    <ul>\r\n      <li>This method is to get Commercial/Residential Other Income Transaction details by passing TransactionGUID or ProviderIdentifier</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Transaction</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If an Other Income Transaction does not exists in our system for the Transaction GUID/ProviderIdentifier supplied, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "OtherIncomeTransactions_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Transaction. It can be either Transaction GUID or Transaction ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Transaction GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OtherIncomeTransaction"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			},
			"put": {
				"tags": [
					"OtherIncomeTransactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#OIPUT').toggle();\" />\r\n  <div id=\"OIPUT\">\r\n    <ul>\r\n      <li>This method will be used to update an existing Other Income Transaction by using TransactionGUID or ProviderIdentifier</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>Parameter - id (TransactionGUID/ProviderIdentifier)</li>\r\n        <li>Office (Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n        <li>IsCommercial</li>\r\n        <li>IncomeReceived</li>\r\n        <li>Currency (Code or Name)</li>\r\n        <li>PropertyType (Code or Description)</li>\r\n        <li>IncomeType (Code or Description)</li>\r\n        <li>IncomeReceivedOn</li>\r\n        <li>Client</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory fields must be supplied while adding/updating a Transaction</li>\r\n        <li>If an Other Income Transaction does not exists in our system for the Transaction GUID supplied, the method will return “HTTP 404 - Not Found” error</li>\r\n        <li>The Reporting Office must be an Open/Terminated Office</li>\r\n        <li>The Agent supplied must be present in the system</li>\r\n        <li>Total Participation percentage for all agents must be 100</li>\r\n        <li>There must be one and only one primary agent</li>\r\n        <li>The transaction can be updated only within 90 days from the Closing Reported Date</li>\r\n        <li>IncomeReceivedOn date cannot be updated</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "OtherIncomeTransactions_Put",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Transaction. It can be either Transaction GUID or Transaction ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Transaction GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "transaction",
						"in": "body",
						"description": "This parameter represents the Other Income Transaction details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/OtherIncomeTransaction"
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/transactions/otherincomes": {
			"post": {
				"tags": [
					"OtherIncomeTransactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#OIPOST').toggle();\" />\r\n  <div id=\"OIPOST\">\r\n    <ul>\r\n      <li>This method will be used to add a new Other Income Transaction</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>Office (Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n        <li>IsCommercial</li>\r\n        <li>IncomeReceived</li>\r\n        <li>Currency (Code or Name)</li>\r\n        <li>PropertyType (Code or Description)</li>\r\n        <li>IncomeType (Code or Description)</li>\r\n        <li>IncomeReceivedOn</li>\r\n        <li>Client</li>\r\n        <li>ProviderIdentifier</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory fields must be supplied while adding/updating a Transaction</li>\r\n        <li>The Reporting Office must  be an Open Office</li>\r\n        <li>The Agent supplied must exist in the system</li>\r\n        <li>Total Participation percentage for all agents must equal to 100%</li>\r\n        <li>There must  be at least one primary agent</li>\r\n        <li>IncomeReceivedOn date cannot be in the future</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "OtherIncomeTransactions_Post",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "transaction",
						"in": "body",
						"description": "This parameter represents the Other Income Transaction details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/OtherIncomeTransaction"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/consumer/listings/residentialrentals/{listingGuid}": {
			"get": {
				"tags": [
					"ResidentialRentalListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#RRLGETC').toggle();\" />\r\n  <div id=\"RRLGETC\">\r\n    <ul>\r\n      <li>This method is to get the Residential Rental Listing details by passing ListingGUID</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Listing</li>\r\n      <li>This action will return only Available listings</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If a Residential Rental Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "ResidentialRentalListings_GetConsumer",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "listingGuid",
						"in": "path",
						"description": "This parameter represents the Listing GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResidentialRentalListingConsumer"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/consumer/listings/residentialsales/{listingGuid}": {
			"get": {
				"tags": [
					"ResidentialSaleListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#RSLGETC').toggle();\" />\r\n  <div id=\"RSLGETC\">\r\n    <ul>\r\n      <li>This method is to get the Residential Sale Listing details by passing ListingGUID</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Listing</li>\r\n      <li>This action will return only active/pending listings</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If a Residential Sale Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "ResidentialSaleListings_GetConsumer",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "listingGuid",
						"in": "path",
						"description": "This parameter represents the Listing GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResidentialSaleListingConsumer"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/residentialsales/{id}": {
			"get": {
				"tags": [
					"ResidentialSaleListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#RSLGET').toggle();\" />\r\n  <div id=\"RSLGET\">\r\n    <ul>\r\n      <li>This method is to get the Listing details by passing ListingGUID or ProviderIdentifier</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Listing</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If a Residential Sale Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "ResidentialSaleListings_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Listing. It can be either Listing GUID or Listing ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Listing GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResidentialSaleListing"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			},
			"put": {
				"tags": [
					"ResidentialSaleListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#RSLPUT').toggle();\" />\r\n  <div id=\"RSLPUT\">\r\n    <ul>\r\n      <li>This method will be used to update an existing Residential Sale listing by using Listing GUID or ProviderIdentifier</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>Parameter - id (Listing GUID or ProviderIdentifier)</li>\r\n        <li>Property</li>\r\n        <ul>\r\n          <li>Location (Address of the property)</li>\r\n          <li>TypeCode or TypeDescription (type of the property)</li>\r\n          <li>PropertyName(only if brand is SIR)</li>\r\n        </ul>\r\n        <li>Listing</li>\r\n        <ul>\r\n          <li>Office (Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n          <li>PrimaryMLS(only for domestic master franchises)</li>\r\n          <li>PrimaryAgent or Team</li>\r\n        </ul>\r\n        <li>ListPrice</li>\r\n        <li>Currency (Code or Name)</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory fields must be supplied while adding/updating a Listing</li>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id must be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If a Residential Sale Listing does not exists in our system for the Listing GUID provided, the method will return “HTTP 404 - Not Found” error</li>\r\n        <li>If YearRenovated is supplied, it must not be in the future and must not be before YearBuilt</li>\r\n        <li>Listing Office supplied must exist with an open/executed status</li>\r\n        <li>Agent supplied for the listing must exist</li>\r\n        <li>Team supplied for the listing must exist</li>\r\n        <li>Listing Remarks must only be with 1 Language/Remark Type combination </li>\r\n        <li>OpenHouse StartOn Date/Time must not be after the EndOn Date/Time</li>\r\n        <li>OpenHouse StartOn Date/Time and EndOn Date/Time is mandatory</li>\r\n        <li>OpenHouse Remarks must not have multiple records for the same language</li>\r\n        <li>Listing website(URL) cannot be duplicated for the same language and type</li>\r\n        <li>There must not be multiple Media Captions with the same language for each media item</li>\r\n        <li>Property type should not be Commercial</li>\r\n        <li>If ExpiresOn date is supplied then it should be greater than ListedDate</li>\r\n        <li>If ClosedOn date is supplied then it should be greater than ListedDate and must not be in the future</li>\r\n        <li>ContractOn should be greater than ListedDate</li>\r\n        <li>Listing features must not have multiple records with same feature</li>\r\n        <li>LastSoldOn must not be in the future</li>\r\n        <li>Listing once closed cannot be revoked</li>\r\n        <li>ListPriceInUSD is a read-only field and is always auto-calculated based on ListPrice</li>\r\n        <li>The valid Listing Statuses that can be supplied are:</li>\r\n        <ul>\r\n          <li>Pre-Listing</li>\r\n          <li>Active</li>\r\n          <li>Expired</li>\r\n          <li>Withdrawn</li>\r\n          <li>Pending (only for Transaction NOT Enabled offices)</li>\r\n          <li>Closed (only for Transaction NOT Enabled offices)</li>\r\n        </ul>\r\n        <li>\r\n                While adding a listing, either the Status or equivalent dates or combination of Status and Dates can be supplied. <br />\r\n                If only Status is supplied, the dates will be defaulted/protected (if exists in our system). Dates defaulted (defaulted to current date) for each status is:\r\n                <ul><li>Pre-Listing</li><ul><li>ListedDated</li></ul><li>Active</li><ul><li>ListedDate</li></ul><li>Expired</li><ul><li>ListedDate</li><li>ExpiresOn</li></ul><li>Withdrawn</li><ul><li>ListedDate</li><li>WithdrawnOn</li></ul><li>Pending</li><ul><li>ListedDate</li><li>ContractOn</li><li>EstimatedClosedOn (will be current date + 90 days)</li></ul><li>Closed</li><ul><li>ListedDate</li><li>ContractOn</li><li>EstimatedClosedOn (will be current date + 90 days)</li><li>ClosedDate</li></ul></ul></li>\r\n        <li>If only dates are supplied, then the status will be derived based on the dates.</li>\r\n        <ul>\r\n          <li>ListedDate</li>\r\n          <ul>\r\n            <li>Active (If listed date is in the past)</li>\r\n            <li>Pre-Listing (If listed date is in the future)</li>\r\n          </ul>\r\n          <li>ExpiresOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Active (If ExpiresOn is in the future)</li>\r\n            <li>Expired (If ExpiresOn is in the past)</li>\r\n          </ul>\r\n          <li>WithdrawnOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Withdrawn</li>\r\n          </ul>\r\n          <li>ContractOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Pending</li>\r\n          </ul>\r\n          <li>ClosedOn (along with ListedDate, ContractOn)</li>\r\n          <ul>\r\n            <li>Closed</li>\r\n          </ul>\r\n        </ul>\r\n        <li>If both status and dates are supplied, then the status and dates will be validated as below.</li>\r\n        <ul>\r\n          <li>Pre-Listing - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in future)</li>\r\n          </ul>\r\n          <li>Active - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n          </ul>\r\n          <li>Expired - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ExpiresOn (in Past)</li>\r\n          </ul>\r\n          <li>Withdrawn - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>WithdrawnOn (in Past)</li>\r\n          </ul>\r\n          <li>Pending - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ContractOn</li>\r\n          </ul>\r\n          <li>Closed - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ContractOn</li>\r\n            <li>ClosedDate</li>\r\n          </ul>\r\n        </ul>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "ResidentialSaleListings_Put",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Listing. It can be either Listing GUID or Listing ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Listing GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "listing",
						"in": "body",
						"description": "This parameter represents the Residential Sale Listing Details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ResidentialSaleListing"
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/listings/residentialsales": {
			"post": {
				"tags": [
					"ResidentialSaleListings"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#RSLPOST').toggle();\" />\r\n  <div id=\"RSLPOST\">\r\n    <ul>\r\n      <li>This method will be used to add a new Residential Sale listing to the system.</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>Property</li>\r\n        <ul>\r\n          <li>Location (Address of the property)</li>\r\n          <li>TypeCode or TypeDescription (type of the property)</li>\r\n          <li>PropertyName(only if brand is SIR)</li>\r\n        </ul>\r\n        <li>Listing</li>\r\n        <ul>\r\n          <li>Office (Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n          <li>ProviderIdentifier</li>\r\n          <li>PrimaryMLS(only for domestic master franchises)</li>\r\n          <li>PrimaryAgent or Team</li>\r\n        </ul>\r\n        <li>ListPrice</li>\r\n        <li>Currency (Code or Name)</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be supplied while adding/updating a Listing</li>\r\n        <li>If YearRenovated is supplied, it must not be in the future and must not be before YearBuilt</li>\r\n        <li>Listing Office supplied must exist with an open/executed status</li>\r\n        <li>Agent supplied for the listing must exist</li>\r\n        <li>Team supplied for the listing must exist</li>\r\n        <li>Listing Remarks must only be with 1 Language/Remark Type combination </li>\r\n        <li>OpenHouse StartOn Date/Time must not be after the EndOn Date/Time</li>\r\n        <li>OpenHouse StartOn Date/Time and EndOn Date/Time is mandatory</li>\r\n        <li>OpenHouse Remarks must not have multiple records for the same language</li>\r\n        <li>Listing website(URL) cannot be duplicated for the same language and type</li>\r\n        <li>There must not be multiple Media Captions with the same language for each media item</li>\r\n        <li>Property type should not be Commercial</li>\r\n        <li>If ExpiresOn date is supplied then it should be greater than ListedDate</li>\r\n        <li>If ClosedOn date is supplied then it should be greater than ListedDate and must not be in the future</li>\r\n        <li>ContractOn should be greater than ListedDate</li>\r\n        <li>Listing features must not have multiple records with same feature</li>\r\n        <li>LastSoldOn must not be in the future</li>\r\n        <li>ListPriceInUSD is a read-only field and is always auto-calculated based on ListPrice</li>\r\n        <li>The valid Listing Statuses that can be supplied are:</li>\r\n        <ul>\r\n          <li>Pre-Listing</li>\r\n          <li>Active</li>\r\n          <li>Pending (only for Transaction NOT Enabled offices)</li>\r\n          <li>Closed (only for Transaction NOT Enabled offices)</li>\r\n        </ul>\r\n        <li>\r\n                While adding a listing, either the Status or equivalent dates or combination of Status and Dates can be supplied. <br />\r\n                If only Status is supplied, the dates will be defaulted. Dates defaulted (defaulted to current date) for each status is:\r\n                <ul><li>Pre-Listing</li><ul><li>ListedDate (will be current date + (X) days)</li></ul><li>Active</li><ul><li>ListedDate</li></ul><li>Pending</li><ul><li>ListedDate</li><li>ContractOn</li><li>EstimatedClosedOn (will be current date + 90 days)</li></ul><li>Closed</li><ul><li>ListedDate</li><li>ContractOn</li><li>EstimatedClosedOn (will be current date + 90 days)</li><li>ClosedDate</li></ul></ul></li>\r\n        <li>If only dates are supplied, then the status will be derived based on the dates.</li>\r\n        <ul>\r\n          <li>ListedDate</li>\r\n          <ul>\r\n            <li>Active (If listed date is in the past)</li>\r\n            <li>Pre-Listing (If listed date is in the future)</li>\r\n          </ul>\r\n          <li>ExpiresOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Active (If ExpiresOn is in the future)</li>\r\n            <li>Expired (If ExpiresOn is in the past)</li>\r\n          </ul>\r\n          <li>ContractOn (along with ListedDate)</li>\r\n          <ul>\r\n            <li>Pending</li>\r\n          </ul>\r\n          <li>ClosedOn (along with ListedDate, ContractOn)</li>\r\n          <ul>\r\n            <li>Closed</li>\r\n          </ul>\r\n        </ul>\r\n        <li>If both status and dates are supplied, then the status and dates will be validated as below.</li>\r\n        <ul>\r\n          <li>Pre-Listing - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in future)</li>\r\n          </ul>\r\n          <li>Active - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n          </ul>\r\n          <li>Pending - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ContractOn</li>\r\n          </ul>\r\n          <li>Closed - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ListedDate (in Past)</li>\r\n            <li>ContractOn</li>\r\n            <li>ClosedDate</li>\r\n          </ul>\r\n        </ul>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "ResidentialSaleListings_Post",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "listing",
						"in": "body",
						"description": "This parameter represents the Residential Sale Listing Details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ResidentialSaleListing"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/newdevelopments/residentialsales/{id}": {
			"get": {
				"tags": [
					"ResidentialSaleNewDevelopment"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#RSNDC').toggle();\" />\r\n  <div id=\"RSNDC\">\r\n    <ul>\r\n      <li>This method is to get the ResidentialSaleNewDevelopment details by passing NewDevelopmentGUID or ProviderIdentifier</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a ResidentialSaleNewDevelopment</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id should be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If a Residential Sale NewDevelopment does not exists in our system for the NewDevelopment GUID provided, the method will return “NewDevelopment Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "ResidentialSaleNewDevelopment_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the NewDevelopment. It can be either NewDevelopment GUID or NewDevelopment ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if NewDevelopment GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResidentialSaleNewDevelopment"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/newdevelopments/delta": {
			"get": {
				"tags": [
					"ResidentialSaleNewDevelopment"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#RSDELTA').toggle();\" />\r\n  <div id=\"RSDELTA\">\r\n    <ul>\r\n      <li>This method will return list of listing GUIDs (if available) that are created or modified between specified fromDate and toDate.</li>\r\n      <li>The results can be filtered by brand or list of RFG Company IDs or Listing Type Code (The list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingType)</li>\r\n      <li>The Date-Time format supported is standard date-time format (yyyy-MM-ddThh:mm:ss[.fffffff]). Example: 2015-02-13T06:40:48.937</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>FromDate is mandatory</li>\r\n        <li>If toDate is not supplied, system will take today's date</li>\r\n        <li>The fromDate must not be in Future</li>\r\n        <li>The toDate must not be before fromDate</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "ResidentialSaleNewDevelopment_Delta",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"description": "This parameter represents the Date from which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "This parameter represents the Date to which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "brandCode",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": false,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "companyIds",
						"in": "query",
						"description": "This parameter represents the List of RFG Company IDs to be used for filtering the delta search results",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "developmentType",
						"in": "query",
						"description": "This parameter represents the development Type code that should be used for filtering the delta search results (eg: Residential)",
						"required": false,
						"type": "string"
					},
					{
						"name": "isLastUpdatedBy",
						"in": "query",
						"description": "If isLastUpdatedBy is true then Listings are displayed which are not updated by current user. If isLastUpdatedBy is false then all the listings are displayed",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/NewDevelopmentDelta"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/transactions/sales/{id}": {
			"get": {
				"tags": [
					"SaleTransactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#STGET').toggle();\" />\r\n  <div id=\"STGET\">\r\n    <ul>\r\n      <li>This method is to get Commercial/Residential Sale Transaction details by passing TransactionGUID or ProviderIdentifier</li>\r\n      <li>This will be primarily called as a result of a delta call or after adding a new Transaction</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If a Sale Transaction does not exist in our system for the Transaction GUID/ProviderIdentifier supplied, the method will return “HTTP 404 - Not Found” error</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "SaleTransactions_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Transaction. It can be either Transaction GUID or Transaction ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Transaction GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SaleTransaction"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			},
			"put": {
				"tags": [
					"SaleTransactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#STPUT').toggle();\" />\r\n  <div id=\"STPUT\">\r\n    <ul>\r\n      <li>This method will be used to update an existing Sale Transaction</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>Parameter - id (TransactionGUID/ProviderIdentifier)</li>\r\n        <li>ListingOffice or SalesOffice (or both) (Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n        <li>IsCommercial</li>\r\n        <li>SalePrice</li>\r\n        <li>Currency (Code or Name)</li>\r\n        <li>PropertyType (Code or Description)</li>\r\n        <li>PropertyAddress</li>\r\n        <li>ListingDetails</li>\r\n        <ul>\r\n          <li>ListPrice</li>\r\n          <li>ListedDate</li>\r\n          <li>Currency (Code or Name)</li>\r\n          <li>Office</li>\r\n          <li>PrimaryMLS</li>\r\n        </ul>\r\n        <li>ContractOn</li>\r\n        <li>ListSideGrossCommission</li>\r\n        <li>BuyingSideAgents</li>\r\n        <ul>\r\n          <li>Agent</li>\r\n          <ul>\r\n            <li>FirstName</li>\r\n            <li>LastName</li>\r\n            <li>PrimaryEmailAddress</li>\r\n          </ul>\r\n        </ul>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory fields must be supplied while adding/updating a Transaction</li>\r\n        <li>ContractOn Date must not be in the future</li>\r\n        <li>ClosedOn Date must not be in the future</li>\r\n        <li>The transaction can be updated only within 90 days from the Closing Reported Date</li>\r\n        <li>ContractOn Date must be prior to ClosedOn Date</li>\r\n        <li>Total Participation percentage for all list side agents must be equal to 100%</li>\r\n        <li>There must be only one primary agent on List side</li>\r\n        <li>Total Participation percentage for all Buy side agents must be equal to 100%</li>\r\n        <li>There must be only one primary agent on Buy side</li>\r\n        <li>List Side Agent (if supplied) must exist in the company of the List Side Office</li>\r\n        <li>Buy Side Agent (if supplied) must exist in the company of the Buy Side Office</li>\r\n        <li>Transaction can be associated with de-active Agent with deactivate Sales Position within last 1 year from today’s date.</li>\r\n        <li>Total ListSide Referral amount must not be greater that the List Side Gross Commission</li>\r\n        <li>Total BuySide Referral amount must not be greater that the Buy Side Gross Commission</li>\r\n        <li>Total Referral amount must not be greater that the Total Gross Commission</li>\r\n        <li>Transaction cannot be supplied as cancelled while adding</li>\r\n        <li>Adjusted Gross Commission (Gross Commission (GC) – Other Company (OC) Split Commission  - Deductible Referral Fee) must be greater than or equal to Zero</li>\r\n        <li>If the Transaction is on the Listing Side, then referrals are allowed only on the List Side</li>\r\n        <li>If the Transaction is on the Buying Side, then referrals are allowed only on the Buy Side</li>\r\n        <li>Transaction, once closed cannot be revoked</li>\r\n        <li>Transaction, once cancelled cannot be revoked</li>\r\n        <li>The valid Transaction Statuses that can be supplied are:</li>\r\n        <ul>\r\n          <li>Pending</li>\r\n          <li>Closed</li>\r\n          <li>Cancelled</li>\r\n        </ul>\r\n        <li>\r\n                While adding a transaction, either the Status or equivalent dates or combination of Status and Dates can be supplied. <br />\r\n                If only Status is supplied, the dates will be defaulted/protected (if exists in our system). Dates defaulted (defaulted to current date) for each status is:\r\n                <ul><li>Pending</li><ul><li>ContractOn</li><li>EstimatedClosedOn</li></ul><li>Closed</li><ul><li>ContractOn</li><li>EstimatedClosedOn</li><li>ClosedDate</li></ul><li>Cancelled</li><ul><li>CancelledOn</li></ul></ul></li>\r\n        <li>If only dates are supplied, then the status will be derived based on the dates.</li>\r\n        <ul>\r\n          <li>ContractOn</li>\r\n          <ul>\r\n            <li>Pending</li>\r\n          </ul>\r\n          <li>ClosedOn (along with ContractOn)</li>\r\n          <ul>\r\n            <li>Closed</li>\r\n          </ul>\r\n          <li>CancelledOn</li>\r\n          <ul>\r\n            <li>Cancelled</li>\r\n          </ul>\r\n        </ul>\r\n        <li>If both status and dates are supplied, then the status and dates will be validated as below.</li>\r\n        <ul>\r\n          <li>Pending - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ContractOn</li>\r\n          </ul>\r\n          <li>Closed - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ContractOn</li>\r\n            <li>ClosedDate</li>\r\n          </ul>\r\n          <li>Cancelled - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ContractOn</li>\r\n            <li>CancelledOn</li>\r\n          </ul>\r\n        </ul>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "SaleTransactions_Put",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Transaction. It can be either Transaction GUID or Transaction ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Transaction GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					},
					{
						"name": "transaction",
						"in": "body",
						"description": "This parameter represents the Sale Transaction details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SaleTransaction"
						}
					}
				],
				"responses": {
					"204": {
						"description": "NoContent"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/transactions/sales": {
			"post": {
				"tags": [
					"SaleTransactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#STPOST').toggle();\" />\r\n  <div id=\"STPOST\">\r\n    <ul>\r\n      <li>This method will be used to add a new Sale Transaction</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>ProviderIdentifier</li>\r\n        <li>ListingOffice or SalesOffice (or both) (Office GUID OR ProviderIdentifier (can be provided only by the office provider) OR Company ID &amp; Office ID)</li>\r\n        <li>IsCommercial</li>\r\n        <li>SalePrice</li>\r\n        <li>Currency (Code or Name)</li>\r\n        <li>PropertyType (Code or Description)</li>\r\n        <li>PropertyAddress</li>\r\n        <li>ListingDetails</li>\r\n        <ul>\r\n          <li>ListPrice</li>\r\n          <li>Currency (Code or Name)</li>\r\n          <li>Office</li>\r\n        </ul>\r\n        <li>Dates or Status</li>\r\n        <li>ListSideGrossCommission in case of OL and IH and SaleSideCommission in case of OS</li>\r\n        <li>Agents</li>\r\n        <ul>\r\n          <li>Agent</li>\r\n          <ul>\r\n            <li>CompanyStaff GUID/Staff ProviderIdentifier</li>\r\n            <li>IsPrimary</li>\r\n            <li>Commission Percentage</li>\r\n          </ul>\r\n        </ul>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory fields must be supplied while adding/updating a Transaction</li>\r\n        <li>ContractOn Date must not be in the future</li>\r\n        <li>ClosedOn Date must not be in the future</li>\r\n        <li>ContractOn Date must be prior to ClosedOn Date</li>\r\n        <li>Total Participation percentage for all list side agents must be equal to 100%</li>\r\n        <li>There must be only one primary agent on List side</li>\r\n        <li>Total Participation percentage for all Buy side agents must be equal to 100%</li>\r\n        <li>There must be only one primary agent on Buy side</li>\r\n        <li>List Side Agent (if supplied) must exist in the company of the List Side Office</li>\r\n        <li>Buy Side Agent (if supplied) must exist in the company of the Buy Side Office</li>\r\n        <li>Transaction can be associated with de-active Agent with deactivate Sales Position within last 1 year from today’s date.</li>\r\n        <li>Total ListSide Referral amount must not be greater that the List Side Gross Commission</li>\r\n        <li>Total BuySide Referral amount must not be greater that the Buy Side Gross Commission</li>\r\n        <li>Total Referral amount must not be greater that the Total Gross Commission</li>\r\n        <li>Transaction cannot be supplied as cancelled while adding</li>\r\n        <li>Adjusted Gross Commission (Gross Commission (GC) – Other Company (OC) Split Commission  - Deductible Referral Fee) must be greater than or equal to Zero</li>\r\n        <li>If the Transaction is on the Listing Side, then referrals are allowed only on the List Side - If Buying side referrals is supplied, it will be ignored</li>\r\n        <li>If the Transaction is on the Buying Side, then referrals are allowed only on the Buy Side - If Selling side referrals is supplied, it will be ignored</li>\r\n        <li>The valid Transaction Statuses that can be supplied are:</li>\r\n        <ul>\r\n          <li>Pending</li>\r\n          <li>Closed</li>\r\n        </ul>\r\n        <li>\r\n                While adding a Transaction, either the Status or equivalent dates or combination of Status and Dates can be supplied. <br />\r\n                If only Status is supplied, the dates will be defaulted. Dates defaulted (defaulted to current date) for each status is:\r\n                <ul><li>Pending</li><ul><li>ContractOn</li><li>EstimatedClosedOn</li></ul><li>Closed</li><ul><li>ContractOn</li><li>EstimatedClosedOn</li><li>ClosedDate</li></ul></ul></li>\r\n        <li>If only dates are supplied, then the status will be derived based on the dates.</li>\r\n        <ul>\r\n          <li>ContractOn</li>\r\n          <ul>\r\n            <li>Pending</li>\r\n          </ul>\r\n          <li>ClosedOn (along with ContractOn)</li>\r\n          <ul>\r\n            <li>Closed</li>\r\n          </ul>\r\n        </ul>\r\n        <li>If both status and dates are supplied, then the status and dates will be validated as below.</li>\r\n        <ul>\r\n          <li>Pending - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ContractOn</li>\r\n          </ul>\r\n          <li>Closed - Only Dates that must be supplied are:</li>\r\n          <ul>\r\n            <li>ContractOn</li>\r\n            <li>ClosedDate</li>\r\n          </ul>\r\n        </ul>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "SaleTransactions_Post",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "saleTransaction",
						"in": "body",
						"description": "This parameter represents the Sale Transaction details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SaleTransaction"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/teams/{id}": {
			"get": {
				"tags": [
					"Teams"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#TGET').toggle();\" />\r\n  <div id=\"TGET\">\r\n    <ul>\r\n      <li>This method is to get the Team details by passing Team GUID or ProviderIdentifier</li>\r\n      <li>This will be primarily called as a result of a delta call</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - idType is mandatory</li>\r\n        <li>If the idType supplied is 'id', then the supplied id must be a GUID - 32 hexadecimal digits separated by hyphens (format: 00000000-0000-0000-0000-000000000000)</li>\r\n        <li>If Team GUID does not exists in our system, API will return “HTTP 404 - Not Found” status code.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Teams_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "This parameter represents the identifier of the Team. It can be either Team GUID or ProviderIdentifier",
						"required": true,
						"type": "string"
					},
					{
						"name": "idType",
						"in": "query",
						"description": "This parameter represents the type of the identifier provided. \r\nThe value should be set to \"id\" if Team GUID is provided as the identifier. \r\nIf the identifier provided is ProviderIdentifier, the idType should be \"providerid\"",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Team"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/teams/delta": {
			"get": {
				"tags": [
					"Teams"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#TDELTA').toggle();\" />\r\n  <div id=\"TDELTA\">\r\n    <ul>\r\n      <li>This method will return list of Team GUIDs (if available) that are created or modified between fromDate and toDate</li>\r\n      <li>The results can be filtered by brand or list of RFG Company IDs</li>\r\n      <li>The Date-Time format supported is standard date-time format (yyyy-MM-ddThh:mm:ss[.fffffff]). Example: 2015-02-13T06:40:48.937</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>FromDate is mandatory</li>\r\n        <li>If toDate is not supplied, system will take today's date</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Teams_Delta",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"description": "This parameter represents the Date from which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "This parameter represents the Date to which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "brandCode",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": false,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "companyIds",
						"in": "query",
						"description": "This parameter represents the List of RFG Company IDs to be used for filtering the delta search results",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "isLastUpdatedBy",
						"in": "query",
						"description": "If isLastUpdatedBy is true then Teams are displayed which are not updated by current user. If isLastUpdatedBy is false then all the Teams are displayed",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/EntityDelta"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/teams/bycompany": {
			"get": {
				"tags": [
					"Teams"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GTBC').toggle();\" />\r\n  <div id=\"GTBC\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of all active Teams for the provided Company GUID</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The parameter - companyGuid is mandatory</li>\r\n        <li>This method will return teams only for Company GUID of active companies</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Teams_SearchByCompany",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "companyGuid",
						"in": "query",
						"description": "This parameter represents the Company GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TeamBasicInfo"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/teams": {
			"get": {
				"tags": [
					"Teams"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GTBC').toggle();\" />\r\n  <div id=\"GTBC\">\r\n    <ul>\r\n      <li>This method will be used to search all the teams by specifying one or more search criteria.</li>\r\n      <li>The search will return teams which are active and de-active.</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ol>\r\n        <li>CompanyGuid or CompanyID or TeamID or TeamName</li>\r\n      </ol>\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All the Mandatory fields must be supplied</li>\r\n        <li>This method will only return teams belonging to active companies</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Teams_Search",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "brand",
						"in": "query",
						"description": "This parameter represents the brand.",
						"required": true,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "companyGuid",
						"in": "query",
						"description": "This parameter represents the Unique identifier of the company to which the team belongs to.",
						"required": false,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "companyId",
						"in": "query",
						"description": "This parameter represents Company Id to which the team belongs to.",
						"required": false,
						"type": "string"
					},
					{
						"name": "teamId",
						"in": "query",
						"description": "This parameter represents the Team Id",
						"required": false,
						"type": "string"
					},
					{
						"name": "teamName",
						"in": "query",
						"description": "This parameter represents the Team Name",
						"required": false,
						"type": "string"
					},
					{
						"name": "isActive",
						"in": "query",
						"description": "This parameter represents the status of the team",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TeamSearchResult"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/transactions": {
			"get": {
				"tags": [
					"Transactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#ST').toggle();\" />\r\n  <div id=\"ST\">\r\n    <ul>\r\n      <li>This method will be used to search transactions</li>\r\n      <li>The search will only return Transactions of type - Sale Transaction (Residential and Commercial) and Other Income Transaction (Residential and Commercial)</li>\r\n      <li>The search will be an AND based search and will show the results that satisfy all the criteria provided</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Mandatory Fields:</u>\r\n      </b>\r\n      <ul>\r\n        <li>OfficeGUID</li>\r\n      </ul>\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>All Mandatory fields must be supplied while adding/updating a Transaction</li>\r\n        <li>The supplied Office GUID must correspond to an open/executed offices</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Transactions_Search",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "criteria.transactionTypeCode",
						"in": "query",
						"description": "This attribute represents the code value of the type of transaction. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionType<br />\r\nExamples: 01,03 etc.<br />\r\nMax Length: 6 characters",
						"required": false,
						"type": "string",
						"maxLength": 6,
						"minLength": 0
					},
					{
						"name": "criteria.transactionTypeDescription",
						"in": "query",
						"description": "This attribute represents the type of transaction (description). \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionType<br />\r\nExamples: Residential Sale, Commercial Sale etc.<br />\r\nMax Length: 150 characters",
						"required": false,
						"type": "string",
						"maxLength": 150,
						"minLength": 0
					},
					{
						"name": "criteria.officeGuid",
						"in": "query",
						"description": "This attribute represents the GUID information of the Office.\r\nThis attribute will be used as search criteria to search and fetch the results.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": false,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "criteria.agentGuid",
						"in": "query",
						"description": "This attribute represents the GUID information of the Agent.\r\nThis attribute will be used as search criteria to search and fetch the results.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": false,
						"type": "string",
						"format": "uuid"
					},
					{
						"name": "criteria.mlsId",
						"in": "query",
						"description": "This attribute represents the numeric identifier issued by some Multiple Listing Service Boards to local real estate agents.\r\nThis attribute will be used as search criteria to search and fetch the results.<br />\r\nMax Length: 50 characters",
						"required": false,
						"type": "string",
						"maxLength": 50,
						"minLength": 0
					},
					{
						"name": "criteria.transactionId",
						"in": "query",
						"description": "This attribute represents the Transaction Id and is a read-only field. <br />\r\nMax Length: 20 characters",
						"required": false,
						"type": "string",
						"maxLength": 20,
						"minLength": 0
					},
					{
						"name": "criteria.addressLine1",
						"in": "query",
						"description": "This attribute represents the Address Line 1 information.<br />\r\nMax Length: 200 characters",
						"required": false,
						"type": "string",
						"maxLength": 200,
						"minLength": 0
					},
					{
						"name": "criteria.city",
						"in": "query",
						"description": "This attribute represents the City Name<br />\r\nMax Length: 60 characters",
						"required": false,
						"type": "string",
						"maxLength": 60,
						"minLength": 0
					},
					{
						"name": "criteria.postalCode",
						"in": "query",
						"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
						"required": false,
						"type": "string",
						"maxLength": 15,
						"minLength": 0
					},
					{
						"name": "criteria.stateProvinceCode",
						"in": "query",
						"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 4 characters",
						"required": false,
						"type": "string",
						"maxLength": 4,
						"minLength": 0
					},
					{
						"name": "criteria.stateProvinceName",
						"in": "query",
						"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.countryCode",
						"in": "query",
						"description": "This attribute represents the Country ISO Code<br />\r\nMax Length: 2 characters",
						"required": false,
						"type": "string",
						"maxLength": 2,
						"minLength": 0
					},
					{
						"name": "criteria.countryName",
						"in": "query",
						"description": "This attribute represents the Country Name.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.activeSince",
						"in": "query",
						"description": "This attribute represents Listed Since date. The search will look for transactions which are listed since the provided date    \r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "criteria.pendingSince",
						"in": "query",
						"description": " This attribute represents Pending Since date. The search will look for transactions which are in pending status since the provided date\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "criteria.closedSince",
						"in": "query",
						"description": "This attribute represents Closed Since date. The search will look for transactions which are closed since the provided date\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "criteria.statusCode",
						"in": "query",
						"description": "This attribute represents the code value of the status of transaction. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as <br />\r\nExamples: <br />\r\nMax Length: 6 characters",
						"required": false,
						"type": "string",
						"maxLength": 6,
						"minLength": 0
					},
					{
						"name": "criteria.statusDescription",
						"in": "query",
						"description": "This attribute represents the description value of the status of transaction. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as <br />\r\nExamples:<br />\r\nMax Length: 150 characters",
						"required": false,
						"type": "string",
						"maxLength": 150,
						"minLength": 0
					},
					{
						"name": "criteria.seller.firstName",
						"in": "query",
						"description": "This attribute represents the First Name of the person",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.seller.lastName",
						"in": "query",
						"description": "This attribute represents the Last Name of the person",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.seller.businessEntityName",
						"in": "query",
						"description": "This attribute represents the Business Entity Name",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.seller.emailAddress",
						"in": "query",
						"description": "This attribute represents Primary Email address",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.seller.phoneNumber",
						"in": "query",
						"description": "This attribute represents Primary Phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.seller.addressLine1",
						"in": "query",
						"description": "This attribute represents the Address Line 1 information.",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.seller.city",
						"in": "query",
						"description": "This attribute represents the City information.<br />\r\nMax Length: 60 characters",
						"required": false,
						"type": "string",
						"maxLength": 60,
						"minLength": 0
					},
					{
						"name": "criteria.seller.postalCode",
						"in": "query",
						"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
						"required": false,
						"type": "string",
						"maxLength": 15,
						"minLength": 0
					},
					{
						"name": "criteria.seller.stateProvinceCode",
						"in": "query",
						"description": "This attribute represents the StateProvince information. <br />\r\nMax Length: 4 characters",
						"required": false,
						"type": "string",
						"maxLength": 4,
						"minLength": 0
					},
					{
						"name": "criteria.seller.stateProvinceName",
						"in": "query",
						"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.seller.countryCode",
						"in": "query",
						"description": "This attribute represents the Country ISO Code<br />\r\nMax Length: 2 characters",
						"required": false,
						"type": "string",
						"maxLength": 2,
						"minLength": 0
					},
					{
						"name": "criteria.seller.countryName",
						"in": "query",
						"description": "This attribute represents the Country Name.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.buyer.firstName",
						"in": "query",
						"description": "This attribute represents the First Name of the person",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyer.lastName",
						"in": "query",
						"description": "This attribute represents the Last Name of the person",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyer.businessEntityName",
						"in": "query",
						"description": "This attribute represents the Business Entity Name",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyer.emailAddress",
						"in": "query",
						"description": "This attribute represents Primary Email address",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyer.phoneNumber",
						"in": "query",
						"description": "This attribute represents Primary Phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyer.addressLine1",
						"in": "query",
						"description": "This attribute represents the Address Line 1 information.",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyer.city",
						"in": "query",
						"description": "This attribute represents the City information.<br />\r\nMax Length: 60 characters",
						"required": false,
						"type": "string",
						"maxLength": 60,
						"minLength": 0
					},
					{
						"name": "criteria.buyer.postalCode",
						"in": "query",
						"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
						"required": false,
						"type": "string",
						"maxLength": 15,
						"minLength": 0
					},
					{
						"name": "criteria.buyer.stateProvinceCode",
						"in": "query",
						"description": "This attribute represents the StateProvince information. <br />\r\nMax Length: 4 characters",
						"required": false,
						"type": "string",
						"maxLength": 4,
						"minLength": 0
					},
					{
						"name": "criteria.buyer.stateProvinceName",
						"in": "query",
						"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.buyer.countryCode",
						"in": "query",
						"description": "This attribute represents the Country ISO Code<br />\r\nMax Length: 2 characters",
						"required": false,
						"type": "string",
						"maxLength": 2,
						"minLength": 0
					},
					{
						"name": "criteria.buyer.countryName",
						"in": "query",
						"description": "This attribute represents the Country Name.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.buyerBusinessEntity.firstName",
						"in": "query",
						"description": "This attribute represents the First Name of the person",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyerBusinessEntity.lastName",
						"in": "query",
						"description": "This attribute represents the Last Name of the person",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyerBusinessEntity.businessEntityName",
						"in": "query",
						"description": "This attribute represents the Business Entity Name",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyerBusinessEntity.emailAddress",
						"in": "query",
						"description": "This attribute represents Primary Email address",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyerBusinessEntity.phoneNumber",
						"in": "query",
						"description": "This attribute represents Primary Phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyerBusinessEntity.addressLine1",
						"in": "query",
						"description": "This attribute represents the Address Line 1 information.",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.buyerBusinessEntity.city",
						"in": "query",
						"description": "This attribute represents the City information.<br />\r\nMax Length: 60 characters",
						"required": false,
						"type": "string",
						"maxLength": 60,
						"minLength": 0
					},
					{
						"name": "criteria.buyerBusinessEntity.postalCode",
						"in": "query",
						"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
						"required": false,
						"type": "string",
						"maxLength": 15,
						"minLength": 0
					},
					{
						"name": "criteria.buyerBusinessEntity.stateProvinceCode",
						"in": "query",
						"description": "This attribute represents the StateProvince information. <br />\r\nMax Length: 4 characters",
						"required": false,
						"type": "string",
						"maxLength": 4,
						"minLength": 0
					},
					{
						"name": "criteria.buyerBusinessEntity.stateProvinceName",
						"in": "query",
						"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.buyerBusinessEntity.countryCode",
						"in": "query",
						"description": "This attribute represents the Country ISO Code<br />\r\nMax Length: 2 characters",
						"required": false,
						"type": "string",
						"maxLength": 2,
						"minLength": 0
					},
					{
						"name": "criteria.buyerBusinessEntity.countryName",
						"in": "query",
						"description": "This attribute represents the Country Name.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.sellerBusinessEntity.firstName",
						"in": "query",
						"description": "This attribute represents the First Name of the person",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.sellerBusinessEntity.lastName",
						"in": "query",
						"description": "This attribute represents the Last Name of the person",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.sellerBusinessEntity.businessEntityName",
						"in": "query",
						"description": "This attribute represents the Business Entity Name",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.sellerBusinessEntity.emailAddress",
						"in": "query",
						"description": "This attribute represents Primary Email address",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.sellerBusinessEntity.phoneNumber",
						"in": "query",
						"description": "This attribute represents Primary Phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.sellerBusinessEntity.addressLine1",
						"in": "query",
						"description": "This attribute represents the Address Line 1 information.",
						"required": false,
						"type": "string"
					},
					{
						"name": "criteria.sellerBusinessEntity.city",
						"in": "query",
						"description": "This attribute represents the City information.<br />\r\nMax Length: 60 characters",
						"required": false,
						"type": "string",
						"maxLength": 60,
						"minLength": 0
					},
					{
						"name": "criteria.sellerBusinessEntity.postalCode",
						"in": "query",
						"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
						"required": false,
						"type": "string",
						"maxLength": 15,
						"minLength": 0
					},
					{
						"name": "criteria.sellerBusinessEntity.stateProvinceCode",
						"in": "query",
						"description": "This attribute represents the StateProvince information. <br />\r\nMax Length: 4 characters",
						"required": false,
						"type": "string",
						"maxLength": 4,
						"minLength": 0
					},
					{
						"name": "criteria.sellerBusinessEntity.stateProvinceName",
						"in": "query",
						"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					},
					{
						"name": "criteria.sellerBusinessEntity.countryCode",
						"in": "query",
						"description": "This attribute represents the Country ISO Code<br />\r\nMax Length: 2 characters",
						"required": false,
						"type": "string",
						"maxLength": 2,
						"minLength": 0
					},
					{
						"name": "criteria.sellerBusinessEntity.countryName",
						"in": "query",
						"description": "This attribute represents the Country Name.<br />\r\nMax Length: 100 characters",
						"required": false,
						"type": "string",
						"maxLength": 100,
						"minLength": 0
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TransactionSummary"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/transactions/byoffice": {
			"get": {
				"tags": [
					"Transactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GTRBO').toggle();\" />\r\n  <div id=\"GTRBO\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of all transactions reported by the Office for the specified Office GUID</li>\r\n      <li>The search will only return Transactions of type - Sale Transaction (Residential and Commercial) and Other Income Transaction (Residential and Commercial)</li>\r\n      <li>This will be primarily used to sync all the transactions for an office</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The supplied Office GUID must correspond to an open/executed Office</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Transactions_SearchByOffice",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "officeGuid",
						"in": "query",
						"description": "This parameter represents the Office GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TransactionSummary"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/transactions/bycompany": {
			"get": {
				"tags": [
					"Transactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GTRBC').toggle();\" />\r\n  <div id=\"GTRBC\">\r\n    <ul>\r\n      <li>This method will be used to get the summary of all transactions reported by the Company for the specified Company GUID</li>\r\n      <li>The search will only return Transactions of type - Sale Transaction (Residential and Commercial) and Other Income Transaction (Residential and Commercial)</li>\r\n      <li>This will be primarily used to sync all the transactions for a company</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>The supplied Company GUID must correspond to an active Company</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Transactions_SearchByCompany",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "companyGuid",
						"in": "query",
						"description": "This parameter represents the Company GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TransactionSummary"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/transactions/delta": {
			"get": {
				"tags": [
					"Transactions"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#STDELTA').toggle();\" />\r\n  <div id=\"STDELTA\">\r\n    <ul>\r\n      <li>This method will return list of Transaction GUIDs (if available) that are created or modified between fromDate and toDate.</li>\r\n      <li>The results can be filtered by brand or list of RFG Company IDs or Transaction Type Code (The list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionType)</li>\r\n      <li>The Date-Time format supported is standard date-time format (yyyy-MM-ddThh:mm:ss[.fffffff]). Example: 2015-02-13T06:40:48.937</li>\r\n      <li>This Method will only return results for transaction types - Sale Transaction (Residential and Commercial) and Other Income Transaction (Residential and Commercial)</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>FromDate is mandatory</li>\r\n        <li>If toDate is not supplied, system will take today's date</li>\r\n        <li>The fromDate must not be in Future</li>\r\n        <li>The toDate must not be before fromDate</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Transactions_Delta",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "fromDate",
						"in": "query",
						"description": "This parameter represents the Date from which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "toDate",
						"in": "query",
						"description": "This parameter represents the Date to which the delta operation needs to be performed. <br />\r\nDataType: DateTime with offset (Standard formats allowed are - yyyy-MM-ddThh:mm:ss[.fffffff] zzz. Any DateTime without offset will be considered as Eastern Time)<br />\r\nExample: 2015-02-13T06:40:48.937-04:00",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "brandCode",
						"in": "query",
						"description": "This parameter represents the Brand Code",
						"required": false,
						"type": "string",
						"enum": [
							"BHG",
							"C21",
							"CB",
							"CBC",
							"ERA",
							"SIR",
							"ZAP",
							"ZIP",
							"CLB",
							"COR"
						]
					},
					{
						"name": "companyIds",
						"in": "query",
						"description": "This parameter represents the List of RFG Company IDs to be used for filtering the delta search results",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "transactionType",
						"in": "query",
						"description": "This parameter represents the Transaction Type code that should be used for filtering the delta search results (eg: Residential Sale, Commercial Sale, Residential OtherIncome and Commercial OtherIncome)",
						"required": false,
						"type": "string"
					},
					{
						"name": "isLastUpdatedBy",
						"in": "query",
						"description": "If isLastUpdatedBy is true then Transactions are displayed which are not updated by current user. If isLastUpdatedBy is false then all the Transactions are displayed",
						"required": false,
						"type": "boolean"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TransactionDelta"
							}
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		},
		"/users/{personGuid}": {
			"get": {
				"tags": [
					"Users"
				],
				"description": "<remarks>\r\n  <input type=\"button\" value=\"Show/Hide\" onclick=\"$('#GETU').toggle();\" />\r\n  <div id=\"GETU\">\r\n    <ul>\r\n      <li>This method will be used by the consumers to get the basic person details with the affiliate roles and corporate titles, if applicable.</li>\r\n      <li>This method will be called to get the affiliate roles/corporate titles for a person who logs in using BTT SSO.</li>\r\n    </ul>\r\n    <div class=\"businessRule\">\r\n      <br />\r\n      <b>\r\n        <u>Business Rules:</u>\r\n      </b>\r\n      <ol>\r\n        <li>If Person GUID supplied does not exists in our system, API will return “HTTP 404 - Not Found” status code.</li>\r\n        <li>Affiliate Roles at company level will not have office data populated. The company information can be read from the company node of Affiliate role.</li>\r\n      </ol>\r\n    </div>\r\n  </div>\r\n</remarks>",
				"operationId": "Users_Get",
				"consumes": [
					"application/vnd.realogyfg.v1+json"
				],
				"produces": [
					"application/vnd.realogyfg.v1+json"
				],
				"parameters": [
					{
						"name": "personGuid",
						"in": "path",
						"description": "This parameter represents the Person GUID. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
						"required": true,
						"type": "string",
						"format": "uuid"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				},
				"deprecated": false,
				"security": [
					{
						"oauth2": [
							"fba1c585-76c6-42b2-802f-9af843bb3ce6"
						]
					}
				]
			}
		}
	},
	"definitions": {
		"SuccessEntity": {
			"description": "This Class represents theSuccess Entity class",
			"type": "object",
			"properties": {
				"entityGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the respective entity.",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"providerIdentifier": {
					"description": "This attribute represents the identifier used to represent the respective entity.",
					"type": "string"
				}
			}
		},
		"FailureEntity": {
			"description": "This Class represents the Failure Entities",
			"type": "object",
			"properties": {
				"entityGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the entity",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"providerIdentifier": {
					"description": "This attribute represents the identifier used to represent the respective entity.",
					"type": "string"
				},
				"errorMessages": {
					"description": "This attribute represents the failure text information of the failed entities",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"errorCodes": {
					"description": "This attribute represents the failure code information of the failed entities",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"BuyerSellerTransactionSearchResponse": {
			"description": "This class contains the Buyer Seller Transaction Search response attributes",
			"type": "object",
			"properties": {
				"count": {
					"format": "int32",
					"description": "This attribute represents the count of the Clients which satisfy the search criteria<br />",
					"type": "integer"
				},
				"results": {
					"description": "This attribute represents the client search result which satisfy the search criteria. The result is filtered after applying sorting and pagination<br />",
					"type": "array",
					"items": {
						"$ref": "#/definitions/BuyerSellerTransactionSearchResult"
					}
				}
			}
		},
		"BuyerSellerTransactionSearchResult": {
			"description": "This class contains the Buyer Seller Transaction Search result attributes",
			"type": "object",
			"properties": {
				"buyerSellerTransactionGuid": {
					"format": "uuid",
					"description": "This represents the identifier for the buyer/seller for the transaction. This identifier should be used to get more details about the buyer/seller and the transaction by invoking the method - /buyersellertransactions/{guid}",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"buyerSellerGuid": {
					"format": "uuid",
					"description": "This represents the identifier for the buyer/seller. In case of person this will be the Person GUID and for Business Entity, it will be the Business Entity GUID",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"isBuyingSide": {
					"description": "This attribute represents if the client belongs to listing or buying side<br />",
					"type": "boolean"
				},
				"isPerson": {
					"description": "Gets or sets IsPerson",
					"type": "boolean"
				},
				"currentPhone": {
					"description": "This attribute represents Current Phone of the buyer/seller<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"futurePhone": {
					"description": "This attribute represents Future Phone of the buyer/seller<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"closingDetails": {
					"$ref": "#/definitions/ClosingBasicInfo",
					"description": "This attribute represents the basic listing details associated with the transaction"
				},
				"typeCode": {
					"description": "This attribute represents the code value of the type of buyer/seller. While writing data to the API, either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as BuyerSellerType<br />\r\nExamples: P, C<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the type of buyer/seller. While writing data to the API, either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as BuyerSellerType<br />\r\nExamples: Person/Individual(s), Corporation etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person. While writing data to the API, this is required - if the seller type is Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person. While writing data to the API, this is required - if the seller type is Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"businessEntityName": {
					"description": "This attribute represents the Business Entity Name. While writing data to the API, this is required - if the seller type is Business Entity<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"emailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"website": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ClosingBasicInfo": {
			"description": "This class represents basic information of a closing transaction",
			"type": "object",
			"properties": {
				"transactionGuid": {
					"format": "uuid",
					"description": "This attribute represents the Transaction GUID This will be a read-only attribute. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"propertyAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Address of the property the transaction is associated with."
				},
				"closingPrice": {
					"format": "double",
					"description": "This attribute represents the closing price of the associated property.\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"closedDate": {
					"format": "date-time",
					"description": "This attribute represents the date in which the transaction was closed.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listPrice": {
					"format": "double",
					"description": "This attribute represents the list price of the associated property. This could be List Price (for Sale Transactions) OR Rental Price (for Rental/Lease Transactions)\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"noOfBedrooms": {
					"format": "int32",
					"description": "This attribute represents the number of bedrooms present in the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"fullBath": {
					"format": "int32",
					"description": "This attribute represents the number of full baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"halfBath": {
					"format": "int32",
					"description": "This attribute represents the number of half baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"buildingArea": {
					"format": "double",
					"description": "This attribute represents the total Area of the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"buildingAreaUnitCode": {
					"description": "This attribute represents the code of unit of measurement of the building area.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: AC, HC etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"buildingAreaUnitDescription": {
					"description": "This attribute represents the description of unit of measurement of the building area.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: Acres, Hectares etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"hasActiveAgent": {
					"description": "This attribute represents whether the transaction has an active agent present representing the brokerage side",
					"type": "boolean"
				},
				"agents": {
					"description": "This attribute represents  Agents which are associated to Transaction",
					"type": "array",
					"items": {
						"$ref": "#/definitions/BuyerSellerAgentInfo"
					}
				}
			}
		},
		"Address": {
			"description": "This class represents Address basic information",
			"required": [
				"addressLine1"
			],
			"type": "object",
			"properties": {
				"addressLine1": {
					"description": "This attribute represents the Address Line 1 information. This is required if Address is supplied.<br /><br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"addressLine2": {
					"description": "This attribute represents the Address Line 2 information.<br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"addressLine3": {
					"description": "This attribute represents the Address Line 3 information.<br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "This attribute represents the City Name.<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"postalCode": {
					"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceCode": {
					"description": "This attribute represents the StateProvince ISO Code.<br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceName": {
					"description": "This attribute represents the StateProvince Name.<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"countryCode": {
					"description": "This attribute represents the Country ISO Code. Either CountryCode or CountryName is required. <br />\r\nMax Length: 2 characters",
					"maxLength": 2,
					"minLength": 0,
					"type": "string"
				},
				"countryName": {
					"description": "This attribute represents the Country Name. Either CountryCode or CountryName is required, if Address is supplied. <br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"BuyerSellerAgentInfo": {
			"description": "This class represents Buyer Seller Agent details",
			"type": "object",
			"properties": {
				"companyStaffGUID": {
					"format": "uuid",
					"description": "Gets or sets CompanyStaff guid.",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"isPrimary": {
					"description": "Gets or sets a value indicating whether agent is primary or not",
					"type": "boolean"
				},
				"firstName": {
					"description": "Gets or sets FirstName",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "Gets or sets LastName",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"GeneralError": {
			"description": "This class represents general details of an error",
			"type": "object",
			"properties": {
				"message": {
					"description": "This field represents the description for the error occurred",
					"type": "string"
				},
				"traceId": {
					"format": "uuid",
					"description": "Unique id associated with the error. Use this trace id when you contact support for any error.",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"errorCodes": {
					"description": "List of error codes. You can use these to understand the reason of failure better. User these values when you contact support for any error.",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"BuyerSellerTransaction": {
			"description": "This class contains all the buyer/seller attributes for a transaction",
			"type": "object",
			"properties": {
				"buyerSellerTransactionGuid": {
					"format": "uuid",
					"description": "This represents the identifier for the buyer/seller for the transaction. This identifier should be used to get more details about the buyer/seller and the transaction by invoking the method - /buyersellertransactions/{guid}",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"buyerSellerGuid": {
					"format": "uuid",
					"description": "This represents the identifier for the buyer/seller. In case of person this will be the Person GUID and for Business Entity, it will be the Business Entity GUID",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"isBuyingSide": {
					"description": "This attribute represents the Side of the Client. The possible values are Buy or List<br />",
					"type": "boolean"
				},
				"isPerson": {
					"description": "This attribute represents if the buyer/seller is person. The possible values are true or false<br />",
					"type": "boolean"
				},
				"closingDetails": {
					"$ref": "#/definitions/ClosingSummary",
					"description": "This attribute represents the basic listing details associated with the transaction"
				},
				"currentPhone": {
					"description": "This attribute represents Current Phone of the buyer/seller<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"futurePhone": {
					"description": "This attribute represents Future Phone of the buyer/seller<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"currentAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Current Address of the buyer/seller"
				},
				"futureAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Future Address of the buyer/seller"
				},
				"surveyDeliveryTypeCode": {
					"description": "This attribute represents the SurveyDeliveryType code. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SurveyDelivery<br />\r\nExamples: E, P etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"surveyDeliveryTypeDescription": {
					"description": "This attribute represents the SurveyDeliveryType Description. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SurveyDelivery<br />\r\nExamples: Email, Paper etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"surveyLanguageCode": {
					"description": "This attribute represents the ISO Code of the Survey Language. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"surveyLanguageName": {
					"description": "This attribute represents name of the Survey Language. \r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"preferredClubCode": {
					"description": "This attribute represents the Preferred Client Club Code. This is applicable only for C21 - US\r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PreferredClientClub<br />\r\nExamples: 2, 5<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"preferredClubDescription": {
					"description": "This attribute represents the Preferred Client Club Description. This is applicable only for C21 - US\r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PreferredClientClub<br />\r\nExamples: 2 Year Plan ($25), 5 Year Plan ($43) etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"typeCode": {
					"description": "This attribute represents the code value of the type of buyer/seller. While writing data to the API, either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as BuyerSellerType<br />\r\nExamples: P, C<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the type of buyer/seller. While writing data to the API, either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as BuyerSellerType<br />\r\nExamples: Person/Individual(s), Corporation etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person. While writing data to the API, this is required - if the seller type is Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person. While writing data to the API, this is required - if the seller type is Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"businessEntityName": {
					"description": "This attribute represents the Business Entity Name. While writing data to the API, this is required - if the seller type is Business Entity<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"emailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"website": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ClosingSummary": {
			"description": "This class represents summary information of a closing transaction",
			"type": "object",
			"properties": {
				"listingSideAgents": {
					"description": "This attribute represents the Sales Associates involved in the listing side of the transaction",
					"type": "array",
					"items": {
						"$ref": "#/definitions/BuyerSellerParticipant"
					}
				},
				"buyingSideAgents": {
					"description": "This attribute represents the Sales Associates involved in the buying side of the transaction",
					"type": "array",
					"items": {
						"$ref": "#/definitions/BuyerSellerParticipant"
					}
				},
				"transactionGuid": {
					"format": "uuid",
					"description": "This attribute represents the Transaction GUID This will be a read-only attribute. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"propertyAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Address of the property the transaction is associated with."
				},
				"closingPrice": {
					"format": "double",
					"description": "This attribute represents the closing price of the associated property.\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"closedDate": {
					"format": "date-time",
					"description": "This attribute represents the date in which the transaction was closed.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listPrice": {
					"format": "double",
					"description": "This attribute represents the list price of the associated property. This could be List Price (for Sale Transactions) OR Rental Price (for Rental/Lease Transactions)\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"noOfBedrooms": {
					"format": "int32",
					"description": "This attribute represents the number of bedrooms present in the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"fullBath": {
					"format": "int32",
					"description": "This attribute represents the number of full baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"halfBath": {
					"format": "int32",
					"description": "This attribute represents the number of half baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"buildingArea": {
					"format": "double",
					"description": "This attribute represents the total Area of the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"buildingAreaUnitCode": {
					"description": "This attribute represents the code of unit of measurement of the building area.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: AC, HC etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"buildingAreaUnitDescription": {
					"description": "This attribute represents the description of unit of measurement of the building area.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: Acres, Hectares etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"hasActiveAgent": {
					"description": "This attribute represents whether the transaction has an active agent present representing the brokerage side",
					"type": "boolean"
				}
			}
		},
		"BuyerSellerParticipant": {
			"description": "This class represents the Sales Associate Basic Information",
			"required": [
				"agent",
				"commissionPercentage",
				"isPrimary"
			],
			"type": "object",
			"properties": {
				"agent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents Agent basic details. This is required if Participant is supplied."
				},
				"commissionPercentage": {
					"format": "double",
					"description": "This attribute represents Commission Percentage of the sales associate involved in the transaction. The decimal places will be rounded off as per the system's limit. \r\nThis is required if Participant is supplied.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 100",
					"maximum": 100,
					"minimum": 0,
					"type": "number"
				},
				"isPrimary": {
					"description": "This attribute indicates whether the Agent is primary. This is required if Participant is supplied.",
					"type": "boolean"
				},
				"isActive": {
					"description": "This attribute indicates whether the Agent is active or not.",
					"type": "boolean",
					"readOnly": true
				}
			}
		},
		"CompanyStaffBasicInfo": {
			"description": "This class represents light weight representation of Company staff entity",
			"type": "object",
			"properties": {
				"companyStaffGuid": {
					"format": "uuid",
					"description": "This attribute represents the Company Staff GUID. Either StaffGUID or ProviderIdentifier is required. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the the Company Basic Information"
				},
				"primaryOffice": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the primary office identifier",
					"readOnly": true
				},
				"defaultPhotoUrl": {
					"description": "This attribute represents the Photo url of company staff result search<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Staff in the provider system. Either StaffGUID or ProviderIdentifier is required. <br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the global unique identifier of the person.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the Middle Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix given in the name of the person<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"personProviderIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents Primary Phone<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"vanityEmailAddress": {
					"description": "This attribute represents the Vanity Email address assigned to the person. It's read-only attribute<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"primaryWebsite": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CompanyBasicInfo": {
			"description": "This class represents the company basic information",
			"type": "object",
			"properties": {
				"companyGuid": {
					"format": "uuid",
					"description": "This attribute represents the CompanyGUID\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"companyId": {
					"description": "This attribute represents the Company ID<br />\r\nMax Length: 10 characters",
					"maxLength": 10,
					"minLength": 0,
					"type": "string"
				},
				"companyName": {
					"description": "This attribute represents the Company Name in default Language<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"candoCommercialBusiness": {
					"description": "This attribute represents whether the office can do commercial business or not.",
					"type": "boolean",
					"readOnly": true
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Company in the provider system. <br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"commercialCompanyName": {
					"description": "Gets or sets CommercialCompanyName",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"OfficeIdentifier": {
			"description": "This class represents an entity to represent the office identifiers",
			"type": "object",
			"properties": {
				"officeGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the office\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"companyId": {
					"description": "This attribute represents the Company ID<br />\r\nMax Length: 10 characters",
					"maxLength": 10,
					"minLength": 0,
					"type": "string"
				},
				"officeId": {
					"description": "This attribute represents the RFG ID of the office<br />\r\nMax Length: 5 characters",
					"maxLength": 5,
					"minLength": 0,
					"type": "string"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Office in the provider system. <br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CodeValue": {
			"description": "This class represents CodeValue",
			"type": "object",
			"properties": {
				"code": {
					"description": "This attribute represents the short code of a static code. Either Code or Description is required. <br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"description": {
					"description": "This attribute represents the description of the static code. Either Code or Description is required.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"Feature": {
			"description": "This class has the feature details",
			"type": "object",
			"properties": {
				"featureCode": {
					"description": "This attribute represents the feature code of the property or listing. Either FeatureCode or FeatureDescription is required, if Feature is supplied. \r\nThe list of available codes can be obtained by calling method - GetFeatures, passing categoryName as PropertyFeature or ListingFeature<br />\r\nExamples: Property Features - 7, 11 etc. and Listing Features - 72, 575 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"featureDescription": {
					"description": "This attribute represents the feature description of the property or listing. Either FeatureCode or FeatureDescription is required, if Feature is supplied. \r\nThe list of available descriptions can be obtained by calling method - GetFeatures, passing categoryName as PropertyFeature or ListingFeature<br />\r\nExamples: Property Features - New Construction, A/C etc. and Listing Features - Landscaping, Flood Insurance etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"featureGroupCode": {
					"description": "This attribute represents the feature group code of the feature.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyFeatureGroup or ListingFeatureGroup<br />\r\nExamples: Property Feature Group - 1, 2 etc. and Listing Feature Group - 41, 14 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"featureGroupDescription": {
					"description": "This attribute represents the feature group description of the feature.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyFeatureGroup or ListingFeatureGroup<br />\r\nExamples: Property Feature Group - Age, Cooling etc. and Listing Feature Group - Furnished Information, Home Warranty etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CommercialLeaseListingConsumer": {
			"description": "This class represents Commercial Listing BusinessEntities",
			"required": [
				"minLeaseRate",
				"listPrice",
				"propertyDetails",
				"office"
			],
			"type": "object",
			"properties": {
				"minLeaseRate": {
					"format": "double",
					"description": "This attribute represents the Minimum Lease Rate   <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"maxLeaseRate": {
					"format": "double",
					"description": "This attribute represents the Maximum LeaseRate. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"leaseTermCode": {
					"description": "This attribute represents the code value of the lease term. Either LeaseTermCode or LeaseTermDescription is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as LeaseTerm<br />\r\nExamples: FY, FM etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"leaseTermDescription": {
					"description": "This attribute represents the code value of the lease term. Either LeaseTermCode or LeaseTermDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as LeaseTerm<br />\r\nExamples: per sqft. / Year, per sqft. / Month etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"leaseTypeCode": {
					"description": "This attribute represents the type of lease (code). Either LeaseTypeCode or LeaseTypeDescription is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as LeaseType<br />\r\nExamples: 1, 2 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"leaseTypeDescription": {
					"description": "This attribute represents the type of lease (description). Either LeaseTypeCode or LeaseTypeDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as LeaseType<br />\r\nExamples: Absolute NNN, Gross etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"occupancyRate": {
					"format": "int32",
					"description": "This attribute represents the number of units in a building that have been rented out as compared to the total number of units in the building.",
					"maximum": 100,
					"minimum": 0,
					"type": "integer"
				},
				"isAllowMapping": {
					"description": "This attribute represents whether the IsAllowMapping is true or false <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"availableSpace": {
					"format": "double",
					"description": "This attribute represents the space available in the commercial property. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"subunits": {
					"description": "This attribute represents  the subunits available in the listed property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingSubunit"
					}
				},
				"availableFloors": {
					"format": "int32",
					"description": "This attribute represents the total number of floors available within a property’s listing. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"statusCode": {
					"description": "This attribute represents the status code of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the status of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"reportedAsCode": {
					"description": "This attribute represents the status code of listing with out contractual data.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: OP, CL etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"reportedAsDescription": {
					"description": "This attribute represents the status of listing with out contractual data.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Pending, Closed etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"listingUrl": {
					"description": "This attribute represents the Listing Landing Page URL. This is a read-only attribute.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyDetails": {
					"$ref": "#/definitions/CommercialProperty",
					"description": "This attribute represents all the details of the property"
				},
				"primaryAgent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents the basic details of the primary agent. \r\nIn case of Add/Update of any listing either Primary Agent or Team Details is required. For adding an Agent, either ProviderIdentifier or Staff GUID is required."
				},
				"development": {
					"description": "This attribute represents the Development to which the listed property belongs.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"brokerReferenceNumber": {
					"description": "This attribute represents the BrokerReferenceNumber for the listed property.<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"daysOnMarket": {
					"format": "int32",
					"description": "This attribute represents the number of Days the property has been listed on Market.\r\nThis is a read-only attribute<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"isNewConstruction": {
					"description": "This attribute represents whether the IsNewConstruction is true or false. “Y” or “N” flag denotes whether listing is a new construction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isCallToShow": {
					"description": "This attribute represents whether the isCallToShow is true or false. “Y” or “N” flag denotes whether the interested party should call to see the property or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isPriceUponRequest": {
					"description": "This attribute represents whether the IsPriceUponRequest is true or false. “Y” or “N” flag denotes whether the asking price known only upon request or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isByAppointmentOnly": {
					"description": "This attribute represents whether the IsByAppointmentOnly is true or false. “Y” or “N” flag denotes whether the property can be seen by appointment or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"dateAvailable": {
					"format": "date-time",
					"description": "This attribute represents the date on which property space is available.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Listing's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Listing's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"team": {
					"$ref": "#/definitions/TeamBasicInfo",
					"description": "This attribute represents the team name and Team participant \r\nIn case of Add/Update of any listing either Primary Agent or Team is required. For adding a Team, either ProviderIdentifier or Team GUID is required."
				},
				"customAttributes": {
					"description": "This attribute represents the list of custom attributes pertaining to the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"openHouses": {
					"description": "This attribute represents the list of open houses for the listing. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingOpenHouse"
					}
				},
				"listingFees": {
					"description": "This attribute represents the fee details of listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingFee"
					}
				},
				"township": {
					"description": "This attribute represents Township of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"postOffice": {
					"description": "This attribute represents Post Office of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"cityRegions": {
					"description": "This attribute represents City region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"stateRegions": {
					"description": "This attribute represents State region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"countryRegions": {
					"description": "This attribute represents Country region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"continentRegions": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"neighborhood": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"otherAgents": {
					"description": "This attribute represents the Agents (other than primary agent) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyStaffBasicInfo"
					}
				},
				"media": {
					"description": "This attribute represents the media details of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"additionalMLS": {
					"description": "This attribute represents the additional MLS details (other than the primary MLS) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"remarks": {
					"description": "This attribute represents the remarks of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingRemark"
					}
				},
				"websites": {
					"description": "This attribute represents the websites of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"features": {
					"description": "This attribute represents the features of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"expiresOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the listing will be expired, defaults to 90 days from the listing active date. This date will not be available for consumers/data synchronizer vendors.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listingGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the listing\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listedDate": {
					"format": "date-time",
					"description": "This attribute represents the listing date since when the listing is active\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isShowAddressOnInternet": {
					"description": "This attribute indicates whether the property address shall be displayed on Internet. <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isHideListPrice": {
					"description": "This attribute indicates whether the list price should be hidden to other users. <br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the ShowOnInternet is true or false. “Y” or “N” flag denotes whether to show Listing on Internet.<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Listing in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ListingSubunit": {
			"description": "This class represents ListingSubUnit BusinessEntities",
			"required": [
				"suiteName"
			],
			"type": "object",
			"properties": {
				"suiteName": {
					"description": "This attribute represents the suite name of the property. This is required if Suite is supplied. <br />",
					"type": "string"
				},
				"area": {
					"format": "double",
					"description": "This attribute represents the area of the property.",
					"minimum": 0,
					"type": "number"
				},
				"columnSpacing": {
					"format": "int32",
					"description": "This attribute represents the distance between the posts or the vertical supporting beams in an industrial building.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"fullBath": {
					"format": "int32",
					"description": "This attribute represents the number of full bathrooms in the property. \r\nA full bathroom has a sink, toilet, shower, and / or bath tub. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"halfBath": {
					"format": "int32",
					"description": "This attribute represents the number of half bathrooms in the property. \r\nHalf bathrooms has a sink and lavatory<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"rate": {
					"format": "double",
					"description": "This attribute represents the List price or Lease rate or rental value at which the sub unit is available. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"rateUnitCode": {
					"description": "This attribute represents the LeaseTerm Rate Unit Code of subunit.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as LeaseTerm<br />\r\nExamples: FY, FM etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"rateUnitDescription": {
					"description": "This attribute represents the LeaseTerm Rate Unit Description of subunit.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as LeaseTerm<br />\r\nExamples: per sqft. / Year, per sqft. / Month etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"leaseTerm": {
					"description": "This attribute represents the Measurement. List price or Lease rate or rental value at which the sub unit is available. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"type": "string"
				},
				"isAvailable": {
					"description": "This attribute represents subunit is available or not<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				}
			}
		},
		"CommercialProperty": {
			"description": "This class represents the CommercialProperty",
			"required": [
				"location"
			],
			"type": "object",
			"properties": {
				"isGroundLevel": {
					"description": "This attribute represents the Industrial ground level of the property.<br />        \r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"industrialPower": {
					"description": "This attribute represents the type and voltage of power applicable for the property.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"hasRailAccess": {
					"description": "This attribute represents whether the property has the industrial rail access to it.<br />        \r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"hasSprinkler": {
					"description": "This attribute represents whether the property has the industrial sprinkler to it.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"turningRadius": {
					"description": "This attribute represents the available turning radius available in the industrial property. Turning radius is the size of smallest possible circular turn a vehicle is able to take.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"hasCrossDocks": {
					"description": "This attribute represents whether the property has cross docks.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isSublease": {
					"description": "This attribute represents the value indicating whether the listing is a sublease.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"ceilingHeight": {
					"description": "This attribute represents the distance from the floor to the lowest hanging ceiling member or hanging objects of the industrial work area.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"columnSpacing": {
					"description": "This attribute represents the distance between posts or vertical supporting beams in an industrial building.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"clearance": {
					"description": "This attribute represents the distance from the floor to the lowest hanging ceiling member or hanging objects, beams, joists or truss work descending down into a substantial portion of the industrial work area.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"dockHeight": {
					"description": "This attribute represents the amount of distance the height of the slab at the bottom of an overhead door is from the ground level.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"numberOfDocks": {
					"format": "int32",
					"description": "This attribute represents the total number of docks available in the commercial property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"totalUnits": {
					"format": "int32",
					"description": "This attribute represents the total number of units.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"capRatePercent": {
					"format": "double",
					"description": "This attribute represents the capitalization rate on the property in percentage <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999.999",
					"minimum": 0,
					"type": "number"
				},
				"parkingRatio": {
					"format": "double",
					"description": "This attribute represents the ratio of available standard parking spaces to the gross leasable area of a property.  <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999.999",
					"minimum": 0,
					"type": "number"
				},
				"commonAreaFactor": {
					"format": "double",
					"description": "This attribute represents the shared spaces on a single floor, and within a building in its entirety. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999.999",
					"minimum": 0,
					"type": "number"
				},
				"maxContiguousArea": {
					"format": "double",
					"description": "This attribute represents the largest amount of open space available in a commercial building. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 9999999.999",
					"minimum": 0,
					"type": "number"
				},
				"minDivisibleArea": {
					"format": "double",
					"description": "This attribute represents the minimum space which can be leased. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 9999999.999",
					"minimum": 0,
					"type": "number"
				},
				"anchorStores": {
					"description": "This attribute represents the stores within the shopping complex that draw traffic to the location.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"agriculturalPropertyNumber": {
					"description": "This attribute represents the unique identifier given for the agriculture property.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"averageOccupancyRate": {
					"format": "double",
					"description": "This attribute represents the number of units in a building that have been rented out as compared to the total number of units in the building. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999.999",
					"minimum": 0,
					"type": "number"
				},
				"numberOfBallrooms": {
					"format": "int32",
					"description": "This attribute represents the number of ballrooms in a property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"numberOfConferenceRooms": {
					"format": "int32",
					"description": "This attribute represents the number of conference rooms in a property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"averageFloorSize": {
					"format": "double",
					"description": "This attribute represents the size of the floor in an average. A calculation of the total building area divided by the number of stories or levels within the building. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 99999999.99",
					"minimum": 0,
					"type": "number"
				},
				"typeCode": {
					"description": "This attribute represents the type code of the property. Either TypeCode or TypeDescription is required while adding/updating a Listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: C, R etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the type description of the property. Either TypeCode or TypeDescription is required while adding/updating a Listing. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: Commercial, Residential etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"subtypeCode": {
					"description": "This attribute represents the subtype code of the property. If not provided, the value will be set to Others. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: 1, 4 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"subtypeDescription": {
					"description": "This attribute represents the subtype description of the property. If not provided, the value will be set to Others. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: Apartment, Duplex etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"styleCode": {
					"description": "This attribute represents the style code of the property. If not provided, the value will be set to Others. \r\nThe list of available codes can be obtained by calling method - GetPropertyStyles, passing PropertySubtype Name<br />\r\nExamples: 341, 342 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"styleDescription": {
					"description": "This attribute represents the style description of the property. If not provided, the value will be set to Others. \r\nThe list of available descriptions can be obtained by calling method - GetPropertyStyles, passing PropertySubtype Name<br />\r\nExamples: 1 Level Ranch, Apartment etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"useCode": {
					"description": "This attribute represents the Use code of the property.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyUse<br />\r\nExamples: 01, 02 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"useDescription": {
					"description": "This attribute represents the Use description of the property.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyUse<br />\r\nExamples: Owner Occupied, Rental or Investment etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"location": {
					"$ref": "#/definitions/AddressExtendedInfo",
					"description": "This attribute represents the address(location) information of the property"
				},
				"sourcePropertyType": {
					"description": "This attribute represents the type of the property in the source system (provider)<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"noOfBedrooms": {
					"format": "int32",
					"description": "This attribute represents the number of bedrooms present in the property. This is a required attribute for residential properties <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"buildingArea": {
					"format": "double",
					"description": "This attribute represents the total Area of the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"buildingAreaUnitCode": {
					"description": "This attribute represents the code of unit of measurement of the building area. BuildingAreaUnitCode or BuildingAreaUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: AC, HC etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"buildingAreaUnitDescription": {
					"description": "This attribute represents the description of unit of measurement of the building area. BuildingAreaUnitCode or BuildingAreaUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: Acres, Hectares etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"fullBath": {
					"format": "int32",
					"description": "This attribute represents the number of full baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"halfBath": {
					"format": "int32",
					"description": "This attribute represents the number of half baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"threeQuarterBath": {
					"format": "int32",
					"description": "This attribute represents the number of Three quarter (3/4) bathrooms in the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"quarterBath": {
					"format": "int32",
					"description": "This attribute represents the number of Quarter Bathrooms in the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"propertyName": {
					"description": "This attribute represents the name of the property<br />\r\nMax Length: 80 characters",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				},
				"lotSize": {
					"format": "double",
					"description": "This attribute represents the lot size of the Property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"lotSizeUnitCode": {
					"description": "This attribute represents the code of unit of lot size of the property. LotSizeUnitCode or LotSizeUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: AC, HC etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"lotSizeUnitDescription": {
					"description": "This attribute represents the description of unit of lot size of the property. LotSizeUnitCode or LotSizeUnitDescription is required if there is a value for LotSize.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: Acres, Hectares etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"taxRoll": {
					"description": "This attribute represents the unique number assigned to the property in the tax records.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"totalRooms": {
					"format": "int32",
					"description": "This attribute represents the total number of rooms available in the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"totalAcres": {
					"format": "double",
					"description": "This attribute represents the total acres of the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999.99",
					"minimum": 0,
					"type": "number"
				},
				"yearBuilt": {
					"format": "int32",
					"description": "This attribute represents the year in which the property is built<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"yearRenovated": {
					"format": "int32",
					"description": "This attribute represents the Year in which the property was renovated.<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"lastSoldOn": {
					"format": "date-time",
					"description": "This attribute represents the date on which the property is previously sold.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"parkingPlaces": {
					"format": "int32",
					"description": "This attribute represents the number of Parking Places available on the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"lotDimension": {
					"description": "This attribute represents the spatial dimensions of the property.<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"levels": {
					"format": "int32",
					"description": "This attribute represents the number of levels available on the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"zoning": {
					"description": "This attribute represents the property in terms of permitted usage of land based on mapped zones by the authorities.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"zoomLevel": {
					"format": "int32",
					"description": "This attribute represents the details of Zoom level that should be used while viewing the property on map.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"propertyLocation": {
					"description": "This attribute represents the description of the property location<br />\r\nMax Length: 300 characters",
					"maxLength": 300,
					"minLength": 0,
					"type": "string"
				},
				"elementarySchoolDistrict": {
					"description": "This attribute represents the district in which the elementary school is available near to the Property.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"middleSchoolDistrict": {
					"description": "This attribute represents the district in which the middle school is available near to the Property.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"highSchoolDistrict": {
					"description": "This attribute represents the district in which the high school is available near to the Property.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"apnNumber": {
					"description": "This attribute represents Accessor Parcel Number<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"features": {
					"description": "This attribute represents the features of the listed property. Example: Amenities, Appliances, Basement, Sewer etc.,",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"floors": {
					"description": "This attribute represents the floor details of the Property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertyFloor"
					}
				},
				"rooms": {
					"description": "This attribute represents the details of the room that are available in the property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertyRoom"
					}
				},
				"schools": {
					"description": "This attribute represents the details of the near-by school near-by the property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertySchool"
					}
				},
				"additionalPropertyNames": {
					"description": "This attribute represents the details of additional property name.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertyI18N"
					}
				}
			}
		},
		"TeamBasicInfo": {
			"description": "This Class represents the light weight representation of a team",
			"type": "object",
			"properties": {
				"teamGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID of the team.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"rfgTeamId": {
					"description": "This attribute represents the Team ID<br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"teamName": {
					"description": "This attribute represents the Team Name in Default Language. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the Company GUID to which the team is associated with"
				},
				"brandCode": {
					"description": "This attribute represents the brand",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"teamTypeCode": {
					"description": "This attribute represents the Type (code) of the team. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TeamType<br />\r\nExamples: A, M etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"teamTypeDescription": {
					"description": "This attribute represents the Type (description) of the team. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TeamType<br />\r\nExamples: Associate, Broker etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents the primary phone number of the team.<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents the primary EmailAddress of the team. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"primaryWebsite": {
					"description": "This attribute represents the primary WebAddress of the team.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Team in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityCustomAttribute": {
			"description": "Represents the custom attribute of an entity\r\nEntities can be Company, Office, Person, Listing",
			"required": [
				"attributeName",
				"attributeValue"
			],
			"type": "object",
			"properties": {
				"attributeName": {
					"description": "This attribute represents the name of the custom attribute. This is required if CustomAttribute is supplied.<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"attributeValue": {
					"description": "This attribute represents the value of the custom attribute. This is required if CustomAttribute is supplied.<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ListingOpenHouse": {
			"description": "This class represents OpenHouse BusinessEntities",
			"required": [
				"startOn",
				"endOn"
			],
			"type": "object",
			"properties": {
				"startOn": {
					"format": "date-time",
					"description": "This attribute represents the start date of the Open House. This is required if OpenHouse is supplied. <br />\r\nDataType: DateTime (Standard formats allowed are - yyyy-MM-ddThh:mm)<br />\r\nExample: 2015-02-13T06:00",
					"type": "string"
				},
				"endOn": {
					"format": "date-time",
					"description": "This attribute represents the end date of the Open House. This is required if OpenHouse is supplied. <br />\r\nDataType: DateTime (Standard formats allowed are - yyyy-MM-ddThh:mm)<br />\r\nExample: 2015-02-13T06:00",
					"type": "string"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the open house to be shown on internet<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isByAppointment": {
					"description": "This attribute represents the open house is by appointment<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"remarks": {
					"description": "This attribute represents the backing field for additional Open House Remarks",
					"type": "array",
					"items": {
						"$ref": "#/definitions/OpenHouseRemark"
					}
				}
			}
		},
		"ListingFee": {
			"description": "This class represents ListingFee BusinessEntities",
			"required": [
				"feeType",
				"fee"
			],
			"type": "object",
			"properties": {
				"feeType": {
					"description": "This attribute represents the fee Type Description. This is required if Fee Detail is supplied. <br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"fee": {
					"format": "double",
					"description": "This attribute represents the fee that has to be paid for a listing. This is required if Fee Detail is supplied. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"frequencyCode": {
					"description": "This attribute represents the Frequency of the fee paid for listing. Either FrequencyCode or FrequencyDescription is required, if Fee Detail is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Frequency<br />\r\nExamples: 4, 5 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"frequencyDescription": {
					"description": "This attribute represents the Frequency of the fee paid for listing. Either FrequencyCode or FrequencyDescription is required, if Fee Detail is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Frequency<br />\r\nExamples: Monthly, Quarterly etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityMedia": {
			"description": "This Class represents the media association with an entity like ListingMedia, OfficeMedia etc",
			"required": [
				"sequenceNumber",
				"category",
				"url"
			],
			"type": "object",
			"properties": {
				"mediaGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the media. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"sequenceNumber": {
					"format": "int32",
					"description": "This attribute represents the order in which the media is arranged. This is required if Media is supplied. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 255",
					"maximum": 255,
					"minimum": 0,
					"type": "integer"
				},
				"category": {
					"description": "This attribute represents the media category name. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingMediaCategory (for Listings), PersonMediaCategory (for Staffs), OfficeMediaCategory (for Offices), CompanyMediaCategory (for Companies) and TeamMediaCategory (for Teams). This is required if Media is supplied. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"isDefault": {
					"description": "This attribute indicates whether this media items is the default or primary media item for the selected entity.",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the entity in the source system. This is required if Media is supplied. <br />\r\nMax Length: 255 characters",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"height": {
					"format": "int32",
					"description": "This attribute represents the height of the Image / Video Icon<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"width": {
					"format": "int32",
					"description": "This attribute represents the width of the Image / Video Icon<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"url": {
					"description": "This attribute represents the URL of the media. This is required if Media is supplied. <br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"caption": {
					"description": "This attribute represents the caption of the media<br />\r\nMax Length: 128 characters",
					"maxLength": 128,
					"minLength": 0,
					"type": "string"
				},
				"description": {
					"description": "This attribute represents the description of the media<br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				},
				"htmlDescription": {
					"description": "This attribute represents the HTML description of the media<br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				},
				"formatCode": {
					"description": "This attribute represents the media format code. Either FormatCode or FormatDescription is required, if media is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as MediaFormat<br />\r\nExamples: IM, UR etc.<br />\r\nMax Length: 2 characters",
					"maxLength": 2,
					"minLength": 0,
					"type": "string"
				},
				"formatDescription": {
					"description": "This attribute represents the media format description. Either FormatCode or FormatDescription is required, if media is supplied. \r\nThe list of available format names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as MediaFormat<br />\r\nExamples: Image, URL etc. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"isLandscape": {
					"description": "This attribute indicates whether the image is landscape",
					"type": "boolean"
				},
				"isDistributable": {
					"description": "This attribute indicates whether Property Video(If flag sets to false) or not",
					"type": "boolean",
					"readOnly": true
				},
				"additionalAnnotations": {
					"description": "This attribute represents the Additional Captions of the media",
					"type": "array",
					"items": {
						"$ref": "#/definitions/MediaI18N"
					}
				},
				"resolutionUrls": {
					"description": "This attribute represents the resolution of the media. This is a read only collection.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/MediaUrl"
					}
				},
				"mediaTags": {
					"description": "The attribute represents the Media Tags associated with the entity",
					"type": "array",
					"items": {
						"$ref": "#/definitions/MediaTag"
					}
				}
			}
		},
		"ListingRemark": {
			"description": "This class contains the attributes representing the Listing Remarks",
			"type": "object",
			"properties": {
				"remarkTypeCode": {
					"description": "This attribute represents the code value of the profile category. Either RemarkTypeCode or RemarkTypeDescription is required, if Remark is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as RemarkType<br />\r\nExamples: 1, 14 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"remarkTypeDescription": {
					"description": "This attribute represents the description of the profile category. \r\nEither RemarkTypeCode or RemarkTypeDescription is required, if Remark is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as RemarkType<br />\r\nExamples: Area Description, Property Description etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of ListingRemarks. Either LanguageCode or LanguageName is required, if Remark is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of ListingRemarks. Either LanguageCode or LanguageName is required, if Remark is supplied. \r\nThe list of available language names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"remark": {
					"description": "This attribute represents the Remark in plain text. Either Remark or HtmlRemark is required. <br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				},
				"htmlRemark": {
					"description": "This attribute represents the Remark in html format. Either Remark or HtmlRemark is required. <br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityWebsite": {
			"description": "This Class represents the websites associated with an entity\r\nEntities can be MasterFranchise, Company, Office, Person, Team, Listing",
			"required": [
				"url"
			],
			"type": "object",
			"properties": {
				"websiteTypeCode": {
					"description": "This attribute represents code of the website type. e.g: BU, CO etc. Either WebsiteTypeCode or WebsiteTypeDescription is required, if Website is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CompanyWebAddressType (for Companies), OfficeWebAddressType (for Offices), StaffWebAddressType (for Staffs), ListingWebAddressType (for Listings) and TeamWebAddressType (for Teams)<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"websiteTypeDescription": {
					"description": "This attribute represents the description of the website type. e.g: Business, Commercial, Facebook etc. Either WebsiteTypeCode or WebsiteTypeDescription is required, if Website is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CompanyWebAddressType (for Companies), OfficeWebAddressType (for Offices), StaffWebAddressType (for Staffs), ListingWebAddressType (for Listings) and TeamWebAddressType (for Teams)<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"url": {
					"description": "This attribute represents URL of the website. This is required if Website is supplied. <br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"contentLanguageCode": {
					"description": "This attribute represents the ISO Code of the Website content language. Either ContentLanguageCode or ContentLanguageName is required, if Website is supplied.  \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"contentLanguageName": {
					"description": "This attribute represents name of the Website content language. Either ContentLanguageCode or ContentLanguageName is required, if Website is supplied. \r\nThe list of available language names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"websiteName": {
					"description": "This attribute represents the WebSiteName<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"AddressExtendedInfo": {
			"description": "This class represents Address extended information",
			"required": [
				"addressLine1"
			],
			"type": "object",
			"properties": {
				"district": {
					"description": "This attribute represents the District information.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"latitude": {
					"format": "double",
					"description": "This attribute represents the Latitude value. The decimal places will be rounded off as per the system's limit<br />\r\nMin. Value: -90 <br />\r\nMax. Value: 90",
					"maximum": 90,
					"minimum": -90,
					"type": "number"
				},
				"longitude": {
					"format": "double",
					"description": "This attribute represents the Longitude value. The decimal places will be rounded off as per the system's limit<br />\r\nMin. Value: -180 <br />\r\nMax. Value: 180",
					"maximum": 180,
					"minimum": -180,
					"type": "number"
				},
				"addressLine1": {
					"description": "This attribute represents the Address Line 1 information. This is required if Address is supplied.<br /><br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"addressLine2": {
					"description": "This attribute represents the Address Line 2 information.<br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"addressLine3": {
					"description": "This attribute represents the Address Line 3 information.<br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "This attribute represents the City Name.<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"postalCode": {
					"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceCode": {
					"description": "This attribute represents the StateProvince ISO Code.<br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceName": {
					"description": "This attribute represents the StateProvince Name.<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"countryCode": {
					"description": "This attribute represents the Country ISO Code. Either CountryCode or CountryName is required. <br />\r\nMax Length: 2 characters",
					"maxLength": 2,
					"minLength": 0,
					"type": "string"
				},
				"countryName": {
					"description": "This attribute represents the Country Name. Either CountryCode or CountryName is required, if Address is supplied. <br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"PropertyFloor": {
			"description": "This class represents the Floor business entity",
			"required": [
				"floorName",
				"length",
				"width"
			],
			"type": "object",
			"properties": {
				"floorName": {
					"description": "This attribute represents the name of the floor on the property. For example top floor, mezzanine floor etc. This is required if Floor is supplied. <br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"dimensionUnitCode": {
					"description": ":\r\n            This attribute represents the unit of measurement of the room. Either DimensionUnitCode or DimensionUnitDescription is required, if Floor is supplied. \r\n            The list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as MeasurementUnit<br />\r\n            Examples: 1, 2 etc.<br />\r\n            Max Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"dimensionUnitDescription": {
					"description": ":\r\n            This attribute represents the unit description of measurement of the room. Either DimensionUnitCode or DimensionUnitDescription is required, if Floor is supplied. \r\n            The list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as MeasurementUnit<br />\r\n            Examples: Feet, Meters etc.<br />\r\n            Max Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"length": {
					"format": "double",
					"description": "This attribute represents the length of the room. This is required if Floor is supplied. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 9999999.999",
					"minimum": 0,
					"type": "number"
				},
				"width": {
					"format": "double",
					"description": "This attribute represents the width of the room. This is required if Floor is supplied. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 9999999.999",
					"minimum": 0,
					"type": "number"
				},
				"description": {
					"description": "This attribute represents the description about the floor. <br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"PropertyRoom": {
			"description": "This class represents Room BusinessEntities",
			"required": [
				"roomName",
				"sequenceNumber",
				"length",
				"width"
			],
			"type": "object",
			"properties": {
				"roomName": {
					"description": "This attribute represents the Name of the listed residential room. This is required if Room is supplied. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"sequenceNumber": {
					"format": "int32",
					"description": "This attribute represents the order in which the rooms are to be listed<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 255",
					"maximum": 255,
					"minimum": 0,
					"type": "integer"
				},
				"length": {
					"format": "double",
					"description": "This attribute represents the measurement of room length. This is required if Room is supplied. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 9999999.999",
					"minimum": 0,
					"type": "number"
				},
				"width": {
					"format": "double",
					"description": "This attribute represents the measurement of room width. This is required if Room is supplied. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 9999999.999",
					"minimum": 0,
					"type": "number"
				},
				"dimensionUnitCode": {
					"description": ":\r\n            This attribute represents the unit of measurement of the room. Either DimensionUnitCode or DimensionUnitDescription is required, if Room is supplied. \r\n            The list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as MeasurementUnit<br />\r\n            Examples: 1, 2 etc.<br />\r\n            Max Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"dimensionUnitDescription": {
					"description": ":\r\n            This attribute represents the unit description of measurement of the room. Either DimensionUnitCode or DimensionUnitDescription is required, if Room is supplied. \r\n            The list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as MeasurementUnit<br />\r\n            Examples: Feet, Meters etc.<br />\r\n            Max Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"PropertySchool": {
			"description": "This class represents the school entity",
			"required": [
				"schoolName",
				"sequenceNumber"
			],
			"type": "object",
			"properties": {
				"schoolName": {
					"description": "This attribute represents the name of the School.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"type": {
					"description": "This attribute represents the SchoolType key.In UI it is free text.Hence made it as string. Unique Identifier for identifying a school, within a property.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"sequenceNumber": {
					"format": "int32",
					"description": "This attribute represents the sequence number for the school. School with first sequence number will be the preferred school.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 255",
					"maximum": 255,
					"minimum": 0,
					"type": "integer"
				},
				"distanceFromProperty": {
					"description": "This attribute represents the distance between the school and the property.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"PropertyI18N": {
			"description": "This class represents PropertyI18N BE",
			"required": [
				"propertyName"
			],
			"type": "object",
			"properties": {
				"propertyName": {
					"description": "This attribute represents the name of the Property, in specified language. This is required if Additional Property Name is supplied. <br />\r\nMax Length: 80 characters",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of Name of the Property. Either LanguageCode or LanguageName is required, if Additional Property Name is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of Name of the Property. Either LanguageCode or LanguageName is required, if Additional Property Name is supplied. \r\nThe list of available language names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"OpenHouseRemark": {
			"description": "This class contains the attributes representing the OpenHouse Remarks",
			"required": [
				"remark"
			],
			"type": "object",
			"properties": {
				"remark": {
					"description": "This attribute represents the Profile Description in plain text. This is required if OpenHouseRemark is supplied. <br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of OpenHouse remarks. Either LanguageCode or LanguageName is required, if OpenHouseRemark is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of OpenHouse remarks. Either LanguageCode or LanguageName is required, if OpenHouseRemark is supplied. \r\nThe list of available language names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"MediaI18N": {
			"description": "This class represents Media Captions",
			"required": [
				"caption"
			],
			"type": "object",
			"properties": {
				"caption": {
					"description": "This attribute represents the caption of the media. This is required if Additional Media Caption is supplied. <br />\r\nMax Length: 128 characters",
					"maxLength": 128,
					"minLength": 0,
					"type": "string"
				},
				"description": {
					"description": "This attribute represents the description of the media<br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				},
				"htmlDescription": {
					"description": "This attribute represents the description of the media in html format<br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of the Media Caption. Either LanguageCode or LanguageName is required, if Additional Media Caption is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents language name of the the Media Caption. Either LanguageCode or LanguageName is required, if Additional Media Caption is supplied. \r\nThe list of available language names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"MediaUrl": {
			"description": "This class represents MediaURL BusinessEntities",
			"type": "object",
			"properties": {
				"url": {
					"description": "This attribute represents the resized url for the media item<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"resolution": {
					"description": "This attribute represents the Resolution Name of the media<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"height": {
					"format": "int32",
					"description": "This attribute represents the height of the resized media <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"width": {
					"format": "int32",
					"description": "This attribute represents the width of the resized media<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"isLandscape": {
					"description": "This attribute indicates whether the resized image is landscape",
					"type": "boolean"
				}
			}
		},
		"MediaTag": {
			"description": "This class represents MediaTag BusinessEntities",
			"type": "object",
			"properties": {
				"tagCode": {
					"description": "This attribute represents the media tag code. Either TagCode or TagDescription is required, if Tag is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingPhotoTags<br />\r\nExamples: 1, 5 etc. <br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"tagDescription": {
					"description": "This attribute represents the media tag description. Either TagCode or TagDescription is required, if Tag is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingPhotoTags<br />\r\nExamples: Art Living Rooms, Dining Rooms etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CommercialSaleListingConsumer": {
			"description": "This class represents the Commercial Sale Listing Details for the consumer methods",
			"required": [
				"propertyDetails",
				"office",
				"listPrice"
			],
			"type": "object",
			"properties": {
				"listPriceInUSD": {
					"format": "double",
					"description": "This attribute represents the Alternate Listing Price <br />\r\nThis is a read-only field and will be auto calculated based on ListPrice",
					"minimum": 0,
					"type": "number"
				},
				"annualTaxes": {
					"format": "double",
					"description": "This attribute represents the information on Annual property taxes. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"taxYear": {
					"format": "int32",
					"description": "This attribute represents the year in which tax was calculated.<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"contractOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the buyer agreed upon to the price of seller, vice versa. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"estimatedToCloseOn": {
					"format": "date-time",
					"description": "This attribute represents the estimated date on which the listing will be closed. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"occupancyRate": {
					"format": "int32",
					"description": "This attribute represents the number of units in a building that have been rented out as compared to the total number of units in the building.",
					"maximum": 100,
					"minimum": 0,
					"type": "integer"
				},
				"isAllowMapping": {
					"description": "This attribute represents whether the IsAllowMapping is true or false <br /> \r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"availableFloors": {
					"format": "int32",
					"description": "This attribute represents the total number of floors available within a property’s listing. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"loanPayment": {
					"format": "double",
					"description": "This attribute represents the current loan payment value on the property being paid by the owner.  <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"downPayment": {
					"format": "double",
					"description": "This attribute represents the down payment required by the current owner for a commercial listing.  <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"grossIncome": {
					"format": "double",
					"description": "This attribute represents the gross income that the owner currently receives if the property is fully leased.  <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"expenses": {
					"format": "double",
					"description": "This attribute represents the Cash outlays necessary to operate and maintain a property.     <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"netOperatingIncome": {
					"format": "double",
					"description": "This attribute represents the potential rental income plus other income, less vacancy, credit losses, and operating expenses.         <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"cashFlow": {
					"format": "double",
					"description": "This attribute represents the amount of cash flow the property brings in if its on sale. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"fullyLeasedIncome": {
					"format": "double",
					"description": "This attribute represents the gross income that the owner currently receives if the property is fully leased. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"pricePerArea": {
					"format": "double",
					"description": "This attribute represents the price per area of the property, this is generally the list price divided by the area. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"isForAuction": {
					"description": "This attribute represents whether the IsForAuction is true or false. “Y” or “N” flag denotes whether or not the property is for auction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"subunits": {
					"description": "This attribute represents  the subunits available in the listed property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingSubunit"
					}
				},
				"contingencies": {
					"description": "This attribute represents the code value of the contingency details. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ContingencyType<br />\r\nExamples: Sewer Inspection, Appraisal etc.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					},
					"readOnly": true
				},
				"taxIdNumber": {
					"description": "Gets or sets TaxIDNumber",
					"type": "string"
				},
				"statusCode": {
					"description": "This attribute represents the status code of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the status of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"reportedAsCode": {
					"description": "This attribute represents the status code of listing with out contractual data.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: OP, CL etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"reportedAsDescription": {
					"description": "This attribute represents the status of listing with out contractual data.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Pending, Closed etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"listingUrl": {
					"description": "This attribute represents the Listing Landing Page URL. This is a read-only attribute.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyDetails": {
					"$ref": "#/definitions/CommercialProperty",
					"description": "This attribute represents all the details of the property"
				},
				"primaryAgent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents the basic details of the primary agent. \r\nIn case of Add/Update of any listing either Primary Agent or Team Details is required. For adding an Agent, either ProviderIdentifier or Staff GUID is required."
				},
				"development": {
					"description": "This attribute represents the Development to which the listed property belongs.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"brokerReferenceNumber": {
					"description": "This attribute represents the BrokerReferenceNumber for the listed property.<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"daysOnMarket": {
					"format": "int32",
					"description": "This attribute represents the number of Days the property has been listed on Market.\r\nThis is a read-only attribute<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"isNewConstruction": {
					"description": "This attribute represents whether the IsNewConstruction is true or false. “Y” or “N” flag denotes whether listing is a new construction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isCallToShow": {
					"description": "This attribute represents whether the isCallToShow is true or false. “Y” or “N” flag denotes whether the interested party should call to see the property or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isPriceUponRequest": {
					"description": "This attribute represents whether the IsPriceUponRequest is true or false. “Y” or “N” flag denotes whether the asking price known only upon request or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isByAppointmentOnly": {
					"description": "This attribute represents whether the IsByAppointmentOnly is true or false. “Y” or “N” flag denotes whether the property can be seen by appointment or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"dateAvailable": {
					"format": "date-time",
					"description": "This attribute represents the date on which property space is available.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Listing's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Listing's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"team": {
					"$ref": "#/definitions/TeamBasicInfo",
					"description": "This attribute represents the team name and Team participant \r\nIn case of Add/Update of any listing either Primary Agent or Team is required. For adding a Team, either ProviderIdentifier or Team GUID is required."
				},
				"customAttributes": {
					"description": "This attribute represents the list of custom attributes pertaining to the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"openHouses": {
					"description": "This attribute represents the list of open houses for the listing. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingOpenHouse"
					}
				},
				"listingFees": {
					"description": "This attribute represents the fee details of listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingFee"
					}
				},
				"township": {
					"description": "This attribute represents Township of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"postOffice": {
					"description": "This attribute represents Post Office of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"cityRegions": {
					"description": "This attribute represents City region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"stateRegions": {
					"description": "This attribute represents State region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"countryRegions": {
					"description": "This attribute represents Country region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"continentRegions": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"neighborhood": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"otherAgents": {
					"description": "This attribute represents the Agents (other than primary agent) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyStaffBasicInfo"
					}
				},
				"media": {
					"description": "This attribute represents the media details of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"additionalMLS": {
					"description": "This attribute represents the additional MLS details (other than the primary MLS) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"remarks": {
					"description": "This attribute represents the remarks of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingRemark"
					}
				},
				"websites": {
					"description": "This attribute represents the websites of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"features": {
					"description": "This attribute represents the features of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"expiresOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the listing will be expired, defaults to 90 days from the listing active date. This date will not be available for consumers/data synchronizer vendors.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listingGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the listing\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listedDate": {
					"format": "date-time",
					"description": "This attribute represents the listing date since when the listing is active\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listPrice": {
					"format": "double",
					"description": "This attribute represents the ListPrice of the property <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isShowAddressOnInternet": {
					"description": "This attribute indicates whether the property address shall be displayed on Internet. <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isHideListPrice": {
					"description": "This attribute indicates whether the list price should be hidden to other users. <br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isForeclosure": {
					"description": "This attribute represents whether the ForeClosure is true or false. “Y” or “N” flag denotes whether or not the listing is foreclosed.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShortSale": {
					"description": "This attribute represents whether the IsShortSale is true or false. “Y” or “N” flag denotes whether or not the listing is for short sale.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the ShowOnInternet is true or false. “Y” or “N” flag denotes whether to show Listing on Internet.<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Listing in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CommercialSaleListing": {
			"description": "This class represents the Commercial Sale Listing Details",
			"required": [
				"propertyDetails",
				"office",
				"listPrice"
			],
			"type": "object",
			"properties": {
				"additionalDetails": {
					"$ref": "#/definitions/InternalListingDetails",
					"description": "This attribute represents the additional Listing Details"
				},
				"isOffTheMarket": {
					"description": "This attribute represents whether the isOffTheMarket is true or false. It is read-only field<br />",
					"type": "boolean",
					"readOnly": true
				},
				"listPriceInUSD": {
					"format": "double",
					"description": "This attribute represents the Alternate Listing Price <br />\r\nThis is a read-only field and will be auto calculated based on ListPrice",
					"minimum": 0,
					"type": "number"
				},
				"annualTaxes": {
					"format": "double",
					"description": "This attribute represents the information on Annual property taxes. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"taxYear": {
					"format": "int32",
					"description": "This attribute represents the year in which tax was calculated.<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"contractOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the buyer agreed upon to the price of seller, vice versa. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"estimatedToCloseOn": {
					"format": "date-time",
					"description": "This attribute represents the estimated date on which the listing will be closed. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"occupancyRate": {
					"format": "int32",
					"description": "This attribute represents the number of units in a building that have been rented out as compared to the total number of units in the building.",
					"maximum": 100,
					"minimum": 0,
					"type": "integer"
				},
				"isAllowMapping": {
					"description": "This attribute represents whether the IsAllowMapping is true or false <br /> \r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"availableFloors": {
					"format": "int32",
					"description": "This attribute represents the total number of floors available within a property’s listing. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"loanPayment": {
					"format": "double",
					"description": "This attribute represents the current loan payment value on the property being paid by the owner.  <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"downPayment": {
					"format": "double",
					"description": "This attribute represents the down payment required by the current owner for a commercial listing.  <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"grossIncome": {
					"format": "double",
					"description": "This attribute represents the gross income that the owner currently receives if the property is fully leased.  <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"expenses": {
					"format": "double",
					"description": "This attribute represents the Cash outlays necessary to operate and maintain a property.     <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"netOperatingIncome": {
					"format": "double",
					"description": "This attribute represents the potential rental income plus other income, less vacancy, credit losses, and operating expenses.         <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"cashFlow": {
					"format": "double",
					"description": "This attribute represents the amount of cash flow the property brings in if its on sale. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"fullyLeasedIncome": {
					"format": "double",
					"description": "This attribute represents the gross income that the owner currently receives if the property is fully leased. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"pricePerArea": {
					"format": "double",
					"description": "This attribute represents the price per area of the property, this is generally the list price divided by the area. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"isForAuction": {
					"description": "This attribute represents whether the IsForAuction is true or false. “Y” or “N” flag denotes whether or not the property is for auction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"subunits": {
					"description": "This attribute represents  the subunits available in the listed property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingSubunit"
					}
				},
				"contingencies": {
					"description": "This attribute represents the code value of the contingency details. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ContingencyType<br />\r\nExamples: Sewer Inspection, Appraisal etc.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					},
					"readOnly": true
				},
				"taxIdNumber": {
					"description": "Gets or sets TaxIDNumber",
					"type": "string"
				},
				"statusCode": {
					"description": "This attribute represents the status code of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the status of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"reportedAsCode": {
					"description": "This attribute represents the status code of listing with out contractual data.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: OP, CL etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"reportedAsDescription": {
					"description": "This attribute represents the status of listing with out contractual data.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Pending, Closed etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"listingUrl": {
					"description": "This attribute represents the Listing Landing Page URL. This is a read-only attribute.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyDetails": {
					"$ref": "#/definitions/CommercialProperty",
					"description": "This attribute represents all the details of the property"
				},
				"primaryAgent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents the basic details of the primary agent. \r\nIn case of Add/Update of any listing either Primary Agent or Team Details is required. For adding an Agent, either ProviderIdentifier or Staff GUID is required."
				},
				"development": {
					"description": "This attribute represents the Development to which the listed property belongs.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"brokerReferenceNumber": {
					"description": "This attribute represents the BrokerReferenceNumber for the listed property.<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"daysOnMarket": {
					"format": "int32",
					"description": "This attribute represents the number of Days the property has been listed on Market.\r\nThis is a read-only attribute<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"isNewConstruction": {
					"description": "This attribute represents whether the IsNewConstruction is true or false. “Y” or “N” flag denotes whether listing is a new construction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isCallToShow": {
					"description": "This attribute represents whether the isCallToShow is true or false. “Y” or “N” flag denotes whether the interested party should call to see the property or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isPriceUponRequest": {
					"description": "This attribute represents whether the IsPriceUponRequest is true or false. “Y” or “N” flag denotes whether the asking price known only upon request or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isByAppointmentOnly": {
					"description": "This attribute represents whether the IsByAppointmentOnly is true or false. “Y” or “N” flag denotes whether the property can be seen by appointment or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"dateAvailable": {
					"format": "date-time",
					"description": "This attribute represents the date on which property space is available.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Listing's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Listing's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"team": {
					"$ref": "#/definitions/TeamBasicInfo",
					"description": "This attribute represents the team name and Team participant \r\nIn case of Add/Update of any listing either Primary Agent or Team is required. For adding a Team, either ProviderIdentifier or Team GUID is required."
				},
				"customAttributes": {
					"description": "This attribute represents the list of custom attributes pertaining to the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"openHouses": {
					"description": "This attribute represents the list of open houses for the listing. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingOpenHouse"
					}
				},
				"listingFees": {
					"description": "This attribute represents the fee details of listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingFee"
					}
				},
				"township": {
					"description": "This attribute represents Township of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"postOffice": {
					"description": "This attribute represents Post Office of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"cityRegions": {
					"description": "This attribute represents City region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"stateRegions": {
					"description": "This attribute represents State region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"countryRegions": {
					"description": "This attribute represents Country region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"continentRegions": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"neighborhood": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"otherAgents": {
					"description": "This attribute represents the Agents (other than primary agent) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyStaffBasicInfo"
					}
				},
				"media": {
					"description": "This attribute represents the media details of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"additionalMLS": {
					"description": "This attribute represents the additional MLS details (other than the primary MLS) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"remarks": {
					"description": "This attribute represents the remarks of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingRemark"
					}
				},
				"websites": {
					"description": "This attribute represents the websites of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"features": {
					"description": "This attribute represents the features of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"listingGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the listing\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listedDate": {
					"format": "date-time",
					"description": "This attribute represents the listing date since when the listing is active\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listPrice": {
					"format": "double",
					"description": "This attribute represents the ListPrice of the property <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isShowAddressOnInternet": {
					"description": "This attribute indicates whether the property address shall be displayed on Internet. <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isHideListPrice": {
					"description": "This attribute indicates whether the list price should be hidden to other users. <br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isForeclosure": {
					"description": "This attribute represents whether the ForeClosure is true or false. “Y” or “N” flag denotes whether or not the listing is foreclosed.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShortSale": {
					"description": "This attribute represents whether the IsShortSale is true or false. “Y” or “N” flag denotes whether or not the listing is for short sale.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the ShowOnInternet is true or false. “Y” or “N” flag denotes whether to show Listing on Internet.<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Listing in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"InternalListingDetails": {
			"description": "This class represents the Additional Listing Details",
			"type": "object",
			"properties": {
				"expiresOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the listing will be expired, defaults to 90 days from the listing active date. This date will not be available for consumers/data synchronizer vendors.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"withdrawnOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the listing is withdrawn. This date will not be available for consumers/data synchronizer vendors.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"closedOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the listing is closed. This date will not be available for consumers/data synchronizer vendors.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"sellers": {
					"$ref": "#/definitions/BuyerSellerDetails[ListingSeller]",
					"description": "This attribute represents the seller details of the listed property."
				}
			}
		},
		"BuyerSellerDetails[ListingSeller]": {
			"description": "This class contains the details of the buyers and sellers",
			"type": "object",
			"properties": {
				"buyerSellers": {
					"description": "This attribute represents the details of Buyer and Seller",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingSeller"
					}
				},
				"leadSourceCode": {
					"description": "This attribute represents the LeadSource Code. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SellerBuyerSource<br />\r\nExamples: 1, 2 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"leadSourceDescription": {
					"description": "This attribute represents the LeadSource Description. \r\nThis list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SellerBuyerSource<br />\r\nExamples: Brand Toll Free, Brand Consumer website etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"isAgentGenerated": {
					"description": "This attribute indicates whether the transaction is agent generated.",
					"type": "boolean"
				}
			}
		},
		"ListingSeller": {
			"description": "This class contains all the seller attributes for a listing",
			"type": "object",
			"properties": {
				"phoneNumber": {
					"description": "This attribute represents Primary Phone of the seller<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"address": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Primary Address of the seller"
				},
				"typeCode": {
					"description": "This attribute represents the code value of the type of buyer/seller. While writing data to the API, either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as BuyerSellerType<br />\r\nExamples: P, C<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the type of buyer/seller. While writing data to the API, either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as BuyerSellerType<br />\r\nExamples: Person/Individual(s), Corporation etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person. While writing data to the API, this is required - if the seller type is Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person. While writing data to the API, this is required - if the seller type is Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"businessEntityName": {
					"description": "This attribute represents the Business Entity Name. While writing data to the API, this is required - if the seller type is Business Entity<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"emailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"website": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"Company": {
			"description": "This entity represents the Company business information",
			"type": "object",
			"properties": {
				"brandCode": {
					"description": "This attribute represents the brand code",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"isNrt": {
					"description": "This flag indicating whether the Company have affiliation with NRT or not",
					"type": "boolean"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Company's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Company's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"additionalNames": {
					"description": "This attribute represents the additional company names in various languages",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyI18N"
					}
				},
				"preferences": {
					"description": "This attribute represents the list of the Company preferences details",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPreference"
					}
				},
				"customAttributes": {
					"description": "This attribute represents the list of custom attributes details",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"websites": {
					"description": "This attribute represents the list of company websites",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"media": {
					"description": "This attribute represents the list of company media items",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"offices": {
					"description": "This list represent the list of offices under the company. This is a read-only collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/OfficeBasicInfo"
					}
				},
				"programs": {
					"description": "This attribute represents the list of company programs",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityProgram"
					}
				},
				"leadPreferences": {
					"description": "This attribute represents the list of the Company Lead preferences details",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityLeadPreference"
					}
				},
				"companyGuid": {
					"format": "uuid",
					"description": "This attribute represents the CompanyGUID\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"companyId": {
					"description": "This attribute represents the Company ID<br />\r\nMax Length: 10 characters",
					"maxLength": 10,
					"minLength": 0,
					"type": "string"
				},
				"companyName": {
					"description": "This attribute represents the Company Name in default Language<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"candoCommercialBusiness": {
					"description": "This attribute represents whether the office can do commercial business or not.",
					"type": "boolean",
					"readOnly": true
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Company in the provider system. <br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"commercialCompanyName": {
					"description": "Gets or sets CommercialCompanyName",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CompanyI18N": {
			"description": "This class represents Company multilingual Names BusinessEntities",
			"type": "object",
			"properties": {
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of the Company Name. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of the Company Name.\r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"companyName": {
					"description": "Company name represent the name of the company in the language specified<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"commercialCompanyName": {
					"description": "Gets or sets CommercialCompanyName",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityPreference": {
			"description": "This Class represents the preference of the entity. Entities can be Company, Office, staff, Listing",
			"required": [
				"value"
			],
			"type": "object",
			"properties": {
				"preferenceTypeCode": {
					"description": "This attribute represents the code of the preference type of respective entities. Either PreferenceTypeCode or PreferenceTypeDescription is required, if Preference is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CompanyPreferences (for Companies), OfficePreferences (for Offices) and StaffPreferences (for Staffs)<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"preferenceTypeDescription": {
					"description": "This attribute represents the description of the preference type of respective entities. Either PreferenceTypeCode or PreferenceTypeDescription is required, if Preference is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CompanyPreferences (for Companies), OfficePreferences (for Offices) and StaffPreferences (for Staffs)<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"value": {
					"description": "This attribute represents the preference value of the respective entity. This is required if Preference is supplied. <br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"OfficeBasicInfo": {
			"description": "This class represents a light weight representation of the office entity",
			"type": "object",
			"properties": {
				"officeGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the office\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"officeId": {
					"description": "This attribute represents the RFG ID of the office<br />\r\nMax Length: 5 characters",
					"maxLength": 5,
					"minLength": 0,
					"type": "string"
				},
				"officeName": {
					"description": "This attribute represents the name of the office. \r\nThis is read-only attribute<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"doingBusinessAs": {
					"description": "This attribute represents the name under which the Office operates (Also known as the DBA or Trade name). \r\nThis is read-only attribute<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isOpen": {
					"description": "This attribute represents whether the office is open or not",
					"type": "boolean"
				},
				"designationCode": {
					"description": "This attribute represents the code value of the designation of the respective entity.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeDesignation<br />\r\nExamples: MO, BO etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"designationDescription": {
					"description": "This attribute represents the description of the designation of the respective entity.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeDesignation<br />\r\nExamples: Main office, Branch office etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"physicalAddress": {
					"$ref": "#/definitions/AddressExtendedInfo",
					"description": "This attribute represents the Physical Location of office"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents the Primary EmailAddress of the office. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents the Primary Phone of the office<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryWebsite": {
					"description": "This attribute represents the Business Website URL of the office<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"faxNumber": {
					"description": "This attribute represents the Fax details of the office<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityProgram": {
			"description": "This Class represents the Programs associated with an entity\r\nEntities can be MasterFranchise, Company, Office, Person, Team, Listing",
			"type": "object",
			"properties": {
				"programTypeCode": {
					"description": "This attribute represents code of the Program type. e.g: BU, CO etc. Either ProgramTypeCode or ProgramTypeDescription is required, if Program is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CompanyWebAddressType (for Companies), OfficeWebAddressType (for Offices), StaffWebAddressType (for Staffs), ListingWebAddressType (for Listings) and TeamWebAddressType (for Teams)<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"programTypeDescription": {
					"description": "This attribute represents the description of the Program type. e.g: Business, Commercial, Facebook etc. Either ProgramTypeCode or ProgramTypeDescription is required, if Program is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CompanyWebAddressType (for Companies), OfficeWebAddressType (for Offices), StaffWebAddressType (for Staffs), ListingWebAddressType (for Listings) and TeamWebAddressType (for Teams)<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"activeSince": {
					"format": "date-time",
					"description": "This attribute represents the Company's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string"
				}
			}
		},
		"EntityLeadPreference": {
			"description": "This Class represents the lead preference of the entity. Entities can be Company, Office",
			"type": "object",
			"properties": {
				"leadPreferenceEmailTypeCode": {
					"description": "This attribute represents the code of the lead preference type of respective entities. Either lead preferenceTypeCode or lead preferenceTypeDescription is required, if lead preference is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CompanyPreferences (for Companies), OfficePreferences (for Offices) and StaffPreferences (for Staffs)<br />",
					"type": "string"
				},
				"leadPreferenceEmailTypeDescription": {
					"description": "This attribute represents the description of the lead preference type of respective entities. Either lead preferenceTypeCode or lead preferenceTypeDescription is required, if lead preference is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CompanyPreferences (for Companies), OfficePreferences (for Offices) and StaffPreferences (for Staffs)<br />",
					"type": "string"
				},
				"emailAddress": {
					"description": "This attribute represents the lead preference value of the respective entity. This is required if lead preference is supplied. <br />",
					"type": "string"
				},
				"canOfficeMaintainLeadPreference": {
					"description": "This attribute represents the CanOfficeMaintainLeadPreference. <br />",
					"type": "boolean"
				}
			}
		},
		"EntityDelta": {
			"description": "This class represents Entities updated during a time period",
			"type": "object",
			"properties": {
				"entityGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUIDs used for the entity.\r\nEntities can be Company, Office, Person, Listings, Transaction etc. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"status": {
					"description": "This attribute represents the status of the entity. (Active, De-active) <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"action": {
					"description": "This attribute represents the action (Insert, Update, Delete)<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"statusReason": {
					"description": "This attribute represents the reason of the Status. If the Status is Active, the reason can be Pending. If the Status is De-active, the reason can be Closed/Canceled<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdatedBy": {
					"description": "This attribute represents the LastUpdated user name<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CompanyStaffConsumer": {
			"description": "This will have all the attributes for the reduced version of Company Staff",
			"required": [
				"company",
				"primaryOffice"
			],
			"type": "object",
			"properties": {
				"companyStaffGuid": {
					"format": "uuid",
					"description": "This attribute represents the Company Staff GUID\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"readOnly": true,
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the Company GUID"
				},
				"primaryOffice": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the primary office identifier."
				},
				"specialtyCode": {
					"description": "This attribute represents the specialty (code) of the person. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffSpecialty<br />\r\nAllowed Values: R, C, B<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"specialtyDescription": {
					"description": "This attribute represents the specialty (description) of the person.         \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffSpecialty<br />\r\nAllowed Values: Specialized in Residential, Specialized in Commercial, Specialized in both Residential &amp; Commercial<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"genderCode": {
					"description": "This attribute represents the Gender of the person. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Gender<br />\r\nAllowed Values: M, F, U<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"genderDescription": {
					"description": "This attribute represents the Gender of the person.  \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Gender<br />\r\nAllowed Values: Male, Female, Unknown<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"educationLevel": {
					"description": "This attribute represents the educational level of the person\r\nMax Length: 255 characters",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"displayName": {
					"description": "This attribute represents the Display Name of the person. If no value is supplied for this field, it will be set to FirstName + LastName + NameSuffix<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"familiarName": {
					"description": "This attribute represents the Familiar Name of the person. If no value is supplied for this field, it will be set to FirstName<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"companyStaffID": {
					"description": "This attribute represents the RFG CompanyStaffID.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"roles": {
					"description": "StaffRoles represent list of roles associated with person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/StaffRole"
					}
				},
				"additionalNames": {
					"description": "This attribute represents the additional names of person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonI18N"
					}
				},
				"profiles": {
					"description": "This attribute represents the profile information of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityProfile"
					}
				},
				"media": {
					"description": "This attribute represents the Media associated to the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"spokenLanguages": {
					"description": "This attribute represents the Languages Spoken by the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonLanguage"
					}
				},
				"additionalPhoneNumbers": {
					"description": "This attribute represents the additional phone numbers of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPhone"
					}
				},
				"additionalEmailAddresses": {
					"description": "This attribute represents the additional email address of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityEmail"
					}
				},
				"additionalWebsites": {
					"description": "This attribute represents the additional website address of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"designations": {
					"description": "This attribute represents the list of designations held by the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					}
				},
				"areaOfSpecializations": {
					"description": "This attribute represents the list of areas where the person is specialized\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaOfSpecialization<br />\r\nExamples: Adult Communities, Apartments etc.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					}
				},
				"preferences": {
					"description": "Preference represent list of person preference",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPreference"
					}
				},
				"customAttributes": {
					"description": "This attribute represents the custom attributes for the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"awards": {
					"description": "This attribute represents the list of awards won by the person. This is a read-only collection and cannot be used to submit data",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonAward"
					},
					"readOnly": true
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Staff's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Staff's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"licenses": {
					"description": "This attribute represents the list of licenses held by the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonLicense"
					}
				},
				"displayTitleCode": {
					"description": "This attribute represents the DisplayTitleCode",
					"type": "string"
				},
				"displayTitleDescription": {
					"description": "This attribute represents the DisplayTitleDescription",
					"type": "string"
				},
				"features": {
					"description": "This attribute represents the features of CompanyStaff. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityFeature"
					},
					"readOnly": true
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the global unique identifier of the person.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the Middle Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix given in the name of the person<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"personProviderIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents Primary Phone<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"vanityEmailAddress": {
					"description": "This attribute represents the Vanity Email address assigned to the person. It's read-only attribute<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"primaryWebsite": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"StaffRole": {
			"description": "This class represents the StaffRole business entity",
			"type": "object",
			"properties": {
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the Company where the role is assigned."
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the Office where the role is assigned."
				},
				"roleCode": {
					"description": "This attribute represents the Role code. Either RoleCode or RoleDescription is required, if Role is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffRole<br />\r\nExamples: BR, SA etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"roleDescription": {
					"description": "This attribute represents the Role code. Either RoleCode or RoleDescription is required, if Role is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffRole<br />\r\nExamples: Broker, Sales Associate etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"activeSince": {
					"format": "date-time",
					"description": "This attribute represents the ActiveSince of the role. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"deactivationDate": {
					"format": "date-time",
					"description": "This attribute represents the Deactivation Date. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"isFulltime": {
					"description": "This attribute represents the value indicating whether the staff is full time or part time<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents the value indicating whether to show on internet<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isProducing": {
					"description": "Gets or sets a value indicating whether the role is Producing",
					"type": "boolean"
				}
			}
		},
		"PersonI18N": {
			"description": "This class represents PersonName in multi languages",
			"required": [
				"firstName",
				"lastName"
			],
			"type": "object",
			"properties": {
				"salutation": {
					"description": "This attribute represents the salutation of the person.<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the FirstName of the person. This is required if Additional Person Name is supplied. <br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the MiddleName of the person.<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the LastName of the person. This is required if Additional Person Name is supplied. <br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"displayName": {
					"description": "This attribute represents the DisplayName of the person. If no value is supplied for this field, it will be set to FirstName + LastName + NameSuffix<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"familiarName": {
					"description": "This attribute represents the FamiliarName of the person. If no value is supplied for this field, it will be set to FirstName<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix of the person.<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of the Person Name. Either LanguageCode or LanguageName is required, if Additional Person Name is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents language name of the the Person Name. Either LanguageCode or LanguageName is required, if Additional Person Name is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityProfile": {
			"description": "This Class represents the profile of an entity. Entities can be Office, Person, Listing",
			"type": "object",
			"properties": {
				"profileCategoryCode": {
					"description": "This attribute represents the code value of the profile category. Either ProfileCategoryCode or ProfileCategoryDescription is required, if Profile is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeWebCatType (for Offices), PersonWebCatType (for Staffs) and TeamWebCategoryType (for Teams)<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"profileCategoryDescription": {
					"description": "This attribute represents the code value of the profile category. Either ProfileCategoryCode or ProfileCategoryDescription is required, if Profile is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeWebCatType (for Offices), PersonWebCatType (for Staffs) and TeamWebCategoryType (for Teams)<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of the Profile. Either LanguageCode or LanguageName is required, if Profile is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of the Profile. Either LanguageCode or LanguageName is required, if Profile is supplied. \r\nThe list of available language names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"profileText": {
					"description": "This attribute represents the Profile Description in plain text. Either ProfileText or HtmlProfileText is required, if Profile is supplied. <br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				},
				"htmlProfileText": {
					"description": "This attribute represents the Profile Description in html format. Either ProfileText or HtmlProfileText is required, if Profile is supplied. <br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"PersonLanguage": {
			"description": "This class represents the person's languages spoken details",
			"type": "object",
			"properties": {
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of the Person Spoken languages. Either LanguageCode or LanguageName is required, if Spoken Language is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SpokenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of the Person Spoken languages. Either LanguageCode or LanguageName is required, if Spoken Language is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SpokenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"isPrimary": {
					"description": "This attribute indicates whether it is Primary language of the person",
					"type": "boolean"
				}
			}
		},
		"EntityPhone": {
			"description": "This Class represents the phone of an entity. Entity Can be Office, Person, Team, BusinessEntity, MasterFranchise",
			"required": [
				"phoneNumber"
			],
			"type": "object",
			"properties": {
				"phoneTypeCode": {
					"description": "This attribute represents the code value of the phone type of respective entities. PhoneType like BU, CO etc. Either PhoneTypeCode or PhoneTypeDescription is required, if Phone is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficePhoneType (for Offices), StaffPhoneType (for Staffs) and TeamPhoneType (for Teams)<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"phoneTypeDescription": {
					"description": "This attribute represents the description value of the phone type of respective entities. PhoneType like Business, Commercial etc. Either PhoneTypeCode or PhoneTypeDescription is required, if Phone is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficePhoneType (for Offices), StaffPhoneType (for Staffs) and TeamPhoneType (for Teams)<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"phoneNumber": {
					"description": "This attribute represents the phone number. This is required if Phone is supplied. <br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityEmail": {
			"description": "This Class represents the email addresses of an entity. Entity Can be Office, Person, Team, BusinessEntity, MasterFranchise",
			"required": [
				"emailAddress"
			],
			"type": "object",
			"properties": {
				"emailAddress": {
					"description": "This attribute represents the email address of the respective entity. Corresponding entities are provided in the above header.  In case of add/update, invalid email address is not allowed. \r\nThis is required if Email is supplied.<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"emailTypeCode": {
					"description": "This attribute represents the code value of the email type of the respective entity. Either EmailTypeCode or EmailTypeDescription is required, if email is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeEmailType (for Offices), StaffEmailType (for Staffs) and TeamEmailType (for Teams)<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"emailTypeDescription": {
					"description": "This attribute represents the description value of the email type of the respective entity. Either EmailTypeCode or EmailTypeDescription is required, if email is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeEmailType (for Offices), StaffEmailType (for Staffs) and TeamEmailType (for Teams)<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"PersonAward": {
			"description": "This class represents Person Award BusinessEntities",
			"type": "object",
			"properties": {
				"awardTypeCode": {
					"description": "This attribute represents the code value of the type of award.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AwardType<br />\r\nExamples: ACH, MAS etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"awardTypeDescription": {
					"description": "This attribute represents the code value of the type of award.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AwardType<br />\r\nExamples: Achievement, Masters etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"awardName": {
					"description": "This attribute represents the name of the award<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"yearAchieved": {
					"format": "int32",
					"description": "This attribute represents the Year in which the award is achieved<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"organizationLogo": {
					"description": "This attribute represents the Organization Logo<br />\r\nMax Length: 500 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"PersonLicense": {
			"description": "This class represents the PersonLicense Business Entity",
			"required": [
				"licenseNumber",
				"issuedOn"
			],
			"type": "object",
			"properties": {
				"licenseTypeCode": {
					"description": "This attribute represents the code value of the license type. Either LicenseTypeCode or LicenseTypeDescription is required, if License is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as LicenseType<br />\r\nExamples: AB, BM etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"licenseTypeDescription": {
					"description": "This attribute represents the code value of the license type. Either LicenseTypeCode or LicenseTypeDescription is required, if License is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as LicenseType<br />\r\nExamples: Associate Broker, Broker/Manager etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceCode": {
					"description": "This attribute represents the StateProvince Code from which the License is taken. Either StateProvinceCode or StateProvinceName is required, if License is supplied.  <br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceName": {
					"description": "This attribute represents the StateProvince Name from which the License is taken. Either StateProvinceCode or StateProvinceName is required, if License is supplied.  <br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"countryCode": {
					"description": "This attribute represents the ISO Code of the country from which the License is taken. Either CountryCode or CountryName is required, if License is supplied. <br />\r\nMax Length: 2 characters",
					"maxLength": 2,
					"minLength": 0,
					"type": "string"
				},
				"countryName": {
					"description": "This attribute represents the Country Name from which the License is taken. Either CountryCode or CountryName is required, if License is supplied. <br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"licenseNumber": {
					"description": "This attribute represents the license number of the person. This is required if Person License is supplied. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"issuedOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which license was issued. This is required if Person License is supplied. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"expiresOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the license is to be expired<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				}
			}
		},
		"EntityFeature": {
			"description": "This class has the feature details",
			"type": "object",
			"properties": {
				"featureCode": {
					"description": "This attribute represents the feature code of the CompanyStaff. Either FeatureCode or FeatureDescription is required, if Feature is supplied.\r\nExamples: CompanyStaff Features - 1 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"featureDescription": {
					"description": "This attribute represents the feature description of the CompanyStaff. Either FeatureCode or FeatureDescription is required, if Feature is supplied. \r\nExamples: CompanyStaff Features - Video QC Approved Person<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CompanyStaff": {
			"description": "This class represents the CompanyStaff business entity",
			"required": [
				"isActive",
				"company",
				"primaryOffice"
			],
			"type": "object",
			"properties": {
				"isActive": {
					"description": "This attribute represents whether the Company Staff is active or not",
					"type": "boolean"
				},
				"previousOccupation": {
					"description": "This attribute represents the previous occupation of the person. \r\nMax Length: 255 characters",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"previousAffiliation": {
					"description": "This attribute represents the previous affiliation of the person. \r\nMax Length: 255 characters",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"awardsLevelCode": {
					"description": "This attribute represents the awards level (code) of the person. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffAwardLevel<br />\r\nExamples: ASC, ATM etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"awardsLevelDescription": {
					"description": "This attribute represents the awards level (description) of the person. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffAwardLevel<br />\r\nExamples: Residential Associate, Associate Team etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"startedInBrand": {
					"format": "date-time",
					"description": "StartedInBrand represent when the staff is active in the present Brand<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"startedInRealEstateOn": {
					"format": "date-time",
					"description": "StartedInRealEstateOn represent when the staff started in real estate business<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"terminationNote": {
					"description": "TerminationNote represent the reason for company staff termination<br />\r\nMax Length:5010 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"recruitedBy": {
					"description": "This represent the name of the recruiter<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"dateOfBirth": {
					"format": "date-time",
					"description": "This attribute represents the date of birth of the person<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"homeAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents Home Address of the person"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Person/Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"mlsDetails": {
					"description": "This attribute represents the MLSDetails represent",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMLS"
					}
				},
				"emergencyContacts": {
					"description": "This attribute represents the list of Emergency Contacts",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonEmergencyContact"
					}
				},
				"insurances": {
					"description": "This attribute represents the Insurances that the person holds",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonInsurance"
					}
				},
				"companyStaffGuid": {
					"format": "uuid",
					"description": "This attribute represents the Company Staff GUID\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"readOnly": true,
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the Company GUID"
				},
				"primaryOffice": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the primary office identifier."
				},
				"specialtyCode": {
					"description": "This attribute represents the specialty (code) of the person. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffSpecialty<br />\r\nAllowed Values: R, C, B<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"specialtyDescription": {
					"description": "This attribute represents the specialty (description) of the person.         \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffSpecialty<br />\r\nAllowed Values: Specialized in Residential, Specialized in Commercial, Specialized in both Residential &amp; Commercial<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"genderCode": {
					"description": "This attribute represents the Gender of the person. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Gender<br />\r\nAllowed Values: M, F, U<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"genderDescription": {
					"description": "This attribute represents the Gender of the person.  \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Gender<br />\r\nAllowed Values: Male, Female, Unknown<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"educationLevel": {
					"description": "This attribute represents the educational level of the person\r\nMax Length: 255 characters",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"displayName": {
					"description": "This attribute represents the Display Name of the person. If no value is supplied for this field, it will be set to FirstName + LastName + NameSuffix<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"familiarName": {
					"description": "This attribute represents the Familiar Name of the person. If no value is supplied for this field, it will be set to FirstName<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"companyStaffID": {
					"description": "This attribute represents the RFG CompanyStaffID.",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"roles": {
					"description": "StaffRoles represent list of roles associated with person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/StaffRole"
					}
				},
				"additionalNames": {
					"description": "This attribute represents the additional names of person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonI18N"
					}
				},
				"profiles": {
					"description": "This attribute represents the profile information of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityProfile"
					}
				},
				"media": {
					"description": "This attribute represents the Media associated to the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"spokenLanguages": {
					"description": "This attribute represents the Languages Spoken by the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonLanguage"
					}
				},
				"additionalPhoneNumbers": {
					"description": "This attribute represents the additional phone numbers of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPhone"
					}
				},
				"additionalEmailAddresses": {
					"description": "This attribute represents the additional email address of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityEmail"
					}
				},
				"additionalWebsites": {
					"description": "This attribute represents the additional website address of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"designations": {
					"description": "This attribute represents the list of designations held by the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					}
				},
				"areaOfSpecializations": {
					"description": "This attribute represents the list of areas where the person is specialized\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaOfSpecialization<br />\r\nExamples: Adult Communities, Apartments etc.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					}
				},
				"preferences": {
					"description": "Preference represent list of person preference",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPreference"
					}
				},
				"customAttributes": {
					"description": "This attribute represents the custom attributes for the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"awards": {
					"description": "This attribute represents the list of awards won by the person. This is a read-only collection and cannot be used to submit data",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonAward"
					},
					"readOnly": true
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Staff's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Staff's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"licenses": {
					"description": "This attribute represents the list of licenses held by the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonLicense"
					}
				},
				"displayTitleCode": {
					"description": "This attribute represents the DisplayTitleCode",
					"type": "string"
				},
				"displayTitleDescription": {
					"description": "This attribute represents the DisplayTitleDescription",
					"type": "string"
				},
				"features": {
					"description": "This attribute represents the features of CompanyStaff. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityFeature"
					},
					"readOnly": true
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the global unique identifier of the person.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the Middle Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix given in the name of the person<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"personProviderIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents Primary Phone<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"vanityEmailAddress": {
					"description": "This attribute represents the Vanity Email address assigned to the person. It's read-only attribute<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"primaryWebsite": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityMLS": {
			"description": "This Class represents the MLS information of an entity. Entities can be either Office or Person or Listing",
			"required": [
				"mlsId"
			],
			"type": "object",
			"properties": {
				"mlsId": {
					"description": "This attribute represents the MLS number for the person. This is required if MLS is supplied. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"board": {
					"description": "This attribute represents the Board Name<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isPrimary": {
					"description": "This attribute represents whether the MLS is primary or not",
					"type": "boolean"
				}
			}
		},
		"PersonEmergencyContact": {
			"description": "This class represents Person Emergency contact BusinessEntities",
			"required": [
				"name",
				"phoneNumber"
			],
			"type": "object",
			"properties": {
				"name": {
					"description": "This attribute represents the name of the contact person to be contacted on any emergency. This is required if Emergency Contact is supplied. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"phoneNumber": {
					"description": "This attribute represents the phone number of the contact person to be contacted on any emergency.  This is required if Emergency Contact is supplied. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"isPrimaryContact": {
					"description": "This attribute represents whether the contact is the primary one",
					"type": "boolean"
				}
			}
		},
		"PersonInsurance": {
			"description": "This class represents Person Insurance BusinessEntities",
			"type": "object",
			"properties": {
				"insuranceTypeCode": {
					"description": "This attribute represents the Insurance type of the person. Either InsuranceTypeCode or InsuranceTypeDescription is required, if Insurance is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as InsuranceType<br />\r\nExamples: AO, EO<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"insuranceTypeDescription": {
					"description": "This attribute represents the Insurance type of the person. Either InsuranceTypeCode or InsuranceTypeDescription is required, if Insurance is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as InsuranceType<br />\r\nExamples: Auto, Errors &amp; Omissions etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"expiresOn": {
					"format": "date-time",
					"description": "This attribute represents the expiration date of the insurance<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				}
			}
		},
		"CompanyStaffSearchResult": {
			"description": "This class contains the company staff search result attributes",
			"type": "object",
			"properties": {
				"activeSince": {
					"format": "date-time",
					"description": "This attribute represents the date on which the staff became active<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"deactivationDate": {
					"format": "date-time",
					"description": "This attribute represent date on which the staff became de-active<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"displayName": {
					"description": "This attribute represents the Display Name of the person<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"familiarName": {
					"description": "This attribute represents the Familiar Name of the person<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"brandCode": {
					"description": "This attribute represents the brand code -- Check this NA in middle Tier",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"staffRoles": {
					"description": "StaffRoles represent list of roles associated with company staff",
					"type": "array",
					"items": {
						"$ref": "#/definitions/StaffRole"
					}
				},
				"companyStaffGuid": {
					"format": "uuid",
					"description": "This attribute represents the Company Staff GUID. Either StaffGUID or ProviderIdentifier is required. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the the Company Basic Information"
				},
				"primaryOffice": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the primary office identifier",
					"readOnly": true
				},
				"defaultPhotoUrl": {
					"description": "This attribute represents the Photo url of company staff result search<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Staff in the provider system. Either StaffGUID or ProviderIdentifier is required. <br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the global unique identifier of the person.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the Middle Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix given in the name of the person<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"personProviderIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents Primary Phone<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"vanityEmailAddress": {
					"description": "This attribute represents the Vanity Email address assigned to the person. It's read-only attribute<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"primaryWebsite": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"EntityDesignation": {
			"description": "This class represents the Entity Designation. Entities can be Office, Person.",
			"required": [
				"activeSince"
			],
			"type": "object",
			"properties": {
				"designationCode": {
					"description": "This attribute represents the code value of the designation type of the respective entity. Entities can be Office, Person. Either DesignationCode or DesignationDescription is required, if Designation is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PersDesig (for Staffs) and OfficeSpecialization (for Offices)<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"designationDescription": {
					"description": "This attribute represents the code value of the designation type of the respective entity. Entities can be Office, Person. Either DesignationCode or DesignationDescription is required, if Designation is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PersDesig (for Staffs) and OfficeSpecialization (for Offices)<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"activeSince": {
					"format": "date-time",
					"description": "This attribute represents the date since which the designation of the respective entity is active. This is required if Designation is supplied.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"deactivatedOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the designation of the respective entity is deactivated. This is required if Designation is supplied.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				}
			}
		},
		"CorporateStaff": {
			"description": "This class contains the attributes that represents the CorporateStaff user",
			"type": "object",
			"properties": {
				"corporateTitles": {
					"description": "This attribute represents the corporate roles/titles for the user",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CorporateStaffTitle"
					}
				},
				"masterFranchise": {
					"$ref": "#/definitions/MasterFranchiseBasicInfo",
					"description": "Gets or sets the MasterFranchiseKey of the corporate staff"
				},
				"corporateRoles": {
					"description": "Gets or sets the CorporateStaffRoles",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CorporateStaffRole"
					}
				},
				"corporateStaffCountryCodes": {
					"description": "Gets or sets CorporateStaff Country Codes",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CorporateStaffCountryCode"
					}
				},
				"homeAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents Home Address of the person"
				},
				"media": {
					"description": "This attribute represents the Media associated to the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"additionalPhoneNumbers": {
					"description": "This attribute represents the additional phone numbers of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPhone"
					}
				},
				"additionalEmailAddresses": {
					"description": "This attribute represents the additional email address of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityEmail"
					}
				},
				"additionalWebsites": {
					"description": "This attribute represents the additional website address of the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"spokenLanguages": {
					"description": "This attribute represents the Languages Spoken by the person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonLanguage"
					}
				},
				"additionalNames": {
					"description": "This attribute represents the additional names of person",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PersonI18N"
					}
				},
				"mlsDetails": {
					"description": "This attribute represents the MLSDetails represent",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMLS"
					}
				},
				"customAttributes": {
					"description": "Backing field for customAttributes",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"corporateStaffGuid": {
					"format": "uuid",
					"description": "Gets or sets Corporate staff GUID",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"isFulltime": {
					"description": "Gets or sets a value indicating whether the staff is full time",
					"type": "boolean"
				},
				"isActive": {
					"description": "Gets or sets a value indicating whether the corporate staff is active or not",
					"type": "boolean"
				},
				"terminationNote": {
					"description": "Gets or sets Termination note",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"dateOfBirth": {
					"format": "date-time",
					"description": "Gets or sets Date Of Birth",
					"type": "string"
				},
				"educationLevel": {
					"description": "Gets or sets Education Level",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"genderCode": {
					"description": "This attribute represents the Gender of the person. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Gender<br />\r\nAllowed Values: M, F, U<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"genderDescription": {
					"description": "This attribute represents the Gender of the person.  \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Gender<br />\r\nAllowed Values: Male, Female, Unknown<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Staff last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string"
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Staff last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the global unique identifier of the person.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the Middle Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix given in the name of the person<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"personProviderIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents Primary Phone<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"vanityEmailAddress": {
					"description": "This attribute represents the Vanity Email address assigned to the person. It's read-only attribute<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"primaryWebsite": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CorporateStaffTitle": {
			"description": "This class contains the attributes representing the corporate staff titles",
			"type": "object",
			"properties": {
				"titleCode": {
					"description": "This attribute represents the corporate staff title code.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CorporateTitle<br />\r\nExamples: 1, 10 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"titleDescription": {
					"description": "This attribute represents the corporate staff title description.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CorporateTitle<br />\r\nExamples: Account Manager, Auditor etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"brand": {
					"description": "This attribute represents the corporate staff brand code",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"activeSince": {
					"format": "date-time",
					"description": "Gets or sets start date",
					"type": "string"
				},
				"deactivatedOn": {
					"format": "date-time",
					"description": "Gets or sets the End date",
					"type": "string"
				}
			}
		},
		"MasterFranchiseBasicInfo": {
			"description": "This class is a light weight representation of the MasterFranchise",
			"type": "object",
			"properties": {
				"masterFranchiseId": {
					"description": "Gets or sets MasterFranchiseId",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"doingBusinessAs": {
					"description": "Gets or sets Gets or sets the name under which the Master Franchise does business (also known as the Trade name)",
					"maxLength": 400,
					"minLength": 0,
					"type": "string"
				},
				"legalName": {
					"description": "Gets or sets name of the Legal Entity that owns this Master Franchise",
					"maxLength": 400,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"CorporateStaffRole": {
			"description": "This class represents the CorporateStaff Roles entity",
			"type": "object",
			"properties": {
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "Gets or sets Company - Should not be used when the operation is at office level"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "Gets or sets Office"
				},
				"titleCode": {
					"description": "Gets or sets the TitleCode of corporate staff",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"titleDescription": {
					"description": "Gets or sets the TitleDescription of corporate staff",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"activeSince": {
					"format": "date-time",
					"description": "Gets or sets ActiveSince",
					"type": "string"
				},
				"deactivationDate": {
					"format": "date-time",
					"description": "Gets or sets DeactivationDate",
					"type": "string"
				}
			}
		},
		"CorporateStaffCountryCode": {
			"description": "This class is a light weight representation of the Corporate Staff Country Code",
			"type": "object",
			"properties": {
				"countryCode": {
					"description": "Gets or sets Gets or sets the Country Code",
					"maxLength": 2,
					"minLength": 0,
					"type": "string"
				},
				"countryName": {
					"description": "Gets or sets Gets or sets the Country Name",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ListingSummary": {
			"description": "This class represents the ListingBasicInfo business entities",
			"required": [
				"office",
				"listPrice"
			],
			"type": "object",
			"properties": {
				"propertyTypeCode": {
					"description": "This attribute represents the code value of the type of property. Either PropertyTypeCode or PropertyTypeDescription is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: C, R etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertyTypeDescription": {
					"description": "This attribute represents the code value of the type of property. Either PropertyTypeCode or PropertyTypeDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: Commercial, Residential etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertySubtypeCode": {
					"description": "This attribute represents the code value of the type of listing. Either PropertySubtypeCode or PropertySubtypeDescription is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: 1, 4 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertySubtypeDescription": {
					"description": "This attribute represents the code value of the type of listing. Either PropertySubtypeCode or PropertySubtypeDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: Apartment, Duplex etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"statusCode": {
					"description": "This attribute represents the status code of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for  Lease and Rental Listing<br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the status of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for  Lease and Rental Listing<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"reportedAsCode": {
					"description": "This attribute represents the status code of listing with out contractual data.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: OP, CL etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"reportedAsDescription": {
					"description": "This attribute represents the status of listing with out contractual data.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Pending, Closed etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"listPriceInUSD": {
					"format": "double",
					"description": "This attribute represents the Alternate Listing Price <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"listingUrl": {
					"description": "This attribute represents the SourceListingURL<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"type": "string"
				},
				"propertyLocation": {
					"$ref": "#/definitions/AddressExtendedInfo",
					"description": "This attribute represents the address details of the property"
				},
				"primaryImageUrl": {
					"description": "This attribute represents the WebReady Resolution url of Original Listing Photo(Default Photo) <br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"noOfBedrooms": {
					"format": "int32",
					"description": "This attribute represents the number of bedrooms present in the property. This is a required attribute for residential properties <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"fullBath": {
					"format": "int32",
					"description": "This attribute represents the number of full baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"halfBath": {
					"format": "int32",
					"description": "This attribute represents the number of half baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"buildingArea": {
					"format": "double",
					"description": "This attribute represents the total Area of the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"buildingAreaUnitCode": {
					"description": "This attribute represents the code of unit of measurement of the building area. BuildingAreaUnitCode or BuildingAreaUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: AC, HC etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"buildingAreaUnitDescription": {
					"description": "This attribute represents the description of unit of measurement of the building area. BuildingAreaUnitCode or BuildingAreaUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: Acres, Hectares etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"lotSize": {
					"format": "double",
					"description": "This attribute represents the lot size of the Property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"lotSizeUnitCode": {
					"description": "This attribute represents the code of unit of lot size of the property. LotSizeUnitCode or LotSizeUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: AC, HC etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"lotSizeUnitDescription": {
					"description": "This attribute represents the description of unit of lot size of the property. LotSizeUnitCode or LotSizeUnitDescription is required if there is a value for LotSize.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: Acres, Hectares etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Listing's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Listing's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"typeCode": {
					"description": "This attribute represents the code value of the type of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingType<br />\r\nExamples: 1, 3 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the type of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingType<br />\r\nExamples: Residential Sale, Commercial Sale etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"listingGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the listing\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listedDate": {
					"format": "date-time",
					"description": "This attribute represents the listing date since when the listing is active\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listPrice": {
					"format": "double",
					"description": "This attribute represents the ListPrice of the property <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isShowAddressOnInternet": {
					"description": "This attribute indicates whether the property address shall be displayed on Internet. <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isHideListPrice": {
					"description": "This attribute indicates whether the list price should be hidden to other users. <br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isForeclosure": {
					"description": "This attribute represents whether the ForeClosure is true or false. “Y” or “N” flag denotes whether or not the listing is foreclosed.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShortSale": {
					"description": "This attribute represents whether the IsShortSale is true or false. “Y” or “N” flag denotes whether or not the listing is for short sale.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the ShowOnInternet is true or false. “Y” or “N” flag denotes whether to show Listing on Internet.<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Listing in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ListingDelta": {
			"description": "This entity gives the list of GUIDs that got changed in a specific duration",
			"type": "object",
			"properties": {
				"providerIdentifier": {
					"description": "This attribute represents the ProviderIdentifier of the listing<br />\r\nMax Length: 255 characters",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"type": {
					"description": "This attribute represents the type of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingType<br />\r\nExamples: Residential Sale, Commercial Sale etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"entityGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUIDs used for the entity.\r\nEntities can be Company, Office, Person, Listings, Transaction etc. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"status": {
					"description": "This attribute represents the status of the entity. (Active, De-active) <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"action": {
					"description": "This attribute represents the action (Insert, Update, Delete)<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"statusReason": {
					"description": "This attribute represents the reason of the Status. If the Status is Active, the reason can be Pending. If the Status is De-active, the reason can be Closed/Canceled<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdatedBy": {
					"description": "This attribute represents the LastUpdated user name<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"Office": {
			"description": "This class represents Office entity",
			"type": "object",
			"properties": {
				"aliasName": {
					"description": "This attribute represents the Office Display Name<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the the Company to which the office belongs to"
				},
				"brandCode": {
					"description": "This attribute represents the brand.",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"primaryContactName": {
					"description": "This attribute represents the PrimaryContactName and it is a read-only attribute<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"responsibleBrokerName": {
					"description": "This attribute represents the Person name who holds Responsible Broker position and it is a read-only attribute<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"officeManagerName": {
					"description": "This attribute represents the Person name who holds Office Manager position and it is a read-only attribute<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"seasonalCloseMonthDay": {
					"description": "This attribute represents the day and month of the year on which the Office opens, if this is a Seasonal office.<br />\r\nFormat: MMDD<br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"seasonalOpenMonthDay": {
					"description": "This attribute represents the day and month of the year on which the Office closes, if this is a Seasonal office.<br />\r\nFormat: MMDD<br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"candoCommercialBusiness": {
					"description": "This flag indicates whether the office can do commercial business or not",
					"type": "boolean"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Office's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Office's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"additionalNames": {
					"description": "This attribute represents Additional Names for the offices in various languages",
					"type": "array",
					"items": {
						"$ref": "#/definitions/OfficeI18N"
					}
				},
				"serviceRegion": {
					"$ref": "#/definitions/ServiceRegion",
					"description": "This attribute represents Service region for the office"
				},
				"cityRegions": {
					"description": "This attribute represents City regions near to the office",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"stateRegions": {
					"description": "This attribute represents State regions near to the office",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"countryRegions": {
					"description": "This attribute represents Country regions near to the office",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"continentRegions": {
					"description": "This attribute represents Continent regions near to the office",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"neighborhood": {
					"description": "This attribute represents Neighborhood near to the office",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"specializations": {
					"description": "This attribute represents Specializations handled by the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/OfficeSpecialization"
					}
				},
				"profiles": {
					"description": "This attribute represents Profile information for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityProfile"
					}
				},
				"additionalPhoneNumbers": {
					"description": "This attribute represents additional Phone Numbers for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPhone"
					}
				},
				"additionalEmailAddress": {
					"description": "This attribute represents Additional Email addresses for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityEmail"
					}
				},
				"additionalWebsites": {
					"description": "This attribute represents additional Websites for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"areaServed": {
					"description": "This attribute represents list of Areas Served by the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/OfficeAreaServed"
					}
				},
				"media": {
					"description": "This attribute represents media items for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"deskCount": {
					"description": "This attribute represents desk count details for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/OfficeDeskCount"
					}
				},
				"customAttributes": {
					"description": "This attribute represents custom attributes for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"preferences": {
					"description": "This attribute represents preferences set for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPreference"
					}
				},
				"mlsDetails": {
					"description": "This attribute represents the MLS details for the office",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMLS"
					}
				},
				"leadPreferences": {
					"description": "This attribute represents the list of the Office Lead preferences details",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityLeadPreference"
					}
				},
				"features": {
					"description": "This attribute represents the features of Office. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityFeature"
					},
					"readOnly": true
				},
				"officeGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the office\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"officeId": {
					"description": "This attribute represents the RFG ID of the office<br />\r\nMax Length: 5 characters",
					"maxLength": 5,
					"minLength": 0,
					"type": "string"
				},
				"officeName": {
					"description": "This attribute represents the name of the office. \r\nThis is read-only attribute<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"doingBusinessAs": {
					"description": "This attribute represents the name under which the Office operates (Also known as the DBA or Trade name). \r\nThis is read-only attribute<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isOpen": {
					"description": "This attribute represents whether the office is open or not",
					"type": "boolean"
				},
				"designationCode": {
					"description": "This attribute represents the code value of the designation of the respective entity.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeDesignation<br />\r\nExamples: MO, BO etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"designationDescription": {
					"description": "This attribute represents the description of the designation of the respective entity.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeDesignation<br />\r\nExamples: Main office, Branch office etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"physicalAddress": {
					"$ref": "#/definitions/AddressExtendedInfo",
					"description": "This attribute represents the Physical Location of office"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents the Primary EmailAddress of the office. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents the Primary Phone of the office<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryWebsite": {
					"description": "This attribute represents the Business Website URL of the office<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"faxNumber": {
					"description": "This attribute represents the Fax details of the office<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"OfficeI18N": {
			"description": "This class represents multilingual OfficeName BusinessEntities",
			"type": "object",
			"properties": {
				"officeName": {
					"description": "This attribute represents the office Name<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"doingBusinessAs": {
					"description": "This attribute represents name under which the Office operates (Also known as the DBA or Trade name)<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of the Office Name. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of the office Name.\r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ServiceRegion": {
			"description": "This class represents the service region",
			"type": "object",
			"properties": {
				"code": {
					"description": "Gets or sets Service Region Code",
					"maxLength": 10,
					"minLength": 0,
					"type": "string"
				},
				"description": {
					"description": "Gets or sets Service Region name",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"OfficeSpecialization": {
			"description": "This class represents Special Market programs that an Office is participating in (or has participated in).",
			"type": "object",
			"properties": {
				"specializationCode": {
					"description": "This attribute represents the Office Specialization code.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeSpecialization<br />\r\nExamples: 47, 50 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"specializationDescription": {
					"description": "This attribute represents the OfficeSpecialization Description.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeSpecialization<br />\r\nExamples: Beach Properties, Farm &amp; Ranch Properties etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"OfficeAreaServed": {
			"description": "This class represents Office AreaServed information",
			"type": "object",
			"properties": {
				"geographicAreaTypeCode": {
					"description": "This attribute represents GeographyAreaType Code\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as GeographicAreaType<br />\r\nExamples: N, CTYR etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"geographicAreaTypeDescription": {
					"description": "This attribute represents GeographyAreaType Description\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as GeographicAreaType<br />\r\nExamples: Neighborhood, City Region etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"geographicAreaName": {
					"description": "This attribute represents GeographicArea\r\nCan be PostalCode, City, State etc<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"sides": {
					"format": "int32",
					"description": "This attribute represents Sides \r\nThis is a read-only field <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				}
			}
		},
		"OfficeDeskCount": {
			"description": "This class represents the office desk count",
			"type": "object",
			"properties": {
				"count": {
					"format": "int32",
					"description": "Gets or sets desk count<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"year": {
					"format": "int32",
					"description": "Gets or sets Year",
					"type": "integer"
				},
				"month": {
					"format": "int32",
					"description": "Gets or sets Month",
					"maximum": 12,
					"minimum": 1,
					"type": "integer"
				}
			}
		},
		"OfficeSearchResult": {
			"description": "This class represents the OfficeSearchResult",
			"type": "object",
			"properties": {
				"primaryContactName": {
					"description": "This attribute represents the PrimaryContactName <br />\r\nMax Length: 80 characters",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				},
				"officeManagerName": {
					"description": "This attribute represents the Person name who holds Office Manager position <br />\r\nMax Length: 80 characters",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the the Company to which the office belongs to"
				},
				"brandCode": {
					"description": "This attribute represents the brand.",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"officeGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the office\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"officeId": {
					"description": "This attribute represents the RFG ID of the office<br />\r\nMax Length: 5 characters",
					"maxLength": 5,
					"minLength": 0,
					"type": "string"
				},
				"officeName": {
					"description": "This attribute represents the name of the office. \r\nThis is read-only attribute<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"doingBusinessAs": {
					"description": "This attribute represents the name under which the Office operates (Also known as the DBA or Trade name). \r\nThis is read-only attribute<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isOpen": {
					"description": "This attribute represents whether the office is open or not",
					"type": "boolean"
				},
				"designationCode": {
					"description": "This attribute represents the code value of the designation of the respective entity.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeDesignation<br />\r\nExamples: MO, BO etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"designationDescription": {
					"description": "This attribute represents the description of the designation of the respective entity.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OfficeDesignation<br />\r\nExamples: Main office, Branch office etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"physicalAddress": {
					"$ref": "#/definitions/AddressExtendedInfo",
					"description": "This attribute represents the Physical Location of office"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents the Primary EmailAddress of the office. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents the Primary Phone of the office<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryWebsite": {
					"description": "This attribute represents the Business Website URL of the office<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"faxNumber": {
					"description": "This attribute represents the Fax details of the office<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"OtherIncomeTransaction": {
			"description": "The OtherIncome Transaction class",
			"required": [
				"office",
				"incomeReceived",
				"incomeReceivedOn",
				"client",
				"isCommercial"
			],
			"type": "object",
			"properties": {
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute indicates the reporting office of the commercial Other Income or residential Other Income transaction"
				},
				"incomeReceived": {
					"format": "double",
					"description": "This attribute represents the Income Received from the client <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"incomeTypeCode": {
					"description": "This attribute represents the code value of the Other Income Type. Either IncomeTypeCode or IncomeTypeDescription is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OtherIncomeType<br />\r\nExamples: 31, 32 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"incomeTypeDescription": {
					"description": "This attribute represents the code value of the Other Income Type. Either IncomeTypeCode or IncomeTypeDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as OtherIncomeType<br />\r\nExamples: Appraisal, Broker Price Opinion etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"incomeReceivedOn": {
					"format": "date-time",
					"description": "This attribute represents the Date which Income was Received\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"client": {
					"$ref": "#/definitions/Client",
					"description": "This attribute is represents the Client for the transaction"
				},
				"agents": {
					"description": "This attribute represents the list of Agents and the agent details",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Participant"
					}
				},
				"isCommercial": {
					"description": "This attribute indicates whether the transaction is commercial Other Income or residential Other Income",
					"type": "boolean"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the sale price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP <br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the sale price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"propertySubtypeCode": {
					"description": "This attribute represents the code value of the type of listing. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: 1, 4 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertySubtypeDescription": {
					"description": "This attribute represents the code value of the type of listing. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: Apartment, Duplex etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertyTypeCode": {
					"description": "This attribute represents the code value of the type of property. Either PropertyTypeCode or PropertyTypeDescription is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: C, R etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertyTypeDescription": {
					"description": "This attribute represents the code value of the type of property. Either PropertyTypeCode or PropertyTypeDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: Commercial, Residential etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertyStyleCode": {
					"description": "This attribute represents the style code of the property. If not provided, the value will be set to Others. \r\nThe list of available codes can be obtained by calling method - GetPropertyStyles, passing PropertySubtype Name<br />\r\nExamples: 341, 342 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertyStyleDescription": {
					"description": "This attribute represents the style description of the property. If not provided, the value will be set to Others. \r\nThe list of available descriptions can be obtained by calling method - GetPropertyStyles, passing PropertySubtype Name<br />\r\nExamples: 1 Level Ranch, Apartment etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertyUseCode": {
					"description": "This attribute represents the code value of the use of property. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyUse<br />\r\nExamples: 01, 02 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertyUseDescription": {
					"description": "This attribute represents the code value of the use of property. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyUse<br />\r\nExamples: Owner Occupied, Rental or Investment etc.<br />\r\nMax Length: 100 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertyName": {
					"description": "This attribute represents the name of the property<br />\r\nMax Length: 80 characters",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				},
				"brokerReferenceNumber": {
					"description": "This attribute represents the  broker/office reference number<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Transaction's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Transaction's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"cancelOn": {
					"format": "date-time",
					"description": "This attribute represents the Cancelled Date\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"cancelReasonCode": {
					"description": "This attribute represents the Reason for cancellation",
					"type": "string"
				},
				"cancelReasonDescription": {
					"description": "This attribute represents the Reason for cancellation",
					"type": "string"
				},
				"transactionGuid": {
					"format": "uuid",
					"description": "This attribute represents the Transaction GUID This will be a read-only attribute. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"readOnly": true,
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"transactionId": {
					"description": "This attribute represents the Transaction Id and is a read-only field. This will be always a system generated string. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Address of the property the transaction is associated with. \r\nThis is a mandatory field for Sale Transactions"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Transaction in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Transaction",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"isDevelopmentAssociated": {
					"description": "Gets or sets IsDevelopmentAssociated",
					"type": "boolean"
				}
			}
		},
		"Client": {
			"description": "This class represents the attributes for Client",
			"type": "object",
			"properties": {
				"participantGuid": {
					"format": "uuid",
					"description": "This attribute represents the Participant GUID This will be a read-only attribute. This will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"readOnly": true,
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the Person GUID This will be a read-only attribute. This will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"readOnly": true,
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"businessEntityGuid": {
					"format": "uuid",
					"description": "This attribute represents the Business Entity GUID This will be a read-only attribute. This will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"readOnly": true,
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"typeCode": {
					"description": "This attribute represents the code value of the type of property. Either TypeCode or TypeDescription is required, if client is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ClientType<br />\r\nExamples: P, C<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the type of property. Either TypeCode or TypeDescription is required, if client is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ClientType<br />\r\nExamples: Person/Individual(s), Corporation etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person",
					"type": "string"
				},
				"companyName": {
					"description": "This attribute represents the company name. \r\nThis is required if Client Type is not Person/Individual(s)",
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person. \r\nThis is required if Client Type is Person/Individual(s)",
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person. \r\nThis is required if Client Type is Person/Individual(s)",
					"type": "string"
				},
				"phoneNumber": {
					"description": "This attribute represents the Primary Phone number<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"emailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed",
					"type": "string"
				},
				"address": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Primary Address"
				},
				"website": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"Participant": {
			"description": "This class represents the Sales Associate Basic Information",
			"required": [
				"agent",
				"commissionPercentage",
				"isPrimary"
			],
			"type": "object",
			"properties": {
				"agent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents Agent basic details. This is required if Participant is supplied."
				},
				"commissionPercentage": {
					"format": "double",
					"description": "This attribute represents Commission Percentage of the sales associate involved in the transaction. The decimal places will be rounded off as per the system's limit. \r\nThis is required if Participant is supplied.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 100",
					"maximum": 100,
					"minimum": 0,
					"type": "number"
				},
				"isPrimary": {
					"description": "This attribute indicates whether the Agent is primary. This is required if Participant is supplied.",
					"type": "boolean"
				}
			}
		},
		"ResidentialRentalListingConsumer": {
			"description": "Residential Rental Listing Class",
			"required": [
				"rent",
				"propertyDetails",
				"office"
			],
			"type": "object",
			"properties": {
				"rent": {
					"format": "double",
					"description": "This attribute represents the rental amount in the default currency <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"rentInUsd": {
					"format": "double",
					"description": "This attribute represents the rental amount in the USD <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"rentalFrequencyCode": {
					"description": "This attribute represents the frequency in which the rent amount is paid. Either RentalFrequencyCode or RentalFrequencyDescription is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Frequency<br />\r\nExamples: 4, 5 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"rentalFrequencyDescription": {
					"description": "This attribute represents the frequency in which the rent amount is paid. Either RentalFrequencyCode or RentalFrequencyDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Frequency<br />\r\nExamples: Monthly, Quarterly etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"statusCode": {
					"description": "This attribute represents the status code of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the status of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"reportedAsCode": {
					"description": "This attribute represents the status code of listing with out contractual data.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: OP, CL etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"reportedAsDescription": {
					"description": "This attribute represents the status of listing with out contractual data.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Pending, Closed etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"listingUrl": {
					"description": "This attribute represents the Listing Landing Page URL. This is a read-only attribute.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyDetails": {
					"$ref": "#/definitions/ResidentialProperty",
					"description": "This attribute represents all the details of the property"
				},
				"primaryAgent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents the basic details of the primary agent. \r\nIn case of Add/Update of any listing either Primary Agent or Team Details is required. For adding an Agent, either ProviderIdentifier or Staff GUID is required."
				},
				"development": {
					"description": "This attribute represents the Development to which the listed property belongs.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"brokerReferenceNumber": {
					"description": "This attribute represents the BrokerReferenceNumber for the listed property.<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"daysOnMarket": {
					"format": "int32",
					"description": "This attribute represents the number of Days the property has been listed on Market.\r\nThis is a read-only attribute<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"isNewConstruction": {
					"description": "This attribute represents whether the IsNewConstruction is true or false. “Y” or “N” flag denotes whether listing is a new construction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isCallToShow": {
					"description": "This attribute represents whether the isCallToShow is true or false. “Y” or “N” flag denotes whether the interested party should call to see the property or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isPriceUponRequest": {
					"description": "This attribute represents whether the IsPriceUponRequest is true or false. “Y” or “N” flag denotes whether the asking price known only upon request or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isByAppointmentOnly": {
					"description": "This attribute represents whether the IsByAppointmentOnly is true or false. “Y” or “N” flag denotes whether the property can be seen by appointment or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"dateAvailable": {
					"format": "date-time",
					"description": "This attribute represents the date on which property space is available.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Listing's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Listing's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"team": {
					"$ref": "#/definitions/TeamBasicInfo",
					"description": "This attribute represents the team name and Team participant \r\nIn case of Add/Update of any listing either Primary Agent or Team is required. For adding a Team, either ProviderIdentifier or Team GUID is required."
				},
				"customAttributes": {
					"description": "This attribute represents the list of custom attributes pertaining to the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"openHouses": {
					"description": "This attribute represents the list of open houses for the listing. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingOpenHouse"
					}
				},
				"listingFees": {
					"description": "This attribute represents the fee details of listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingFee"
					}
				},
				"township": {
					"description": "This attribute represents Township of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"postOffice": {
					"description": "This attribute represents Post Office of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"cityRegions": {
					"description": "This attribute represents City region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"stateRegions": {
					"description": "This attribute represents State region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"countryRegions": {
					"description": "This attribute represents Country region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"continentRegions": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"neighborhood": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"otherAgents": {
					"description": "This attribute represents the Agents (other than primary agent) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyStaffBasicInfo"
					}
				},
				"media": {
					"description": "This attribute represents the media details of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"additionalMLS": {
					"description": "This attribute represents the additional MLS details (other than the primary MLS) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"remarks": {
					"description": "This attribute represents the remarks of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingRemark"
					}
				},
				"websites": {
					"description": "This attribute represents the websites of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"features": {
					"description": "This attribute represents the features of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"expiresOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the listing will be expired, defaults to 90 days from the listing active date. This date will not be available for consumers/data synchronizer vendors.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listingGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the listing\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listedDate": {
					"format": "date-time",
					"description": "This attribute represents the listing date since when the listing is active\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isShowAddressOnInternet": {
					"description": "This attribute indicates whether the property address shall be displayed on Internet. <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isHideListPrice": {
					"description": "This attribute indicates whether the list price should be hidden to other users. <br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the ShowOnInternet is true or false. “Y” or “N” flag denotes whether to show Listing on Internet.<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Listing in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ResidentialProperty": {
			"description": "This class represents the ResidentialProperty",
			"required": [
				"location"
			],
			"type": "object",
			"properties": {
				"typeCode": {
					"description": "This attribute represents the type code of the property. Either TypeCode or TypeDescription is required while adding/updating a Listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: C, R etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the type description of the property. Either TypeCode or TypeDescription is required while adding/updating a Listing. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: Commercial, Residential etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"subtypeCode": {
					"description": "This attribute represents the subtype code of the property. If not provided, the value will be set to Others. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: 1, 4 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"subtypeDescription": {
					"description": "This attribute represents the subtype description of the property. If not provided, the value will be set to Others. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: Apartment, Duplex etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"styleCode": {
					"description": "This attribute represents the style code of the property. If not provided, the value will be set to Others. \r\nThe list of available codes can be obtained by calling method - GetPropertyStyles, passing PropertySubtype Name<br />\r\nExamples: 341, 342 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"styleDescription": {
					"description": "This attribute represents the style description of the property. If not provided, the value will be set to Others. \r\nThe list of available descriptions can be obtained by calling method - GetPropertyStyles, passing PropertySubtype Name<br />\r\nExamples: 1 Level Ranch, Apartment etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"useCode": {
					"description": "This attribute represents the Use code of the property.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyUse<br />\r\nExamples: 01, 02 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"useDescription": {
					"description": "This attribute represents the Use description of the property.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyUse<br />\r\nExamples: Owner Occupied, Rental or Investment etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"location": {
					"$ref": "#/definitions/AddressExtendedInfo",
					"description": "This attribute represents the address(location) information of the property"
				},
				"sourcePropertyType": {
					"description": "This attribute represents the type of the property in the source system (provider)<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"noOfBedrooms": {
					"format": "int32",
					"description": "This attribute represents the number of bedrooms present in the property. This is a required attribute for residential properties <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"buildingArea": {
					"format": "double",
					"description": "This attribute represents the total Area of the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"buildingAreaUnitCode": {
					"description": "This attribute represents the code of unit of measurement of the building area. BuildingAreaUnitCode or BuildingAreaUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: AC, HC etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"buildingAreaUnitDescription": {
					"description": "This attribute represents the description of unit of measurement of the building area. BuildingAreaUnitCode or BuildingAreaUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: Acres, Hectares etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"fullBath": {
					"format": "int32",
					"description": "This attribute represents the number of full baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"halfBath": {
					"format": "int32",
					"description": "This attribute represents the number of half baths in the property<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"threeQuarterBath": {
					"format": "int32",
					"description": "This attribute represents the number of Three quarter (3/4) bathrooms in the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"quarterBath": {
					"format": "int32",
					"description": "This attribute represents the number of Quarter Bathrooms in the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"propertyName": {
					"description": "This attribute represents the name of the property<br />\r\nMax Length: 80 characters",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				},
				"lotSize": {
					"format": "double",
					"description": "This attribute represents the lot size of the Property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999999999.999",
					"minimum": 0,
					"type": "number"
				},
				"lotSizeUnitCode": {
					"description": "This attribute represents the code of unit of lot size of the property. LotSizeUnitCode or LotSizeUnitDescription is required if there is a value for BuildingArea.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: AC, HC etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"lotSizeUnitDescription": {
					"description": "This attribute represents the description of unit of lot size of the property. LotSizeUnitCode or LotSizeUnitDescription is required if there is a value for LotSize.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as AreaUnit<br />\r\nExamples: Acres, Hectares etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"taxRoll": {
					"description": "This attribute represents the unique number assigned to the property in the tax records.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"totalRooms": {
					"format": "int32",
					"description": "This attribute represents the total number of rooms available in the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"totalAcres": {
					"format": "double",
					"description": "This attribute represents the total acres of the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 999999.99",
					"minimum": 0,
					"type": "number"
				},
				"yearBuilt": {
					"format": "int32",
					"description": "This attribute represents the year in which the property is built<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"yearRenovated": {
					"format": "int32",
					"description": "This attribute represents the Year in which the property was renovated.<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"lastSoldOn": {
					"format": "date-time",
					"description": "This attribute represents the date on which the property is previously sold.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"parkingPlaces": {
					"format": "int32",
					"description": "This attribute represents the number of Parking Places available on the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"lotDimension": {
					"description": "This attribute represents the spatial dimensions of the property.<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"levels": {
					"format": "int32",
					"description": "This attribute represents the number of levels available on the property.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 2147483647",
					"maximum": 2147483647,
					"minimum": 0,
					"type": "integer"
				},
				"zoning": {
					"description": "This attribute represents the property in terms of permitted usage of land based on mapped zones by the authorities.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"zoomLevel": {
					"format": "int32",
					"description": "This attribute represents the details of Zoom level that should be used while viewing the property on map.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"propertyLocation": {
					"description": "This attribute represents the description of the property location<br />\r\nMax Length: 300 characters",
					"maxLength": 300,
					"minLength": 0,
					"type": "string"
				},
				"elementarySchoolDistrict": {
					"description": "This attribute represents the district in which the elementary school is available near to the Property.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"middleSchoolDistrict": {
					"description": "This attribute represents the district in which the middle school is available near to the Property.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"highSchoolDistrict": {
					"description": "This attribute represents the district in which the high school is available near to the Property.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"apnNumber": {
					"description": "This attribute represents Accessor Parcel Number<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"features": {
					"description": "This attribute represents the features of the listed property. Example: Amenities, Appliances, Basement, Sewer etc.,",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"floors": {
					"description": "This attribute represents the floor details of the Property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertyFloor"
					}
				},
				"rooms": {
					"description": "This attribute represents the details of the room that are available in the property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertyRoom"
					}
				},
				"schools": {
					"description": "This attribute represents the details of the near-by school near-by the property.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertySchool"
					}
				},
				"additionalPropertyNames": {
					"description": "This attribute represents the details of additional property name.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertyI18N"
					}
				},
				"propertyMultiUnits": {
					"description": "Gets or sets PropertyMultiunits",
					"type": "array",
					"items": {
						"$ref": "#/definitions/PropertyMultiunit"
					}
				}
			}
		},
		"PropertyMultiunit": {
			"description": "Represents the MultiUnits",
			"type": "object",
			"properties": {
				"unitName": {
					"description": "Gets or sets UnitName",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"bedRoom": {
					"format": "int32",
					"description": "Gets or sets NoOfBedRooms",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"threeQuarterBath": {
					"format": "int32",
					"description": "Gets or sets ThreeQuarterBath",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"quarterBath": {
					"format": "int32",
					"description": "Gets or sets QuarterBath",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"fullBath": {
					"format": "int32",
					"description": "Gets or sets FullBath",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"halfBath": {
					"format": "int32",
					"description": "Gets or sets HalfBath",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				}
			}
		},
		"ResidentialSaleListingConsumer": {
			"description": "This is class for residential sale listing",
			"required": [
				"propertyDetails",
				"office",
				"listPrice"
			],
			"type": "object",
			"properties": {
				"newDevelopmentGuid": {
					"format": "uuid",
					"description": "Gets or sets NewDevelopmentGuid\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listPriceInUSD": {
					"format": "double",
					"description": "This attribute represents the Alternate Listing Price <br />\r\nThis is a read-only field and will be auto calculated based on ListPrice",
					"minimum": 0,
					"type": "number"
				},
				"annualTaxes": {
					"format": "double",
					"description": "This attribute represents the information on Annual property taxes. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"taxYear": {
					"format": "int32",
					"description": "This attribute represents the year in which tax was calculated.<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"contractOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the buyer agreed upon to the price of seller, vice versa. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"estimatedToCloseOn": {
					"format": "date-time",
					"description": "This attribute represents the estimated date in which the listing will be closed. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"isForAuction": {
					"description": "This attribute represents whether the IsForAuction is true or false. “Y” or “N” flag denotes whether or not the property is for auction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"contingencies": {
					"description": "This attribute represents the code value of the contingency details. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ContingencyType<br />\r\nExamples: Sewer Inspection, Appraisal etc.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					},
					"readOnly": true
				},
				"statusCode": {
					"description": "This attribute represents the status code of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the status of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"reportedAsCode": {
					"description": "This attribute represents the status code of listing with out contractual data.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: OP, CL etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"reportedAsDescription": {
					"description": "This attribute represents the status of listing with out contractual data.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Pending, Closed etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"listingUrl": {
					"description": "This attribute represents the Listing Landing Page URL. This is a read-only attribute.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyDetails": {
					"$ref": "#/definitions/ResidentialProperty",
					"description": "This attribute represents all the details of the property"
				},
				"primaryAgent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents the basic details of the primary agent. \r\nIn case of Add/Update of any listing either Primary Agent or Team Details is required. For adding an Agent, either ProviderIdentifier or Staff GUID is required."
				},
				"development": {
					"description": "This attribute represents the Development to which the listed property belongs.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"brokerReferenceNumber": {
					"description": "This attribute represents the BrokerReferenceNumber for the listed property.<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"daysOnMarket": {
					"format": "int32",
					"description": "This attribute represents the number of Days the property has been listed on Market.\r\nThis is a read-only attribute<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"isNewConstruction": {
					"description": "This attribute represents whether the IsNewConstruction is true or false. “Y” or “N” flag denotes whether listing is a new construction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isCallToShow": {
					"description": "This attribute represents whether the isCallToShow is true or false. “Y” or “N” flag denotes whether the interested party should call to see the property or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isPriceUponRequest": {
					"description": "This attribute represents whether the IsPriceUponRequest is true or false. “Y” or “N” flag denotes whether the asking price known only upon request or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isByAppointmentOnly": {
					"description": "This attribute represents whether the IsByAppointmentOnly is true or false. “Y” or “N” flag denotes whether the property can be seen by appointment or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"dateAvailable": {
					"format": "date-time",
					"description": "This attribute represents the date on which property space is available.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Listing's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Listing's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"team": {
					"$ref": "#/definitions/TeamBasicInfo",
					"description": "This attribute represents the team name and Team participant \r\nIn case of Add/Update of any listing either Primary Agent or Team is required. For adding a Team, either ProviderIdentifier or Team GUID is required."
				},
				"customAttributes": {
					"description": "This attribute represents the list of custom attributes pertaining to the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"openHouses": {
					"description": "This attribute represents the list of open houses for the listing. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingOpenHouse"
					}
				},
				"listingFees": {
					"description": "This attribute represents the fee details of listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingFee"
					}
				},
				"township": {
					"description": "This attribute represents Township of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"postOffice": {
					"description": "This attribute represents Post Office of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"cityRegions": {
					"description": "This attribute represents City region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"stateRegions": {
					"description": "This attribute represents State region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"countryRegions": {
					"description": "This attribute represents Country region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"continentRegions": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"neighborhood": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"otherAgents": {
					"description": "This attribute represents the Agents (other than primary agent) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyStaffBasicInfo"
					}
				},
				"media": {
					"description": "This attribute represents the media details of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"additionalMLS": {
					"description": "This attribute represents the additional MLS details (other than the primary MLS) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"remarks": {
					"description": "This attribute represents the remarks of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingRemark"
					}
				},
				"websites": {
					"description": "This attribute represents the websites of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"features": {
					"description": "This attribute represents the features of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"expiresOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the listing will be expired, defaults to 90 days from the listing active date. This date will not be available for consumers/data synchronizer vendors.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listingGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the listing\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listedDate": {
					"format": "date-time",
					"description": "This attribute represents the listing date since when the listing is active\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listPrice": {
					"format": "double",
					"description": "This attribute represents the ListPrice of the property <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isShowAddressOnInternet": {
					"description": "This attribute indicates whether the property address shall be displayed on Internet. <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isHideListPrice": {
					"description": "This attribute indicates whether the list price should be hidden to other users. <br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isForeclosure": {
					"description": "This attribute represents whether the ForeClosure is true or false. “Y” or “N” flag denotes whether or not the listing is foreclosed.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShortSale": {
					"description": "This attribute represents whether the IsShortSale is true or false. “Y” or “N” flag denotes whether or not the listing is for short sale.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the ShowOnInternet is true or false. “Y” or “N” flag denotes whether to show Listing on Internet.<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Listing in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ResidentialSaleListing": {
			"description": "This class represents the Residential Sale Listing Details",
			"required": [
				"propertyDetails",
				"office",
				"listPrice"
			],
			"type": "object",
			"properties": {
				"additionalDetails": {
					"$ref": "#/definitions/InternalListingDetails",
					"description": "This attribute represents the additional Listing Details"
				},
				"isOffTheMarket": {
					"description": "This attribute represents whether the isOffTheMarket is true or false. It is read-only field<br />",
					"type": "boolean",
					"readOnly": true
				},
				"newDevelopmentGuid": {
					"format": "uuid",
					"description": "Gets or sets NewDevelopmentGuid\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listPriceInUSD": {
					"format": "double",
					"description": "This attribute represents the Alternate Listing Price <br />\r\nThis is a read-only field and will be auto calculated based on ListPrice",
					"minimum": 0,
					"type": "number"
				},
				"annualTaxes": {
					"format": "double",
					"description": "This attribute represents the information on Annual property taxes. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"taxYear": {
					"format": "int32",
					"description": "This attribute represents the year in which tax was calculated.<br />\r\nFormat: YYYY<br />\r\nExample: 2016",
					"type": "integer"
				},
				"contractOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the buyer agreed upon to the price of seller, vice versa. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"estimatedToCloseOn": {
					"format": "date-time",
					"description": "This attribute represents the estimated date in which the listing will be closed. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"isForAuction": {
					"description": "This attribute represents whether the IsForAuction is true or false. “Y” or “N” flag denotes whether or not the property is for auction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"contingencies": {
					"description": "This attribute represents the code value of the contingency details. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ContingencyType<br />\r\nExamples: Sewer Inspection, Appraisal etc.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					},
					"readOnly": true
				},
				"statusCode": {
					"description": "This attribute represents the status code of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the status of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"reportedAsCode": {
					"description": "This attribute represents the status code of listing with out contractual data.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: OP, CL etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"reportedAsDescription": {
					"description": "This attribute represents the status of listing with out contractual data.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Pending, Closed etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"listingUrl": {
					"description": "This attribute represents the Listing Landing Page URL. This is a read-only attribute.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyDetails": {
					"$ref": "#/definitions/ResidentialProperty",
					"description": "This attribute represents all the details of the property"
				},
				"primaryAgent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents the basic details of the primary agent. \r\nIn case of Add/Update of any listing either Primary Agent or Team Details is required. For adding an Agent, either ProviderIdentifier or Staff GUID is required."
				},
				"development": {
					"description": "This attribute represents the Development to which the listed property belongs.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"brokerReferenceNumber": {
					"description": "This attribute represents the BrokerReferenceNumber for the listed property.<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"daysOnMarket": {
					"format": "int32",
					"description": "This attribute represents the number of Days the property has been listed on Market.\r\nThis is a read-only attribute<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 32767",
					"maximum": 32767,
					"minimum": 0,
					"type": "integer"
				},
				"isNewConstruction": {
					"description": "This attribute represents whether the IsNewConstruction is true or false. “Y” or “N” flag denotes whether listing is a new construction.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isCallToShow": {
					"description": "This attribute represents whether the isCallToShow is true or false. “Y” or “N” flag denotes whether the interested party should call to see the property or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isPriceUponRequest": {
					"description": "This attribute represents whether the IsPriceUponRequest is true or false. “Y” or “N” flag denotes whether the asking price known only upon request or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isByAppointmentOnly": {
					"description": "This attribute represents whether the IsByAppointmentOnly is true or false. “Y” or “N” flag denotes whether the property can be seen by appointment or not.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"dateAvailable": {
					"format": "date-time",
					"description": "This attribute represents the date on which property space is available.<br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Listing's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Listing's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"team": {
					"$ref": "#/definitions/TeamBasicInfo",
					"description": "This attribute represents the team name and Team participant \r\nIn case of Add/Update of any listing either Primary Agent or Team is required. For adding a Team, either ProviderIdentifier or Team GUID is required."
				},
				"customAttributes": {
					"description": "This attribute represents the list of custom attributes pertaining to the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"openHouses": {
					"description": "This attribute represents the list of open houses for the listing. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingOpenHouse"
					}
				},
				"listingFees": {
					"description": "This attribute represents the fee details of listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingFee"
					}
				},
				"township": {
					"description": "This attribute represents Township of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"postOffice": {
					"description": "This attribute represents Post Office of the Property<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"cityRegions": {
					"description": "This attribute represents City region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"stateRegions": {
					"description": "This attribute represents State region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"countryRegions": {
					"description": "This attribute represents Country region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"continentRegions": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"neighborhood": {
					"description": "This attribute represents Continent region of the Property",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"otherAgents": {
					"description": "This attribute represents the Agents (other than primary agent) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyStaffBasicInfo"
					}
				},
				"media": {
					"description": "This attribute represents the media details of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"additionalMLS": {
					"description": "This attribute represents the additional MLS details (other than the primary MLS) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"remarks": {
					"description": "This attribute represents the remarks of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/ListingRemark"
					}
				},
				"websites": {
					"description": "This attribute represents the websites of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"features": {
					"description": "This attribute represents the features of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Feature"
					}
				},
				"listingGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the listing\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listedDate": {
					"format": "date-time",
					"description": "This attribute represents the listing date since when the listing is active\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listPrice": {
					"format": "double",
					"description": "This attribute represents the ListPrice of the property <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isShowAddressOnInternet": {
					"description": "This attribute indicates whether the property address shall be displayed on Internet. <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isHideListPrice": {
					"description": "This attribute indicates whether the list price should be hidden to other users. <br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isForeclosure": {
					"description": "This attribute represents whether the ForeClosure is true or false. “Y” or “N” flag denotes whether or not the listing is foreclosed.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShortSale": {
					"description": "This attribute represents whether the IsShortSale is true or false. “Y” or “N” flag denotes whether or not the listing is for short sale.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the ShowOnInternet is true or false. “Y” or “N” flag denotes whether to show Listing on Internet.<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Listing in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"ResidentialSaleNewDevelopment": {
			"description": "Residential Sale New Development",
			"required": [
				"newDevelopmentID",
				"office"
			],
			"type": "object",
			"properties": {
				"customAttributes": {
					"description": "This attribute represents the list of custom attributes pertaining to the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityCustomAttribute"
					}
				},
				"media": {
					"description": "This attribute represents the media details of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"remarks": {
					"description": "This attribute represents the remarks of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityRemark"
					}
				},
				"team": {
					"$ref": "#/definitions/TeamBasicInfo",
					"description": "This attribute represents the team name and Team participant \r\nIn case of Add/Update of any listing either Primary Agent or Team is required. For adding a Team, either ProviderIdentifier or Team GUID is required."
				},
				"newDevelopmentID": {
					"description": "Gets or sets NewDevelopment ID",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"newDevelopmentGuid": {
					"format": "uuid",
					"description": "Gets or sets NewDevelopmentGuid\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"agreementDate": {
					"format": "date-time",
					"description": "Gets or sets AgreementOn",
					"type": "string"
				},
				"statusCode": {
					"description": "This attribute represents the status code of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing <br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the status of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SaleListingStatus for Sale Listing and passing categoryName as LeaseStatus for Lease and Rental Listing<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of ListingRemarks. Either LanguageCode or LanguageName is required, if Remark is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of ListingRemarks. Either LanguageCode or LanguageName is required, if Remark is supplied. \r\nThe list of available language names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Listing's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Listing's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"brandCode": {
					"description": "Gets of Sets BrandCode",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"providerIdentifier": {
					"description": "Gets of Sets ProviderIdentifier",
					"type": "string"
				},
				"developerUrl": {
					"description": "Gets of Sets DeveloperUrl",
					"type": "string"
				},
				"developmentUrl": {
					"description": "Gets of Sets DeveloperUrl",
					"type": "string"
				},
				"developerName": {
					"description": "Gets of Sets DeveloperName",
					"type": "string"
				},
				"newDevelopmentTitle": {
					"description": "Gets of Sets Development Name",
					"type": "string"
				},
				"developmentListDate": {
					"format": "date-time",
					"description": "Gets of Sets DevelopmentListDate",
					"type": "string"
				},
				"expiresOn": {
					"format": "date-time",
					"description": "Gets of Sets ExpiresOn",
					"type": "string"
				},
				"closedOn": {
					"format": "date-time",
					"description": "Gets of Sets ClosedOn",
					"type": "string"
				},
				"suspendedOn": {
					"format": "date-time",
					"description": "Gets of Sets SuspendedOn",
					"type": "string"
				},
				"terminatedOn": {
					"format": "date-time",
					"description": "Gets of Sets TerminatedOn",
					"type": "string"
				},
				"noOfUnits": {
					"format": "int32",
					"description": "Gets of Sets NoOfUnits",
					"type": "integer"
				},
				"minimumListPrice": {
					"format": "double",
					"description": "Gets of Sets MinimumListPrice",
					"type": "number"
				},
				"developmentVolume": {
					"format": "double",
					"description": "Gets of Sets DevelopmentVolume",
					"type": "number"
				},
				"isShowOnInternet": {
					"description": "Gets of Sets IsShowOnInternet",
					"type": "boolean"
				},
				"address": {
					"$ref": "#/definitions/AddressExtendedInfo",
					"description": "This attribute represents the Primary Address of the seller"
				},
				"primaryAgent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents the basic details of the primary agent. \r\nIn case of Add/Update of any listing either Primary Agent or Team Details is required. For adding an Agent, either ProviderIdentifier or Staff GUID is required."
				},
				"otherAgents": {
					"description": "This attribute represents the Agents (other than primary agent) of the listed property. \r\nThis will be a collection",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CompanyStaffBasicInfo"
					}
				}
			}
		},
		"EntityRemark": {
			"description": "This class contains the attributes representing the Remarks",
			"type": "object",
			"properties": {
				"remarkTypeCode": {
					"description": "This attribute represents the code value of the profile category. Either RemarkTypeCode or RemarkTypeDescription is required, if Remark is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as RemarkType<br />\r\nExamples: 1, 14 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"remarkTypeDescription": {
					"description": "This attribute represents the description of the profile category. \r\nEither RemarkTypeCode or RemarkTypeDescription is required, if Remark is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as RemarkType<br />\r\nExamples: Area Description, Property Description etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of Remark. Either LanguageCode or LanguageName is required, if Remark is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of Remark. Either LanguageCode or LanguageName is required, if Remark is supplied. \r\nThe list of available language names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"remark": {
					"description": "This attribute represents the Remark in plain text. Either Remark or HtmlRemark is required. <br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				},
				"htmlRemark": {
					"description": "This attribute represents the Remark in html format. Either Remark or HtmlRemark is required. <br />\r\nMax Length: 4000 characters",
					"maxLength": 4000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"NewDevelopmentDelta": {
			"description": "This entity gives the list of GUIDs that got changed in a specific duration",
			"type": "object",
			"properties": {
				"providerIdentifier": {
					"description": "This attribute represents the ProviderIdentifier of the listing<br />\r\nMax Length: 255 characters",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"type": {
					"description": "This attribute represents the type of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingType<br />\r\nExamples: Residential Sale, Commercial Sale etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"entityGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUIDs used for the entity.\r\nEntities can be Company, Office, Person, Listings, Transaction etc. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"status": {
					"description": "This attribute represents the status of the entity. (Active, De-active) <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"action": {
					"description": "This attribute represents the action (Insert, Update, Delete)<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"statusReason": {
					"description": "This attribute represents the reason of the Status. If the Status is Active, the reason can be Pending. If the Status is De-active, the reason can be Closed/Canceled<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdatedBy": {
					"description": "This attribute represents the LastUpdated user name<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"SaleTransaction": {
			"description": "This class represents the SaleTransaction",
			"required": [
				"salePrice",
				"isCommercial"
			],
			"type": "object",
			"properties": {
				"listingOffice": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "TThis attribute represents the Identifier information of the Listing Office. Either Listing Office Identifier or Sale Office Identifier is required"
				},
				"salesOffice": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the Identifier information of the Buying Office. Either Listing Office Identifier or Sale Office Identifier is required"
				},
				"salePrice": {
					"format": "double",
					"description": "This attribute represents the price of the associated property for which it is sold. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"statusCode": {
					"description": "This attribute represents the Transaction Status Code. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingTransactionStatus<br />\r\nExamples: OP,CL etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the Transaction Status Values would be Open/Pending/Closed/Audited/Cancelled etc. Either StatusCode or StatusDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingTransactionStatus<br />\r\nExamples: Pending, Closed etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"statusOn": {
					"format": "date-time",
					"description": "This attribute represents the Date when the current status is active from\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string",
					"readOnly": true
				},
				"contractOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the associated property was placed under a contract for sale.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"estimatedToCloseOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the associated property under a contract for sale is expected to close.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"closedOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the agreement was closed.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"saleSideGrossCommission": {
					"format": "double",
					"description": "This attribute represents the Gross Commission Amount of sale side <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"listSideGrossCommission": {
					"format": "double",
					"description": "This attribute represents the Gross Commission Amount of listing side <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"otherCompanySplitCommission": {
					"format": "double",
					"description": "This attribute represents the Amount paid to the other company (Outside Broker) <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"adjustedGrossCommission": {
					"format": "double",
					"description": "This attribute represents the Adjusted Gross Commission calculated after deducting the Referral amount and the Other company split from the Gross commission of the transaction.; read-only attribute <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number",
					"readOnly": true
				},
				"listSACommission": {
					"format": "double",
					"description": "This attribute represents the Sales Associate Commission on list side <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"saleSACommission": {
					"format": "double",
					"description": "This attribute represents the Sales Associate Commission on sale side <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"outsideBrokerOfficeName": {
					"description": "This attribute represents the outside Brokerage office<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"outsideBrokerBrand": {
					"description": "This attribute represents the outside Brokerage office<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"listingDetails": {
					"$ref": "#/definitions/ListingBasicInfo",
					"description": "This attribute represents the basic listing details associated with the transaction"
				},
				"listingSideAgents": {
					"description": "This attribute represents the Sales Associates involved in the listing side of the transaction",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Participant"
					}
				},
				"buyingSideAgents": {
					"description": "This attribute represents the Sales Associates involved in the buying side of the transaction",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Participant"
					}
				},
				"buyers": {
					"$ref": "#/definitions/BuyerSellerDetails[TransactionBuyerSeller]",
					"description": "This attribute represents the buyer detail information such as name, address etc.,"
				},
				"sellers": {
					"$ref": "#/definitions/BuyerSellerDetails[TransactionBuyerSeller]",
					"description": "This attribute represents the seller detail information such as name, address etc.,"
				},
				"outsideBroker": {
					"$ref": "#/definitions/OutsideBroker",
					"description": "This attribute represents the name of the outside broker involved in the transaction, if the office reporting the transaction did not represent both the buyer and seller"
				},
				"referrals": {
					"description": "This attribute represents Referrals",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Referral"
					}
				},
				"expenses": {
					"description": "This attribute represents Deductions",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Expense"
					}
				},
				"contingencies": {
					"description": "This attribute represents the code value of the contingency details. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ContingencyType<br />\r\nExamples: Sewer Inspection, Appraisal etc.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CodeValue"
					}
				},
				"isCommercial": {
					"description": "This attribute indicates whether the transaction is commercial Other Income or residential Other Income",
					"type": "boolean"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the sale price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP <br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the sale price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"propertySubtypeCode": {
					"description": "This attribute represents the code value of the type of listing. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: 1, 4 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertySubtypeDescription": {
					"description": "This attribute represents the code value of the type of listing. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ResidentialPropertySubType (for Property Type - Residential), CommercialPropertySubType (for Property Type - Commercial), LandPropertySubType (for Property Type - Land), FarmPropertySubType (for Property Type - Farm) and OtherPropertySubType (for Property Type - Other)<br />\r\nExamples: Apartment, Duplex etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertyTypeCode": {
					"description": "This attribute represents the code value of the type of property. Either PropertyTypeCode or PropertyTypeDescription is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: C, R etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertyTypeDescription": {
					"description": "This attribute represents the code value of the type of property. Either PropertyTypeCode or PropertyTypeDescription is required. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyType<br />\r\nExamples: Commercial, Residential etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertyStyleCode": {
					"description": "This attribute represents the style code of the property. If not provided, the value will be set to Others. \r\nThe list of available codes can be obtained by calling method - GetPropertyStyles, passing PropertySubtype Name<br />\r\nExamples: 341, 342 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertyStyleDescription": {
					"description": "This attribute represents the style description of the property. If not provided, the value will be set to Others. \r\nThe list of available descriptions can be obtained by calling method - GetPropertyStyles, passing PropertySubtype Name<br />\r\nExamples: 1 Level Ranch, Apartment etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertyUseCode": {
					"description": "This attribute represents the code value of the use of property. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyUse<br />\r\nExamples: 01, 02 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"propertyUseDescription": {
					"description": "This attribute represents the code value of the use of property. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PropertyUse<br />\r\nExamples: Owner Occupied, Rental or Investment etc.<br />\r\nMax Length: 100 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"propertyName": {
					"description": "This attribute represents the name of the property<br />\r\nMax Length: 80 characters",
					"maxLength": 80,
					"minLength": 0,
					"type": "string"
				},
				"brokerReferenceNumber": {
					"description": "This attribute represents the  broker/office reference number<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Transaction's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Transaction's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"cancelOn": {
					"format": "date-time",
					"description": "This attribute represents the Cancelled Date\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"cancelReasonCode": {
					"description": "This attribute represents the Reason for cancellation",
					"type": "string"
				},
				"cancelReasonDescription": {
					"description": "This attribute represents the Reason for cancellation",
					"type": "string"
				},
				"transactionGuid": {
					"format": "uuid",
					"description": "This attribute represents the Transaction GUID This will be a read-only attribute. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"readOnly": true,
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"transactionId": {
					"description": "This attribute represents the Transaction Id and is a read-only field. This will be always a system generated string. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Address of the property the transaction is associated with. \r\nThis is a mandatory field for Sale Transactions"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Transaction in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Transaction",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"isDevelopmentAssociated": {
					"description": "Gets or sets IsDevelopmentAssociated",
					"type": "boolean"
				}
			}
		},
		"ListingBasicInfo": {
			"description": "This class contains all the basic attributes of listing",
			"required": [
				"office",
				"listPrice"
			],
			"type": "object",
			"properties": {
				"typeCode": {
					"description": "This attribute represents the code value of the type of listing.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingType<br />\r\nExamples: 1, 3 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the type of listing.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingType<br />\r\nExamples: Residential Sale, Commercial Sale etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"listingGuid": {
					"format": "uuid",
					"description": "This attribute represent the GUID information of the listing\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"listingId": {
					"description": "This attribute represents the ID information of the Listing and is a read-only attribute. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the identifier of the associated office. Office is required"
				},
				"primaryMLS": {
					"description": "This attribute represents the Primary MLS ID<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"listedDate": {
					"format": "date-time",
					"description": "This attribute represents the listing date since when the listing is active\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"listPrice": {
					"format": "double",
					"description": "This attribute represents the ListPrice of the property <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"currencyCode": {
					"description": "This attribute represents the currency ISO code of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: USD, GBP<br />\r\nMax Length: 3 characters",
					"maxLength": 3,
					"minLength": 0,
					"type": "string"
				},
				"currencyName": {
					"description": "This attribute represents the currency name of the list price. Either CurrencyCode or CurrencyName is required. \r\nThe list of available currency names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Currency<br />\r\nExamples: US Dollar, Pound Sterling<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"isShowAddressOnInternet": {
					"description": "This attribute indicates whether the property address shall be displayed on Internet. <br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isHideListPrice": {
					"description": "This attribute indicates whether the list price should be hidden to other users. <br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isForeclosure": {
					"description": "This attribute represents whether the ForeClosure is true or false. “Y” or “N” flag denotes whether or not the listing is foreclosed.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShortSale": {
					"description": "This attribute represents whether the IsShortSale is true or false. “Y” or “N” flag denotes whether or not the listing is for short sale.<br />\r\nDefault value: false (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents whether the ShowOnInternet is true or false. “Y” or “N” flag denotes whether to show Listing on Internet.<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Listing in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"BuyerSellerDetails[TransactionBuyerSeller]": {
			"description": "This class contains the details of the buyers and sellers",
			"type": "object",
			"properties": {
				"buyerSellers": {
					"description": "This attribute represents the details of Buyer and Seller",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TransactionBuyerSeller"
					}
				},
				"leadSourceCode": {
					"description": "This attribute represents the LeadSource Code. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SellerBuyerSource<br />\r\nExamples: 1, 2 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"leadSourceDescription": {
					"description": "This attribute represents the LeadSource Description. \r\nThis list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SellerBuyerSource<br />\r\nExamples: Brand Toll Free, Brand Consumer website etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"isAgentGenerated": {
					"description": "This attribute indicates whether the transaction is agent generated.",
					"type": "boolean"
				}
			}
		},
		"OutsideBroker": {
			"description": "The OutsideBroker class",
			"type": "object",
			"properties": {
				"firstName": {
					"description": "This attribute represents the First Name of the outside broker<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the outside broker<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"email": {
					"description": "This attribute represents Email address of the Outside Broker. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"Referral": {
			"description": "The Referral class",
			"required": [
				"referralAmount"
			],
			"type": "object",
			"properties": {
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person. This is required if the Referral is a Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person.  This is required if the Referral is a Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"entityName": {
					"description": "This attribute represents the name of the company from where the referral is coming. This is required if the Referral is a Business Entity<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"typeCode": {
					"description": "This attribute represents the code value of the type of referral. Either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ReferralType<br />\r\nExamples: P, C<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the type of referral. Either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ReferralType<br />\r\nExamples: Person/Individual(s), Corporation etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"networkTypeCode": {
					"description": "This attribute represents the Network Type (Code). Either NetworkTypeCode or NetworkTypeDescription is required, if referral is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ReferralNetwork<br />\r\nExamples: CA, GC etc. <br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"networkTypeDescription": {
					"description": "This attribute represents the Network Type (description). Either NetworkTypeCode or NetworkTypeDescription is required, if referral is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ReferralNetwork<br />\r\nExamples: Cartus, Global Client Solutions etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"referralBrandDescription": {
					"description": "This attribute represents the code value of the brand, that involved in the referral. Either ReferralBrandCode or ReferralBrandDescription is required, if referral is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ReferralBrand<br />\r\nExamples: Better Homes and Gardens Real Estate, Century 21 etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"sideCode": {
					"description": "This attribute represents the code value of the Side (Code). Either SideCode or SideDescription is required, if referral is supplied.<br />\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Side<br />\r\nExamples: L, S, B<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"sideDescription": {
					"description": "This attribute represents the code value of the Side (Description). Either SideCode or SideDescription is required, if referral is supplied.<br />        \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Side<br />\r\nAllowed Values: Listing, Buying, Both<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"referralAmount": {
					"format": "double",
					"description": "This attribute represents the Referral Amount. This is required if Referral is supplied.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"address": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Address details of the referral"
				},
				"phoneNumber": {
					"description": "This attribute represents the Primary Phone number<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"receivedFromAgent": {
					"$ref": "#/definitions/CompanyStaffBasicInfo",
					"description": "This attribute represents the information of the agent from which the referral was received"
				},
				"agentsInReferral": {
					"description": "This attribute represents the information of the agents from which the referral was received",
					"type": "array",
					"items": {
						"$ref": "#/definitions/AgentsInReferral"
					}
				}
			}
		},
		"Expense": {
			"description": "The Deduction class",
			"required": [
				"amount"
			],
			"type": "object",
			"properties": {
				"typeCode": {
					"description": "This attribute represents the code value of the deduction type. Either TypeCode or TypeDescription is required, if expense is supplied\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionExpenseType<br />\r\nExamples: OT, OB etc. <br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the deduction type. Either TypeCode or TypeDescription is required, if expense is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionExpenseType<br />\r\nExamples: Off the Top, Off the bottom etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"amount": {
					"format": "double",
					"description": "This attribute represents the deduction amount. This field is required if Expense is supplied.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"remarks": {
					"description": "This attribute represents the Remarks<br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"sideCode": {
					"description": "This attribute represents the code value of the Side (Code). Either SideCode or SideDescription is required, if expense is supplied.<br />\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Side<br />\r\nExamples: L, S, B<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"sideDescription": {
					"description": "This attribute represents the code value of the Side (Description). Either SideCode or SideDescription is required, if expense is supplied.<br />        \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as Side<br />\r\nAllowed Values: Listing, Buying, Both<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"TransactionBuyerSeller": {
			"description": "This class contains all the buyer or seller attributes for a transaction",
			"type": "object",
			"properties": {
				"participantGuid": {
					"format": "uuid",
					"description": "This attribute represents the Participant GUID This will be a read-only attribute. This will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the Person GUID This will be a read-only attribute. This will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"businessEntityGuid": {
					"format": "uuid",
					"description": "This attribute represents the Business Entity GUID This will be a read-only attribute. This will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"currentPhone": {
					"description": "This attribute represents Current Phone of the buyer/seller<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"futurePhone": {
					"description": "This attribute represents Future Phone of the buyer/seller<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"currentAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Current Address of the buyer/seller"
				},
				"futureAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Future Address of the buyer/seller"
				},
				"surveyDeliveryTypeCode": {
					"description": "This attribute represents the SurveyDeliveryType code. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SurveyDelivery<br />\r\nExamples: E, P etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"surveyDeliveryTypeDescription": {
					"description": "This attribute represents the SurveyDeliveryType Description. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as SurveyDelivery<br />\r\nExamples: Email, Paper etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"surveyLanguageCode": {
					"description": "This attribute represents the ISO Code of the Survey Language. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"surveyLanguageName": {
					"description": "This attribute represents name of the Survey Language. \r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"preferredClubCode": {
					"description": "This attribute represents the Preferred Client Club Code. This is applicable only for C21 - US\r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PreferredClientClub<br />\r\nExamples: 2, 5<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"preferredClubDescription": {
					"description": "This attribute represents the Preferred Client Club Description. This is applicable only for C21 - US\r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as PreferredClientClub<br />\r\nExamples: 2 Year Plan ($25), 5 Year Plan ($43) etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"typeCode": {
					"description": "This attribute represents the code value of the type of buyer/seller. While writing data to the API, either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as BuyerSellerType<br />\r\nExamples: P, C<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the code value of the type of buyer/seller. While writing data to the API, either TypeCode or TypeDescription is required, if buyer/seller is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as BuyerSellerType<br />\r\nExamples: Person/Individual(s), Corporation etc. <br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person. While writing data to the API, this is required - if the seller type is Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person. While writing data to the API, this is required - if the seller type is Person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"businessEntityName": {
					"description": "This attribute represents the Business Entity Name. While writing data to the API, this is required - if the seller type is Business Entity<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"emailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"website": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"AgentsInReferral": {
			"description": "This attribute represents the information of the agent from which the referral was received",
			"type": "object",
			"properties": {
				"referralAmount": {
					"format": "double",
					"description": "This attribute represents the Referral Amount of Agent.<br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"companyStaffGuid": {
					"format": "uuid",
					"description": "This attribute represents the Company Staff GUID. Either StaffGUID or ProviderIdentifier is required. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the the Company Basic Information"
				},
				"primaryOffice": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the primary office identifier",
					"readOnly": true
				},
				"defaultPhotoUrl": {
					"description": "This attribute represents the Photo url of company staff result search<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Staff in the provider system. Either StaffGUID or ProviderIdentifier is required. <br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the global unique identifier of the person.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the Middle Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix given in the name of the person<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"personProviderIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents Primary Phone<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"vanityEmailAddress": {
					"description": "This attribute represents the Vanity Email address assigned to the person. It's read-only attribute<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"primaryWebsite": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"Team": {
			"description": "This class represents the team",
			"type": "object",
			"properties": {
				"activeSince": {
					"format": "date-time",
					"description": "This attribute represents the date since which the team is in active.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"deactivationDate": {
					"format": "date-time",
					"description": "This attribute represents the date in which the team is deactivated.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"members": {
					"description": "This attribute represents list of team members associated with the team",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TeamMember"
					}
				},
				"additionalNames": {
					"description": "GThis attribute represents list of additional team names in different languages",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TeamI18N"
					}
				},
				"profiles": {
					"description": "This attribute represents list of team profiles",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityProfile"
					}
				},
				"media": {
					"description": "This attribute represents list of team media items associated with the team",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityMedia"
					}
				},
				"additionalWebsites": {
					"description": "This attribute represents list of additional team websites",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityWebsite"
					}
				},
				"additionalEmailAddress": {
					"description": "This attribute represents list of additional team email addresses",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityEmail"
					}
				},
				"additionalPhoneNumbers": {
					"description": "This attribute represents list of additional team phone numbers",
					"type": "array",
					"items": {
						"$ref": "#/definitions/EntityPhone"
					}
				},
				"teamAwardsDesignations": {
					"description": "Gets or sets Team AwardDesignations",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TeamAwardDesignation"
					}
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the Team's last updated date and time. This is a read-only attribute<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string",
					"readOnly": true
				},
				"lastUpdatedBy": {
					"description": "This attribute represents Team's last updated user name. This is a read-only attribute<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"teamGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID of the team.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"rfgTeamId": {
					"description": "This attribute represents the Team ID<br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"teamName": {
					"description": "This attribute represents the Team Name in Default Language. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the Company GUID to which the team is associated with"
				},
				"brandCode": {
					"description": "This attribute represents the brand",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"teamTypeCode": {
					"description": "This attribute represents the Type (code) of the team. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TeamType<br />\r\nExamples: A, M etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"teamTypeDescription": {
					"description": "This attribute represents the Type (description) of the team. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TeamType<br />\r\nExamples: Associate, Broker etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents the primary phone number of the team.<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents the primary EmailAddress of the team. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"primaryWebsite": {
					"description": "This attribute represents the primary WebAddress of the team.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Team in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"TeamMember": {
			"description": "This class represents the team member",
			"type": "object",
			"properties": {
				"activeSince": {
					"format": "date-time",
					"description": "This attribute represents the active since date of the team member\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"deactivationDate": {
					"format": "date-time",
					"description": "This attribute represents the deactivation date of the team member\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"isRepresentative": {
					"description": "This attribute indicate whether the team member is a representative or not",
					"type": "boolean"
				},
				"companyStaffGuid": {
					"format": "uuid",
					"description": "This attribute represents the Company Staff GUID. Either StaffGUID or ProviderIdentifier is required. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the the Company Basic Information"
				},
				"primaryOffice": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the primary office identifier",
					"readOnly": true
				},
				"defaultPhotoUrl": {
					"description": "This attribute represents the Photo url of company staff result search<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Staff in the provider system. Either StaffGUID or ProviderIdentifier is required. <br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the global unique identifier of the person.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the Middle Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix given in the name of the person<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"personProviderIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents Primary Phone<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"vanityEmailAddress": {
					"description": "This attribute represents the Vanity Email address assigned to the person. It's read-only attribute<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"primaryWebsite": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"TeamI18N": {
			"description": "This class represents TeamI18N BusinessEntities",
			"type": "object",
			"properties": {
				"teamName": {
					"description": "This attribute represents the team name in the provided language<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"languageCode": {
					"description": "This attribute represents the ISO Language Code of the Team Name. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: en, es<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"languageName": {
					"description": "This attribute represents Language name of the Team Name.\r\nThe list of available names can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as WrittenLanguages<br />\r\nExamples: English, Spanish<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"TeamAwardDesignation": {
			"description": "This Class represents the TeamAwardDesignation for Team",
			"type": "object",
			"properties": {
				"year": {
					"format": "int32",
					"description": "Gets or sets Year",
					"type": "integer"
				},
				"awardDesignationTypeID": {
					"format": "int32",
					"description": "Gets or sets AwardDesignationTypeID",
					"type": "integer"
				}
			}
		},
		"TeamSearchResult": {
			"description": "This class represents the TeamSearchResult",
			"type": "object",
			"properties": {
				"isActive": {
					"description": "This attribute represents the status of the team member.",
					"type": "boolean"
				},
				"members": {
					"description": "This attribute represents list of team members associated with the team",
					"type": "array",
					"items": {
						"$ref": "#/definitions/TeamMember"
					}
				},
				"teamGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID of the team.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"rfgTeamId": {
					"description": "This attribute represents the Team ID<br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"teamName": {
					"description": "This attribute represents the Team Name in Default Language. <br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the Company GUID to which the team is associated with"
				},
				"brandCode": {
					"description": "This attribute represents the brand",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				},
				"teamTypeCode": {
					"description": "This attribute represents the Type (code) of the team. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TeamType<br />\r\nExamples: A, M etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"teamTypeDescription": {
					"description": "This attribute represents the Type (description) of the team. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TeamType<br />\r\nExamples: Associate, Broker etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents the primary phone number of the team.<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents the primary EmailAddress of the team. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"primaryWebsite": {
					"description": "This attribute represents the primary WebAddress of the team.<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Team in the provider system.<br />\r\nMax Length: 255 characters<br />",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"TransactionSearchCriteria": {
			"description": "This class represents the Transaction search criteria Information",
			"type": "object",
			"properties": {
				"transactionTypeCode": {
					"description": "This attribute represents the code value of the type of transaction. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionType<br />\r\nExamples: 01,03 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"transactionTypeDescription": {
					"description": "This attribute represents the type of transaction (description). \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionType<br />\r\nExamples: Residential Sale, Commercial Sale etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"officeGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the Office.\r\nThis attribute will be used as search criteria to search and fetch the results.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"agentGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the Agent.\r\nThis attribute will be used as search criteria to search and fetch the results.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"mlsId": {
					"description": "This attribute represents the numeric identifier issued by some Multiple Listing Service Boards to local real estate agents.\r\nThis attribute will be used as search criteria to search and fetch the results.<br />\r\nMax Length: 50 characters",
					"maxLength": 50,
					"minLength": 0,
					"type": "string"
				},
				"transactionId": {
					"description": "This attribute represents the Transaction Id and is a read-only field. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"addressLine1": {
					"description": "This attribute represents the Address Line 1 information.<br />\r\nMax Length: 200 characters",
					"maxLength": 200,
					"minLength": 0,
					"type": "string"
				},
				"city": {
					"description": "This attribute represents the City Name<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"postalCode": {
					"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceCode": {
					"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceName": {
					"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"countryCode": {
					"description": "This attribute represents the Country ISO Code<br />\r\nMax Length: 2 characters",
					"maxLength": 2,
					"minLength": 0,
					"type": "string"
				},
				"countryName": {
					"description": "This attribute represents the Country Name.<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"activeSince": {
					"format": "date-time",
					"description": "This attribute represents Listed Since date. The search will look for transactions which are listed since the provided date    \r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"pendingSince": {
					"format": "date-time",
					"description": " This attribute represents Pending Since date. The search will look for transactions which are in pending status since the provided date\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"closedSince": {
					"format": "date-time",
					"description": "This attribute represents Closed Since date. The search will look for transactions which are closed since the provided date\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"statusCode": {
					"description": "This attribute represents the code value of the status of transaction. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as <br />\r\nExamples: <br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the description value of the status of transaction. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as <br />\r\nExamples:<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"seller": {
					"$ref": "#/definitions/BuyerSellerSearchCriteria",
					"description": "This attribute represents the Seller attributes using which the transaction search needs to be performed"
				},
				"buyer": {
					"$ref": "#/definitions/BuyerSellerSearchCriteria",
					"description": "This attribute represents the Seller attributes using which the transaction search needs to be performed"
				},
				"buyerBusinessEntity": {
					"$ref": "#/definitions/BuyerSellerSearchCriteria",
					"description": "This attribute represents the Buyer Business Entity using which the transaction search needs to be performed"
				},
				"sellerBusinessEntity": {
					"$ref": "#/definitions/BuyerSellerSearchCriteria",
					"description": "This attribute represents the Seller Business Entity using which the transaction search needs to be performed"
				}
			}
		},
		"BuyerSellerSearchCriteria": {
			"description": "This class represents the attributes for the buyer/seller based transaction searches",
			"type": "object",
			"properties": {
				"firstName": {
					"description": "This attribute represents the First Name of the person",
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person",
					"type": "string"
				},
				"businessEntityName": {
					"description": "This attribute represents the Business Entity Name",
					"type": "string"
				},
				"emailAddress": {
					"description": "This attribute represents Primary Email address",
					"type": "string"
				},
				"phoneNumber": {
					"description": "This attribute represents Primary Phone",
					"type": "string"
				},
				"addressLine1": {
					"description": "This attribute represents the Address Line 1 information.",
					"type": "string"
				},
				"city": {
					"description": "This attribute represents the City information.<br />\r\nMax Length: 60 characters",
					"maxLength": 60,
					"minLength": 0,
					"type": "string"
				},
				"postalCode": {
					"description": "This attribute represents the PostalCode information.<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceCode": {
					"description": "This attribute represents the StateProvince information. <br />\r\nMax Length: 4 characters",
					"maxLength": 4,
					"minLength": 0,
					"type": "string"
				},
				"stateProvinceName": {
					"description": "This attribute represents the StateProvince information.<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				},
				"countryCode": {
					"description": "This attribute represents the Country ISO Code<br />\r\nMax Length: 2 characters",
					"maxLength": 2,
					"minLength": 0,
					"type": "string"
				},
				"countryName": {
					"description": "This attribute represents the Country Name.<br />\r\nMax Length: 100 characters",
					"maxLength": 100,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"TransactionSummary": {
			"description": "This class represents the TransactionSearchResult",
			"type": "object",
			"properties": {
				"typeCode": {
					"description": "This attribute represents the code value of the type of transaction. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionType<br />\r\nExamples: 01,03 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"typeDescription": {
					"description": "This attribute represents the type of transaction (description). \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionType<br />\r\nExamples: Residential Sale, Commercial Sale etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"listingOfficeGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the Listing Office",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salesOfficeGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUID information of the Buying Office",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salesPrice": {
					"format": "double",
					"description": "This attribute represents the price of the associated property for which it is sold.\r\nThis attribute will be displayed as part of search result. <br />\r\nMin. Value: 0 <br />\r\nMax. Value: 922337203685477.5807",
					"minimum": 0,
					"type": "number"
				},
				"statusCode": {
					"description": "This attribute represents the code value of the status of transaction.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingTransactionStatus<br />\r\nExamples: AC, OP etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"statusDescription": {
					"description": "This attribute represents the description value of the status of transaction.\r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as ListingTransactionStatus<br />\r\nExamples: Active, Pending etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"contractOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the associated property was placed under a contract for sale.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"estimatedToCloseOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the associated property under a contract for sale is expected to close.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"closedOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the agreement was closed.\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"lastUpdatedBy": {
					"description": "This attribute represents the date in which the record is first created.<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdateOn": {
					"format": "date-time",
					"description": "This attribute represents the date in which the record is last updated.<br />\r\nDataType: DateTime with Offset<br />\r\nExample: 2015-02-13T09:45:32.200-04:00",
					"type": "string"
				},
				"listingDetails": {
					"$ref": "#/definitions/ListingBasicInfo",
					"description": "This attribute represents the basic listing details associated with the transaction"
				},
				"transactionGuid": {
					"format": "uuid",
					"description": "This attribute represents the Transaction GUID This will be a read-only attribute. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"readOnly": true,
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"transactionId": {
					"description": "This attribute represents the Transaction Id and is a read-only field. This will be always a system generated string. <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"propertyAddress": {
					"$ref": "#/definitions/Address",
					"description": "This attribute represents the Address of the property the transaction is associated with. \r\nThis is a mandatory field for Sale Transactions"
				},
				"providerIdentifier": {
					"description": "This attribute represents the Identifier of the Transaction in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Transaction",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"isDevelopmentAssociated": {
					"description": "Gets or sets IsDevelopmentAssociated",
					"type": "boolean"
				}
			}
		},
		"TransactionDelta": {
			"description": "This class represents the Transaction Delta object",
			"type": "object",
			"properties": {
				"providerIdentifier": {
					"description": "This attribute represents the ProviderIdentifier of the listing<br />\r\nMax Length: 255 characters",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"type": {
					"description": "This attribute represents the type of transaction. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as TransactionType<br />\r\nExamples: Residential Sale, Commercial Sale etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"entityGuid": {
					"format": "uuid",
					"description": "This attribute represents the GUIDs used for the entity.\r\nEntities can be Company, Office, Person, Listings, Transaction etc. \r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"status": {
					"description": "This attribute represents the status of the entity. (Active, De-active) <br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"action": {
					"description": "This attribute represents the action (Insert, Update, Delete)<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"statusReason": {
					"description": "This attribute represents the reason of the Status. If the Status is Active, the reason can be Pending. If the Status is De-active, the reason can be Closed/Canceled<br />\r\nMax Length: 20 characters",
					"maxLength": 20,
					"minLength": 0,
					"type": "string"
				},
				"lastUpdatedBy": {
					"description": "This attribute represents the LastUpdated user name<br />\r\nMax Length: 30 characters",
					"maxLength": 30,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"User": {
			"description": "This class contains the attributes that represents the user",
			"type": "object",
			"properties": {
				"affiliateRoles": {
					"description": "This attribute represents the affiliate roles for the user",
					"type": "array",
					"items": {
						"$ref": "#/definitions/AffiliateRole"
					}
				},
				"corporateStaffGuid": {
					"format": "uuid",
					"description": "This attribute represents the CorporateStaffGuid for the user",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"corporateTitles": {
					"description": "This attribute represents the corporate roles/titles for the user",
					"type": "array",
					"items": {
						"$ref": "#/definitions/CorporateTitle"
					}
				},
				"personGuid": {
					"format": "uuid",
					"description": "This attribute represents the global unique identifier of the person.\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"salutation": {
					"description": "This attribute represents the Salutation of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"firstName": {
					"description": "This attribute represents the First Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"middleName": {
					"description": "This attribute represents the Middle Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"lastName": {
					"description": "This attribute represents the Last Name of the person<br />\r\nMax Length: 40 characters",
					"maxLength": 40,
					"minLength": 0,
					"type": "string"
				},
				"nameSuffix": {
					"description": "This attribute represents the Suffix given in the name of the person<br />\r\nMax Length: 15 characters",
					"maxLength": 15,
					"minLength": 0,
					"type": "string"
				},
				"personProviderIdentifier": {
					"description": "This attribute represents the Identifier of the Person in the provider system.<br />\r\nMax Length: 255 characters<br />\r\nMandatory while adding a new Staff",
					"maxLength": 255,
					"minLength": 0,
					"type": "string"
				},
				"primaryPhoneNumber": {
					"description": "This attribute represents Primary Phone<br />\r\nMax Length: 25 characters",
					"maxLength": 25,
					"minLength": 0,
					"type": "string"
				},
				"primaryEmailAddress": {
					"description": "This attribute represents Primary Email address. In case of add/update, invalid email address is not allowed<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string"
				},
				"vanityEmailAddress": {
					"description": "This attribute represents the Vanity Email address assigned to the person. It's read-only attribute<br />\r\nMax Length: 500 characters",
					"maxLength": 500,
					"minLength": 0,
					"type": "string",
					"readOnly": true
				},
				"primaryWebsite": {
					"description": "This attribute represents the Primary website<br />\r\nMax Length: 1000 characters<br />\r\nDataType: URL (only valid URL accepted)",
					"maxLength": 1000,
					"minLength": 0,
					"type": "string"
				}
			}
		},
		"AffiliateRole": {
			"description": "Affiliate role model",
			"type": "object",
			"properties": {
				"company": {
					"$ref": "#/definitions/CompanyBasicInfo",
					"description": "This attribute represents the Company where the role is assigned."
				},
				"companyStaffGUID": {
					"format": "uuid",
					"description": "This attribute represents the CompanyStaffGUID\r\nThis will be always of the format 32 hexadecimal digits separated by hyphens. <br />\r\nDataType: GUID (format: 00000000-0000-0000-0000-000000000000) <br />\r\nExample: 13a7337c-45e3-4eb4-a2b2-ee489b56ec8e",
					"type": "string",
					"example": "de305d54-75b4-431b-adb2-eb6b9e546014"
				},
				"roles": {
					"description": "This attribute represents the roles in various offices under the company",
					"type": "array",
					"items": {
						"$ref": "#/definitions/Role"
					}
				}
			}
		},
		"CorporateTitle": {
			"description": "This class contains the attributes representing the corporate staff titles",
			"type": "object",
			"properties": {
				"titleCode": {
					"description": "This attribute represents the corporate staff title code.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CorporateTitle<br />\r\nExamples: 1, 10 etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"titleDescription": {
					"description": "This attribute represents the corporate staff title description.\r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as CorporateTitle<br />\r\nExamples: Account Manager, Auditor etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"brand": {
					"description": "This attribute represents the corporate staff brand code",
					"enum": [
						"BHG",
						"C21",
						"CB",
						"CBC",
						"ERA",
						"SIR",
						"ZAP",
						"ZIP",
						"CLB",
						"COR"
					],
					"type": "string"
				}
			}
		},
		"Role": {
			"description": "This class represents the affiliate Role model",
			"type": "object",
			"properties": {
				"office": {
					"$ref": "#/definitions/OfficeIdentifier",
					"description": "This attribute represents the Office where the role is assigned."
				},
				"roleCode": {
					"description": "This attribute represents the Role code. Either RoleCode or RoleDescription is required, if Role is supplied. \r\nThe list of available codes can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffRole<br />\r\nExamples: BR, SA etc.<br />\r\nMax Length: 6 characters",
					"maxLength": 6,
					"minLength": 0,
					"type": "string"
				},
				"roleDescription": {
					"description": "This attribute represents the Role code. Either RoleCode or RoleDescription is required, if Role is supplied. \r\nThe list of available descriptions can be obtained by calling method - CodeValuesGet (/codevalues), passing categoryName as StaffRole<br />\r\nExamples: Broker, Sales Associate etc.<br />\r\nMax Length: 150 characters",
					"maxLength": 150,
					"minLength": 0,
					"type": "string"
				},
				"activeSince": {
					"format": "date-time",
					"description": "This attribute represents the ActiveSince of the role. <br />\r\nDataType: Date (Standard formats allowed are - yyyy-MM-dd OR MM/dd/yy OR MM/dd/yyyy OR dd-MMM-yy)",
					"type": "string"
				},
				"isFulltime": {
					"description": "This attribute represents the value indicating whether the staff is full time or part time<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				},
				"isShowOnInternet": {
					"description": "This attribute represents the value indicating whether to show on internet<br />\r\nDefault value: true (if the vendor does not send any value)",
					"type": "boolean"
				}
			}
		}
	},
	"securityDefinitions": {
		"oauth2": {
			"type": "oauth2",
			"description": "OAuth2 Implicit Grant",
			"flow": "implicit",
			"authorizationUrl": "https://solo.realogyfg.com",
			"scopes": {}
		}
	}
}